<?php

namespace ContainerSYgO7Pj;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getApiPlatform_Hydra_JsonSchema_SchemaFactory_InnerService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'api_platform.hydra.json_schema.schema_factory.inner' shared service.
     *
     * @return \ApiPlatform\JsonSchema\SchemaFactory
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/api-platform/json-schema/SchemaFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/api-platform/json-schema/SchemaFactoryAwareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/api-platform/json-schema/ResourceMetadataTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/api-platform/json-schema/SchemaFactory.php';

        $a = ($container->privates['api_platform.metadata.resource.metadata_collection_factory.cached'] ?? self::getApiPlatform_Metadata_Resource_MetadataCollectionFactory_CachedService($container));

        if (isset($container->privates['api_platform.hydra.json_schema.schema_factory.inner'])) {
            return $container->privates['api_platform.hydra.json_schema.schema_factory.inner'];
        }
        $b = ($container->privates['api_platform.metadata.property.metadata_factory.cached'] ?? self::getApiPlatform_Metadata_Property_MetadataFactory_CachedService($container));

        if (isset($container->privates['api_platform.hydra.json_schema.schema_factory.inner'])) {
            return $container->privates['api_platform.hydra.json_schema.schema_factory.inner'];
        }

        return $container->privates['api_platform.hydra.json_schema.schema_factory.inner'] = new \ApiPlatform\JsonSchema\SchemaFactory($a, ($container->privates['api_platform.metadata.property.name_collection_factory.cached'] ?? self::getApiPlatform_Metadata_Property_NameCollectionFactory_CachedService($container)), $b, ($container->privates['api_platform.hydra.name_converter.hydra_prefix'] ?? self::getApiPlatform_Hydra_NameConverter_HydraPrefixService($container)), ($container->privates['api_platform.resource_class_resolver'] ?? self::getApiPlatform_ResourceClassResolverService($container)), $container->parameters['api_platform.jsonschema_formats'], ($container->privates['api_platform.json_schema.definition_name_factory'] ?? $container->load('getApiPlatform_JsonSchema_DefinitionNameFactoryService')));
    }
}
