<?php

namespace ContainerJ65J2Sc;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Authenticator_Jwt_ApiService extends App_KernelTestContainer
{
    /*
     * Gets the private 'security.authenticator.jwt.api' shared service.
     *
     * @return \Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['lexik_jwt_authentication.jwt_manager'] ?? $container->load('getLexikJwtAuthentication_JwtManagerService'));

        if (isset($container->privates['security.authenticator.jwt.api'])) {
            return $container->privates['security.authenticator.jwt.api'];
        }
        $b = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->privates['security.authenticator.jwt.api'])) {
            return $container->privates['security.authenticator.jwt.api'];
        }

        return $container->privates['security.authenticator.jwt.api'] = new \Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator($a, $b, ($container->privates['lexik_jwt_authentication.extractor.chain_extractor'] ?? $container->load('getLexikJwtAuthentication_Extractor_ChainExtractorService')), ($container->privates['App\\Repository\\UserRepository'] ?? $container->load('getUserRepositoryService')), NULL);
    }
}
