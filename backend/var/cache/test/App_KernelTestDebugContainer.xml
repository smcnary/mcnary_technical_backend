<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.project_dir">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend</parameter>
    <parameter key="kernel.environment">test</parameter>
    <parameter key="kernel.runtime_environment">%env(default:kernel.environment:APP_RUNTIME_ENV)%</parameter>
    <parameter key="kernel.runtime_mode">%env(query_string:default:container.runtime_mode:APP_RUNTIME_MODE)%</parameter>
    <parameter key="kernel.runtime_mode.web">%env(bool:default::key:web:default:kernel.runtime_mode:)%</parameter>
    <parameter key="kernel.runtime_mode.cli">%env(not:default:kernel.runtime_mode.web:)%</parameter>
    <parameter key="kernel.runtime_mode.worker">%env(bool:default::key:worker:default:kernel.runtime_mode:)%</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.build_dir">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test</parameter>
    <parameter key="kernel.cache_dir">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test</parameter>
    <parameter key="kernel.logs_dir">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="NelmioCorsBundle">Nelmio\CorsBundle\NelmioCorsBundle</parameter>
      <parameter key="ApiPlatformBundle">ApiPlatform\Symfony\Bundle\ApiPlatformBundle</parameter>
      <parameter key="LexikJWTAuthenticationBundle">Lexik\Bundle\JWTAuthenticationBundle\LexikJWTAuthenticationBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/symfony/twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/symfony/security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="path">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/doctrine/doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="NelmioCorsBundle" type="collection">
        <parameter key="path">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/nelmio/cors-bundle</parameter>
        <parameter key="namespace">Nelmio\CorsBundle</parameter>
      </parameter>
      <parameter key="ApiPlatformBundle" type="collection">
        <parameter key="path">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/api-platform/symfony/Bundle</parameter>
        <parameter key="namespace">ApiPlatform\Symfony\Bundle</parameter>
      </parameter>
      <parameter key="LexikJWTAuthenticationBundle" type="collection">
        <parameter key="path">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/lexik/jwt-authentication-bundle</parameter>
        <parameter key="namespace">Lexik\Bundle\JWTAuthenticationBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">App_KernelTestDebugContainer</parameter>
    <parameter key="google_oauth_client_id">%env(GOOGLE_OAUTH_CLIENT_ID)%</parameter>
    <parameter key="google_oauth_client_secret">%env(GOOGLE_OAUTH_CLIENT_SECRET)%</parameter>
    <parameter key="google_oauth_redirect_uri">%env(GOOGLE_OAUTH_REDIRECT_URI)%</parameter>
    <parameter key="microsoft_oauth_client_id">%env(MICROSOFT_OAUTH_CLIENT_ID)%</parameter>
    <parameter key="microsoft_oauth_client_secret">%env(MICROSOFT_OAUTH_CLIENT_SECRET)%</parameter>
    <parameter key="microsoft_oauth_redirect_uri">%env(MICROSOFT_OAUTH_REDIRECT_URI)%</parameter>
    <parameter key="app_frontend_url">%env(APP_FRONTEND_URL)%</parameter>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleSignalEvent">console.signal</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationSuccessEvent">security.authentication.success</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\InteractiveLoginEvent">security.interactive_login</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\SwitchUserEvent">security.switch_user</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">false</parameter>
    <parameter key="kernel.trust_x_sendfile_type_header">%env(bool:default::SYMFONY_TRUST_X_SENDFILE_TYPE_HEADER)%</parameter>
    <parameter key="kernel.trusted_hosts">%env(default::SYMFONY_TRUSTED_HOSTS)%</parameter>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.enabled_locales" type="collection"/>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="kernel.trusted_proxies">%env(default::SYMFONY_TRUSTED_PROXIES)%</parameter>
    <parameter key="kernel.trusted_headers">%env(default::SYMFONY_TRUSTED_HEADERS)%</parameter>
    <parameter key="debug.file_link_format">%env(default::SYMFONY_IDE)%</parameter>
    <parameter key="test.client.parameters" type="collection"/>
    <parameter key="asset.request_context.base_path">null</parameter>
    <parameter key="asset.request_context.secure">null</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/App_KernelTestDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="router.cache_dir">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/serialization.php</parameter>
    <parameter key=".serializer.named_serializers" type="collection"/>
    <parameter key="cache.prefix.seed">_/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend.App_KernelTestDebugContainer</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_secure">auto</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="cookie_samesite">lax</parameter>
    </parameter>
    <parameter key="session.save_path">null</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="validator.mapping.cache.file">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/templates</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection"/>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key=".security.authentication.expose_security_errors" type="constant">Symfony\Component\Security\Http\Authentication\ExposeSecurityLevel::None</parameter>
    <parameter key="security.firewalls" type="collection">
      <parameter>dev</parameter>
      <parameter>login</parameter>
      <parameter>public_api</parameter>
      <parameter>google_oauth</parameter>
      <parameter>microsoft_oauth</parameter>
      <parameter>api</parameter>
    </parameter>
    <parameter key="security.logout_uris" type="collection"/>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="jsonb" type="collection">
        <parameter key="class">App\Doctrine\DBAL\Types\JsonbType</parameter>
      </parameter>
      <parameter key="uuid" type="collection">
        <parameter key="class">Symfony\Bridge\Doctrine\Types\UuidType</parameter>
      </parameter>
      <parameter key="ulid" type="collection">
        <parameter key="class">Symfony\Bridge\Doctrine\Types\UlidType</parameter>
      </parameter>
      <parameter key="date_point" type="collection">
        <parameter key="class">Symfony\Bridge\Doctrine\Types\DatePointType</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.attribute.class">Doctrine\ORM\Mapping\Driver\AttributeDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.typed_field_mapper.default.class">Doctrine\ORM\Mapping\DefaultTypedFieldMapper</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.enable_lazy_ghost_objects">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="doctrine.migrations.preferred_em">null</parameter>
    <parameter key="doctrine.migrations.preferred_connection">null</parameter>
    <parameter key="nelmio_cors.map" type="collection">
      <parameter key="^/" type="collection"/>
    </parameter>
    <parameter key="nelmio_cors.defaults" type="collection">
      <parameter key="allow_origin" type="collection">
        <parameter>%env(CORS_ALLOW_ORIGIN)%</parameter>
      </parameter>
      <parameter key="allow_credentials">false</parameter>
      <parameter key="allow_headers" type="collection">
        <parameter>content-type</parameter>
        <parameter>authorization</parameter>
      </parameter>
      <parameter key="allow_private_network">false</parameter>
      <parameter key="expose_headers" type="collection">
        <parameter>Link</parameter>
      </parameter>
      <parameter key="allow_methods" type="collection">
        <parameter>GET</parameter>
        <parameter>OPTIONS</parameter>
        <parameter>POST</parameter>
        <parameter>PUT</parameter>
        <parameter>PATCH</parameter>
        <parameter>DELETE</parameter>
      </parameter>
      <parameter key="max_age">3600</parameter>
      <parameter key="hosts" type="collection"/>
      <parameter key="origin_regex">true</parameter>
      <parameter key="forced_allow_origin_value">null</parameter>
      <parameter key="skip_same_as_origin">true</parameter>
    </parameter>
    <parameter key="nelmio_cors.cors_listener.class">Nelmio\CorsBundle\EventListener\CorsListener</parameter>
    <parameter key="nelmio_cors.options_resolver.class">Nelmio\CorsBundle\Options\Resolver</parameter>
    <parameter key="nelmio_cors.options_provider.config.class">Nelmio\CorsBundle\Options\ConfigProvider</parameter>
    <parameter key="api_platform.use_symfony_listeners">false</parameter>
    <parameter key="api_platform.serializer.default_context" type="collection">
      <parameter key="hydra_prefix">false</parameter>
    </parameter>
    <parameter key="api_platform.enable_entrypoint">true</parameter>
    <parameter key="api_platform.enable_docs">true</parameter>
    <parameter key="api_platform.title">Hello API Platform</parameter>
    <parameter key="api_platform.description"></parameter>
    <parameter key="api_platform.version">1.0.0</parameter>
    <parameter key="api_platform.show_webby">true</parameter>
    <parameter key="api_platform.url_generation_strategy">1</parameter>
    <parameter key="api_platform.exception_to_status" type="collection">
      <parameter key="Symfony\Component\Serializer\Exception\ExceptionInterface">400</parameter>
      <parameter key="ApiPlatform\Metadata\Exception\InvalidArgumentException">400</parameter>
      <parameter key="Doctrine\ORM\OptimisticLockException">409</parameter>
    </parameter>
    <parameter key="api_platform.formats" type="collection">
      <parameter key="jsonld" type="collection">
        <parameter>application/ld+json</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.patch_formats" type="collection">
      <parameter key="json" type="collection">
        <parameter>application/merge-patch+json</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.error_formats" type="collection">
      <parameter key="jsonld" type="collection">
        <parameter>application/ld+json</parameter>
      </parameter>
      <parameter key="jsonproblem" type="collection">
        <parameter>application/problem+json</parameter>
      </parameter>
      <parameter key="json" type="collection">
        <parameter>application/problem+json</parameter>
        <parameter>application/json</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.docs_formats" type="collection">
      <parameter key="jsonld" type="collection">
        <parameter>application/ld+json</parameter>
      </parameter>
      <parameter key="jsonopenapi" type="collection">
        <parameter>application/vnd.openapi+json</parameter>
      </parameter>
      <parameter key="html" type="collection">
        <parameter>text/html</parameter>
      </parameter>
      <parameter key="yamlopenapi" type="collection">
        <parameter>application/vnd.openapi+yaml</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.jsonschema_formats" type="collection">
      <parameter key="jsonld">true</parameter>
      <parameter key="jsonproblem">true</parameter>
      <parameter key="json">true</parameter>
    </parameter>
    <parameter key="api_platform.eager_loading.enabled">true</parameter>
    <parameter key="api_platform.eager_loading.max_joins">30</parameter>
    <parameter key="api_platform.eager_loading.fetch_partial">false</parameter>
    <parameter key="api_platform.eager_loading.force_eager">true</parameter>
    <parameter key="api_platform.collection.exists_parameter_name">exists</parameter>
    <parameter key="api_platform.collection.order">ASC</parameter>
    <parameter key="api_platform.collection.order_parameter_name">order</parameter>
    <parameter key="api_platform.collection.order_nulls_comparison">null</parameter>
    <parameter key="api_platform.collection.pagination.enabled">true</parameter>
    <parameter key="api_platform.collection.pagination.partial">false</parameter>
    <parameter key="api_platform.collection.pagination.client_enabled">false</parameter>
    <parameter key="api_platform.collection.pagination.client_items_per_page">false</parameter>
    <parameter key="api_platform.collection.pagination.client_partial">false</parameter>
    <parameter key="api_platform.collection.pagination.items_per_page">30</parameter>
    <parameter key="api_platform.collection.pagination.maximum_items_per_page">null</parameter>
    <parameter key="api_platform.collection.pagination.page_parameter_name">page</parameter>
    <parameter key="api_platform.collection.pagination.enabled_parameter_name">pagination</parameter>
    <parameter key="api_platform.collection.pagination.items_per_page_parameter_name">itemsPerPage</parameter>
    <parameter key="api_platform.collection.pagination.partial_parameter_name">partial</parameter>
    <parameter key="api_platform.collection.pagination" type="collection">
      <parameter key="enabled">true</parameter>
      <parameter key="page_parameter_name">page</parameter>
      <parameter key="enabled_parameter_name">pagination</parameter>
      <parameter key="items_per_page_parameter_name">itemsPerPage</parameter>
      <parameter key="partial_parameter_name">partial</parameter>
    </parameter>
    <parameter key="api_platform.handle_symfony_errors">false</parameter>
    <parameter key="api_platform.http_cache.etag">true</parameter>
    <parameter key="api_platform.http_cache.max_age">null</parameter>
    <parameter key="api_platform.http_cache.shared_max_age">null</parameter>
    <parameter key="api_platform.http_cache.vary" type="collection">
      <parameter>Content-Type</parameter>
      <parameter>Authorization</parameter>
      <parameter>Origin</parameter>
    </parameter>
    <parameter key="api_platform.http_cache.public">null</parameter>
    <parameter key="api_platform.http_cache.invalidation.max_header_length">7500</parameter>
    <parameter key="api_platform.http_cache.invalidation.xkey.glue"> </parameter>
    <parameter key="api_platform.asset_package">null</parameter>
    <parameter key="api_platform.defaults" type="collection">
      <parameter key="extra_properties" type="collection"/>
      <parameter key="stateless">true</parameter>
      <parameter key="cache_headers" type="collection">
        <parameter key="vary" type="collection">
          <parameter>Content-Type</parameter>
          <parameter>Authorization</parameter>
          <parameter>Origin</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.resource_class_directories" type="collection">
      <parameter>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/src/ApiResource</parameter>
      <parameter>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/src/Entity</parameter>
    </parameter>
    <parameter key="api_platform.class_name_resources" type="collection">
      <parameter>ApiPlatform\State\ApiResource\Error</parameter>
      <parameter>ApiPlatform\Validator\Exception\ValidationException</parameter>
    </parameter>
    <parameter key="api_platform.oauth.enabled">false</parameter>
    <parameter key="api_platform.oauth.clientId"></parameter>
    <parameter key="api_platform.oauth.clientSecret"></parameter>
    <parameter key="api_platform.oauth.type">oauth2</parameter>
    <parameter key="api_platform.oauth.flow">application</parameter>
    <parameter key="api_platform.oauth.tokenUrl"></parameter>
    <parameter key="api_platform.oauth.authorizationUrl"></parameter>
    <parameter key="api_platform.oauth.refreshUrl"></parameter>
    <parameter key="api_platform.oauth.scopes" type="collection"/>
    <parameter key="api_platform.oauth.pkce">false</parameter>
    <parameter key="api_platform.openapi.termsOfService">null</parameter>
    <parameter key="api_platform.openapi.contact.name">null</parameter>
    <parameter key="api_platform.openapi.contact.url">null</parameter>
    <parameter key="api_platform.openapi.contact.email">null</parameter>
    <parameter key="api_platform.openapi.license.name">null</parameter>
    <parameter key="api_platform.openapi.license.url">null</parameter>
    <parameter key="api_platform.openapi.overrideResponses">true</parameter>
    <parameter key="api_platform.openapi.tags" type="collection"/>
    <parameter key="api_platform.swagger.versions" type="collection">
      <parameter>3</parameter>
    </parameter>
    <parameter key="api_platform.enable_swagger_ui">true</parameter>
    <parameter key="api_platform.enable_re_doc">true</parameter>
    <parameter key="api_platform.swagger.api_keys" type="collection"/>
    <parameter key="api_platform.swagger.persist_authorization">false</parameter>
    <parameter key="api_platform.swagger.http_auth" type="collection"/>
    <parameter key="api_platform.swagger_ui.extra_configuration" type="collection"/>
    <parameter key="api_platform.graphql.enabled">false</parameter>
    <parameter key="api_platform.graphql.max_query_depth">20</parameter>
    <parameter key="api_platform.graphql.max_query_complexity">500</parameter>
    <parameter key="api_platform.graphql.introspection.enabled">false</parameter>
    <parameter key="api_platform.graphql.graphiql.enabled">false</parameter>
    <parameter key="api_platform.graphql.collection.pagination" type="collection">
      <parameter key="enabled">true</parameter>
    </parameter>
    <parameter key="api_platform.validator.serialize_payload_fields" type="collection"/>
    <parameter key="api_platform.validator.query_parameter_validation">true</parameter>
    <parameter key="api_platform.elasticsearch.enabled">false</parameter>
    <parameter key="lexik_jwt_authentication.pass_phrase">%env(JWT_PASSPHRASE)%</parameter>
    <parameter key="lexik_jwt_authentication.token_ttl">86400</parameter>
    <parameter key="lexik_jwt_authentication.clock_skew">0</parameter>
    <parameter key="lexik_jwt_authentication.allow_no_expiration">false</parameter>
    <parameter key="lexik_jwt_authentication.user_id_claim">username</parameter>
    <parameter key="lexik_jwt_authentication.encoder.signature_algorithm">RS256</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.deprecation" type="collection">
        <parameter key="type">inclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>deprecation</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>deprecation</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection"/>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\Kernel" public="true" synthetic="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="routing.route_loader"/>
    </service>
    <service id="App\Entity" class="App\Entity" abstract="true">
      <tag name="container.excluded" source="in &quot;config/services.yaml&quot;"/>
    </service>
    <service id="App\ApiPlatform\TenantExtension" class="App\ApiPlatform\TenantExtension" autowire="true" autoconfigure="true">
      <tag name="api_platform.doctrine.orm.query_extension.collection"/>
      <tag name="api_platform.doctrine.orm.query_extension.item"/>
      <argument type="service" id="security.helper"/>
    </service>
    <service id="App\Command\CreateClientCommand" class="App\Command\CreateClientCommand" autowire="true" autoconfigure="true">
      <tag name="console.command" command="app:create-client" description="Create a new client (law firm)" help=""/>
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setName">
        <argument>app:create-client</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new client (law firm)</argument>
      </call>
    </service>
    <service id="App\Command\CreatePackageCommand" class="App\Command\CreatePackageCommand" autowire="true" autoconfigure="true">
      <tag name="console.command" command="app:create-package" description="Create a new pricing package" help=""/>
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setName">
        <argument>app:create-package</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new pricing package</argument>
      </call>
    </service>
    <service id="App\Command\CreateSystemAccountCommand" class="App\Command\CreateSystemAccountCommand" autowire="true" autoconfigure="true">
      <tag name="console.command" command="app:create-system-account" description="Create a new system account for backend operations" help=""/>
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="App\Service\SystemAccountService"/>
      <call method="setName">
        <argument>app:create-system-account</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new system account for backend operations</argument>
      </call>
    </service>
    <service id="App\Command\CreateUserCommand" class="App\Command\CreateUserCommand" autowire="true" autoconfigure="true">
      <tag name="console.command" command="app:create-user" description="Create a new user with role-based access control" help=""/>
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.user_password_hasher"/>
      <call method="setName">
        <argument>app:create-user</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new user with role-based access control</argument>
      </call>
    </service>
    <service id="App\Controller\Api\V1\AgencyController" class="App\Controller\Api\V1\AgencyController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\AgencyRepository"/>
      <argument type="service" id="App\Repository\UserRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.user_password_hasher"/>
      <argument type="service" id="validator"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\AgencyController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\AuditFindingsController" class="App\Controller\Api\V1\AuditFindingsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\AuditFindingRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\AuditFindingsController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\AuditIntakeController" class="App\Controller\Api\V1\AuditIntakeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\AuditIntakeValidationService"/>
      <argument type="service" id="validator"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\AuditIntakeController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\AuditsController" class="App\Controller\Api\V1\AuditsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\AuditRunRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="validator"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\AuditsController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\AuthController" class="App\Controller\Api\V1\AuthController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\UserRepository"/>
      <argument type="service" id="security.user_password_hasher"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="validator"/>
      <argument type="service" id="http_client.uri_template"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Repository\OAuthConnectionRepository"/>
      <argument type="service" id="App\Repository\OAuthTokenRepository"/>
      <argument type="service" id="App\Repository\ClientRepository"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\AuthController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\BacklinksController" class="App\Controller\Api\V1\BacklinksController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\BacklinkRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="validator"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\BacklinksController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\CampaignsController" class="App\Controller\Api\V1\CampaignsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\CampaignRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="validator"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\CampaignsController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\CitationsController" class="App\Controller\Api\V1\CitationsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\CitationRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="validator"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\CitationsController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\ClientController" class="App\Controller\Api\V1\ClientController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\ClientRepository"/>
      <argument type="service" id="App\Repository\OrganizationRepository"/>
      <argument type="service" id="App\Repository\TenantRepository"/>
      <argument type="service" id="App\Repository\UserRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.user_password_hasher"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="validator"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\ClientController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\ContentBriefsController" class="App\Controller\Api\V1\ContentBriefsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\ContentBriefRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="validator"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\ContentBriefsController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\ContentItemsController" class="App\Controller\Api\V1\ContentItemsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\ContentItemRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="validator"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\ContentItemsController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\FaqsController" class="App\Controller\Api\V1\FaqsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\FaqRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\FaqsController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\InvoicesController" class="App\Controller\Api\V1\InvoicesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\InvoiceRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\InvoicesController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\KeywordsController" class="App\Controller\Api\V1\KeywordsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\KeywordRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="validator"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\KeywordsController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\LeadsController" class="App\Controller\Api\V1\LeadsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\LeadRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="validator"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\LeadsController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\MediaAssetsController" class="App\Controller\Api\V1\MediaAssetsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\MediaAssetRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\MediaAssetsController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\PackagesController" class="App\Controller\Api\V1\PackagesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\PackageRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\PackagesController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\PagesController" class="App\Controller\Api\V1\PagesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\PageRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\PagesController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\RankingsController" class="App\Controller\Api\V1\RankingsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\KeywordRankingRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\RankingsController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\RecommendationsController" class="App\Controller\Api\V1\RecommendationsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\RecommendationRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="validator"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\RecommendationsController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\ReviewsController" class="App\Controller\Api\V1\ReviewsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\ReviewRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="validator"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\ReviewsController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\SubscriptionsController" class="App\Controller\Api\V1\SubscriptionsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\SubscriptionRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="validator"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\SubscriptionsController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\UploadsController" class="App\Controller\Api\V1\UploadsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="validator"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\UploadsController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\UserController" class="App\Controller\Api\V1\UserController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\UserRepository"/>
      <argument type="service" id="App\Repository\ClientRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.user_password_hasher"/>
      <argument type="service" id="validator"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\UserController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\UserProfileController" class="App\Controller\Api\V1\UserProfileController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\UserRepository"/>
      <argument type="service" id="App\Repository\AgencyRepository"/>
      <argument type="service" id="App\Repository\ClientRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\UserProfileController"/>
      </call>
    </service>
    <service id="App\Controller\Api\V1\WebhooksController" class="App\Controller\Api\V1\WebhooksController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\Api\V1\WebhooksController"/>
      </call>
    </service>
    <service id="App\Controller\AuthController" class="App\Controller\AuthController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\UserRepository"/>
      <argument type="service" id="security.user_password_hasher"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ZyP9f7K.App\Controller\AuthController"/>
      </call>
    </service>
    <service id="App\Doctrine\DBAL\Types\JsonbType" class="App\Doctrine\DBAL\Types\JsonbType" autowire="true" autoconfigure="true"/>
    <service id="App\EventSubscriber\TenantFilterSubscriber" class="App\EventSubscriber\TenantFilterSubscriber" autowire="true" autoconfigure="true"/>
    <service id="App\MultiTenancy\TenantResolver" class="App\MultiTenancy\TenantResolver" autowire="true" autoconfigure="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="App\Repository\TenantRepository"/>
    </service>
    <service id="App\Repository\AgencyRepository" class="App\Repository\AgencyRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\AuditCompetitorRepository" class="App\Repository\AuditCompetitorRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\AuditConversionGoalRepository" class="App\Repository\AuditConversionGoalRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\AuditFindingRepository" class="App\Repository\AuditFindingRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\AuditIntakeRepository" class="App\Repository\AuditIntakeRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\AuditKeywordRepository" class="App\Repository\AuditKeywordRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\AuditRunRepository" class="App\Repository\AuditRunRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\BacklinkRepository" class="App\Repository\BacklinkRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CampaignRepository" class="App\Repository\CampaignRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CaseStudyRepository" class="App\Repository\CaseStudyRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CitationRepository" class="App\Repository\CitationRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ClientRepository" class="App\Repository\ClientRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ContentBriefRepository" class="App\Repository\ContentBriefRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ContentItemRepository" class="App\Repository\ContentItemRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\FaqRepository" class="App\Repository\FaqRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\InvoiceRepository" class="App\Repository\InvoiceRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\KeywordRankingRepository" class="App\Repository\KeywordRankingRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\KeywordRepository" class="App\Repository\KeywordRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\LeadRepository" class="App\Repository\LeadRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\MediaAssetRepository" class="App\Repository\MediaAssetRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\OAuthConnectionRepository" class="App\Repository\OAuthConnectionRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\OAuthTokenRepository" class="App\Repository\OAuthTokenRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\OrganizationRepository" class="App\Repository\OrganizationRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PackageRepository" class="App\Repository\PackageRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PageRepository" class="App\Repository\PageRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\RecommendationRepository" class="App\Repository\RecommendationRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ReviewRepository" class="App\Repository\ReviewRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\SubscriptionRepository" class="App\Repository\SubscriptionRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TenantRepository" class="App\Repository\TenantRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\UserRepository" class="App\Repository\UserRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Service\AuditIntakeValidationService" class="App\Service\AuditIntakeValidationService" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Repository\ClientRepository"/>
    </service>
    <service id="App\Service\SystemAccountService" class="App\Service\SystemAccountService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.helper"/>
    </service>
    <service id="App\Validator\AuditIntakeClient" class="App\Validator\AuditIntakeClient" autowire="true" autoconfigure="true">
      <tag name="container.excluded" source="because it's a PHP attribute"/>
      <tag name="container.excluded" source="because it's a validation constraint"/>
    </service>
    <service id="App\Validator\AuditIntakeClientValidator" class="App\Validator\AuditIntakeClientValidator" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="App\Repository\ClientRepository"/>
    </service>
    <service id="App\Validator\Constraints\DomainOrUrl" class="App\Validator\Constraints\DomainOrUrl" autowire="true" autoconfigure="true">
      <tag name="container.excluded" source="because it's a PHP attribute"/>
      <tag name="container.excluded" source="because it's a validation constraint"/>
    </service>
    <service id="App\Validator\Constraints\DomainOrUrlValidator" class="App\Validator\Constraints\DomainOrUrlValidator" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory"/>
    <service id="argument_resolver.backed_enum_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.uid" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\UidValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\UidValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.datetime" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id="clock" on-invalid="null"/>
    </service>
    <service id="argument_resolver.request_payload" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver" lazy="true">
      <tag name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver">controller.targeted_value_resolver</tag>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="validator" on-invalid="null"/>
      <argument>null</argument>
      <argument>validators</argument>
    </service>
    <service id="argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver">
      <tag priority="50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver">
      <tag priority="50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">
      <tag priority="-50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id=".service_locator.F6vdjrP"/>
    </service>
    <service id="argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver">
      <tag priority="-100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver">
      <tag priority="-150" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.query_parameter_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver">
      <tag name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver">controller.targeted_value_resolver</tag>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
      <argument>false</argument>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>false</argument>
      <argument type="collection"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="error_handler.error_renderer.serializer"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener">
      <tag name="monolog.logger" channel="request"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="controller.cache_attribute_listener" class="Symfony\Component\HttpKernel\EventListener\CacheAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\HttpKernelRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\ResponseRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\SymfonyRuntime"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
      <argument>true</argument>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true">
      <tag name="kernel.reset" method="resetRequestFormats" on_invalid="ignore"/>
    </service>
    <service id="http_cache" class="Symfony\Bundle\FrameworkBundle\HttpCache\HttpCache">
      <tag name="container.hot_path"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="http_cache.store"/>
      <argument>null</argument>
      <argument type="collection">
        <argument key="debug">true</argument>
      </argument>
    </service>
    <service id="http_cache.store" class="Symfony\Component\HttpKernel\HttpCache\Store">
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/http_cache</argument>
    </service>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <tag name="container.no_preload"/>
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/App_KernelTestDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpFoundation\UriSigner" lazy="true">
      <argument>%kernel.secret%</argument>
      <argument>_hash</argument>
      <argument>_expiration</argument>
      <argument type="service" id="clock" on-invalid="null"/>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore_uninitialized"/>
        <argument key="container.env_var_processor" type="service" id="container.env_var_processor" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.transport" type="service" id="http_client.transport" on-invalid="ignore_uninitialized"/>
        <argument key="http_client" type="service" id="http_client.uri_template" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="debug.log_processor" type="service" id="debug.log_processor" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_granted_attribute_expression_language" type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_csrf_token_valid_attribute_expression_language" type="service" id="cache.security_is_csrf_token_valid_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.access.decision_manager" type="service" id="debug.security.access.decision_manager" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall" type="service" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall.authenticator.api" type="service" id="debug.security.firewall.authenticator.api" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.debug_data_holder" type="service" id="doctrine.debug_data_holder" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource_collection" type="service" id="api_platform.cache.metadata.resource_collection" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.openapi" type="service" id="api_platform.cache.openapi" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.deprecation" type="service" id="monolog.handler.deprecation" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.event_dispatcher.api" type="service" id="debug.security.event_dispatcher.api" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="request_stack" type="collection">
          <argument>?resetRequestFormats</argument>
        </argument>
        <argument key="container.env_var_processor" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="http_client.transport" type="collection">
          <argument>?reset</argument>
        </argument>
        <argument key="http_client" type="collection">
          <argument>?reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.log_processor" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="twig" type="collection">
          <argument>resetGlobals</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.security_is_granted_attribute_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.security_is_csrf_token_valid_attribute_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.security.access.decision_manager" type="collection">
          <argument>?reset</argument>
        </argument>
        <argument key="debug.security.firewall" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.security.firewall.authenticator.api" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine.debug_data_holder" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.route_name_resolver" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.metadata.resource" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.metadata.property" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.metadata.resource_collection" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.openapi" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.main" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.deprecation" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.security.event_dispatcher.api" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.NLcq8cs"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="slugger"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor">
      <tag name="container.env_var_processor"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="slugger" class="Symfony\Component\String\Slugger\AsciiSlugger">
      <tag name="kernel.locale_aware"/>
      <argument>en</argument>
    </service>
    <service id="container.getenv" class="Closure">
      <tag name="routing.expression_language_function" function="env"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>getEnv</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.get_routing_condition_service" class="Closure" public="true">
      <tag name="routing.expression_language_function" function="service"/>
      <argument type="collection">
        <argument type="service" id=".service_locator.GIuJv7e"/>
        <argument>get</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.env" class="Symfony\Component\String\LazyString" constructor="fromCallable" abstract="true">
      <argument type="service" id="container.getenv"/>
    </service>
    <service id="config_builder.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ConfigBuilderCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="clock" class="Symfony\Component\Clock\Clock"/>
    <service id="Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Request" class="Symfony\Component\HttpFoundation\Request" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Response" class="Symfony\Component\HttpFoundation\Response" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" class="Symfony\Component\HttpFoundation\Session\SessionInterface" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id=".service_locator.va_rxC4"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.uri_generator" class="Symfony\Component\HttpKernel\Fragment\FragmentUriGenerator">
      <argument>/_fragment</argument>
      <argument type="service" id="uri_signer"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend</argument>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
        </service>
      </argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="process.messenger.process_message_handler" class="Symfony\Component\Process\Messenger\RunProcessMessageHandler">
      <tag name="messenger.message_handler"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener">
      <tag name="monolog.logger" channel="console"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>about</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about the current project</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="filesystem"/>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
      <call method="setDescription">
        <argument>Install bundle's web assets under a public directory</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear the cache</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.property_info</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.security_is_granted_attribute_expression_language</argument>
        <argument>cache.security_is_csrf_token_valid_attribute_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument>api_platform.cache.metadata.resource</argument>
        <argument>api_platform.cache.metadata.property</argument>
        <argument>api_platform.cache.metadata.resource_collection</argument>
        <argument>api_platform.cache.openapi</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
      <call method="setDescription">
        <argument>Prune cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_invalidate_tags" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolInvalidateTagsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.DOrA4Nm"/>
      <call method="setName">
        <argument>cache:pool:invalidate-tags</argument>
      </call>
      <call method="setDescription">
        <argument>Invalidate cache tags for all or a specific pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.property_info</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.security_is_granted_attribute_expression_language</argument>
        <argument>cache.security_is_csrf_token_valid_attribute_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument>api_platform.cache.metadata.resource</argument>
        <argument>api_platform.cache.metadata.property</argument>
        <argument>api_platform.cache.metadata.resource_collection</argument>
        <argument>api_platform.cache.openapi</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
      <call method="setDescription">
        <argument>Delete an item from a cache pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.property_info</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.security_is_granted_attribute_expression_language</argument>
        <argument>cache.security_is_csrf_token_valid_attribute_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument>api_platform.cache.metadata.resource</argument>
        <argument>api_platform.cache.metadata.property</argument>
        <argument>api_platform.cache.metadata.resource_collection</argument>
        <argument>api_platform.cache.openapi</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
      <call method="setDescription">
        <argument>List available cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
      <call method="setDescription">
        <argument>Warm up an empty cache</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the current configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the default configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
      <call method="setDescription">
        <argument>Display current services for an application</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
      <call method="setDescription">
        <argument>Ensure that arguments injected into services match type declarations</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
      <call method="setDescription">
        <argument>List classes/interfaces you can use for autowiring</argument>
      </call>
    </service>
    <service id="console.command.dotenv_debug" class="Symfony\Component\Dotenv\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>test</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend</argument>
      <call method="setName">
        <argument>debug:dotenv</argument>
      </call>
      <call method="setDescription">
        <argument>List all dotenv files with variables and values</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.8GlXtTV"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
      <call method="setDescription">
        <argument>Display configured listeners for an application</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
      <call method="setDescription">
        <argument>Display current routes for an application</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
      <call method="setDescription">
        <argument>Help debug routes by simulating a path info match</argument>
      </call>
    </service>
    <service id="console.command.serializer_debug" class="Symfony\Component\Serializer\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory"/>
      <call method="setName">
        <argument>debug:serializer</argument>
      </call>
      <call method="setDescription">
        <argument>Display serialization information for classes</argument>
      </call>
    </service>
    <service id="console.command.validator_debug" class="Symfony\Component\Validator\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="validator"/>
      <call method="setName">
        <argument>debug:validator</argument>
      </call>
      <call method="setDescription">
        <argument>Display validation constraints for classes</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a YAML file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
      <call method="setDescription">
        <argument>Set a secret in the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
      <call method="setDescription">
        <argument>Remove a secret from the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
      <call method="setDescription">
        <argument>Generate new encryption keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
      <call method="setDescription">
        <argument>List all secrets</argument>
      </call>
    </service>
    <service id="console.command.secrets_reveal" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRevealCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:reveal</argument>
      </call>
      <call method="setDescription">
        <argument>Reveal the value of a secret</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
      <call method="setDescription">
        <argument>Decrypt all secrets and stores them in the local vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
      <call method="setDescription">
        <argument>Encrypt all local secrets to the vault</argument>
      </call>
    </service>
    <service id="console.command.error_dumper" class="Symfony\Component\ErrorHandler\Command\ErrorDumpCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="filesystem"/>
      <argument type="service" id="twig.error_renderer.html"/>
      <argument>null</argument>
      <call method="setName">
        <argument>error:dump</argument>
      </call>
      <call method="setDescription">
        <argument>Dump error pages to plain HTML files that can be directly served by a web server</argument>
      </call>
    </service>
    <service id="console.messenger.application" class="Symfony\Bundle\FrameworkBundle\Console\Application" shared="false">
      <argument type="service" id="kernel"/>
      <call method="setAutoExit">
        <argument>false</argument>
      </call>
    </service>
    <service id="console.messenger.execute_command_handler" class="Symfony\Component\Console\Messenger\RunCommandMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="console.messenger.application"/>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>tLtVHVQxYC</argument>
      <argument>0</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <tag name="cache.taggable" pool="cache.app"/>
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>ftpwOiVz0Z</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>jvf264wB86</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>TXDQRTEYxR</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>p8NvSyqwmg</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument type="abstract">PSR-6 provider service</argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.redis_tag_aware" class="Symfony\Component\Cache\Adapter\RedisTagAwareAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Memcached connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine_dbal" class="Symfony\Component\Cache\Adapter\DoctrineDbalAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_dbal_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">DBAL connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">PDO connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller">
      <argument>null</argument>
      <argument>true</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_granted_attribute_expression_language" type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_csrf_token_valid_attribute_expression_language" type="service" id="cache.security_is_csrf_token_valid_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource_collection" type="service" id="api_platform.cache.metadata.resource_collection" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.openapi" type="service" id="api_platform.cache.openapi" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_granted_attribute_expression_language" type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_is_csrf_token_valid_attribute_expression_language" type="service" id="cache.security_is_csrf_token_valid_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource_collection" type="service" id="api_platform.cache.metadata.resource_collection" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.openapi" type="service" id="api_platform.cache.openapi" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="test.client" class="Symfony\Bundle\FrameworkBundle\KernelBrowser" shared="false" public="true">
      <argument type="service" id="kernel"/>
      <argument type="collection"/>
      <argument type="service" id="test.client.history"/>
      <argument type="service" id="test.client.cookiejar"/>
    </service>
    <service id="test.client.history" class="Symfony\Component\BrowserKit\History" shared="false"/>
    <service id="test.client.cookiejar" class="Symfony\Component\BrowserKit\CookieJar" shared="false"/>
    <service id="test.session.listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.9ba7RnD"/>
      <argument>true</argument>
      <argument>%session.storage.options%</argument>
    </service>
    <service id="test.service_container" class="Symfony\Bundle\FrameworkBundle\Test\TestContainer" public="true">
      <argument type="service" id="kernel"/>
      <argument>test.private_services_locator</argument>
    </service>
    <service id="test.private_services_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="true">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\ApiPlatform\TenantExtension" type="service_closure" id="App\ApiPlatform\TenantExtension" on-invalid="ignore_uninitialized"/>
        <argument key="App\Command\CreateClientCommand" type="service_closure" id="App\Command\CreateClientCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Command\CreatePackageCommand" type="service_closure" id="App\Command\CreatePackageCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Command\CreateSystemAccountCommand" type="service_closure" id="App\Command\CreateSystemAccountCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Command\CreateUserCommand" type="service_closure" id="App\Command\CreateUserCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Doctrine\DBAL\Types\JsonbType" type="service_closure" id="App\Doctrine\DBAL\Types\JsonbType" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventSubscriber\TenantFilterSubscriber" type="service_closure" id="App\EventSubscriber\TenantFilterSubscriber" on-invalid="ignore_uninitialized"/>
        <argument key="App\MultiTenancy\TenantResolver" type="service_closure" id="App\MultiTenancy\TenantResolver" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\AgencyRepository" type="service_closure" id="App\Repository\AgencyRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\AuditCompetitorRepository" type="service_closure" id="App\Repository\AuditCompetitorRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\AuditConversionGoalRepository" type="service_closure" id="App\Repository\AuditConversionGoalRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\AuditFindingRepository" type="service_closure" id="App\Repository\AuditFindingRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\AuditIntakeRepository" type="service_closure" id="App\Repository\AuditIntakeRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\AuditKeywordRepository" type="service_closure" id="App\Repository\AuditKeywordRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\AuditRunRepository" type="service_closure" id="App\Repository\AuditRunRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\BacklinkRepository" type="service_closure" id="App\Repository\BacklinkRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\CampaignRepository" type="service_closure" id="App\Repository\CampaignRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\CaseStudyRepository" type="service_closure" id="App\Repository\CaseStudyRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\CitationRepository" type="service_closure" id="App\Repository\CitationRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\ClientRepository" type="service_closure" id="App\Repository\ClientRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\ContentBriefRepository" type="service_closure" id="App\Repository\ContentBriefRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\ContentItemRepository" type="service_closure" id="App\Repository\ContentItemRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\FaqRepository" type="service_closure" id="App\Repository\FaqRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\InvoiceRepository" type="service_closure" id="App\Repository\InvoiceRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\KeywordRankingRepository" type="service_closure" id="App\Repository\KeywordRankingRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\KeywordRepository" type="service_closure" id="App\Repository\KeywordRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\LeadRepository" type="service_closure" id="App\Repository\LeadRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\MediaAssetRepository" type="service_closure" id="App\Repository\MediaAssetRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\OAuthConnectionRepository" type="service_closure" id="App\Repository\OAuthConnectionRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\OAuthTokenRepository" type="service_closure" id="App\Repository\OAuthTokenRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\OrganizationRepository" type="service_closure" id="App\Repository\OrganizationRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\PackageRepository" type="service_closure" id="App\Repository\PackageRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\PageRepository" type="service_closure" id="App\Repository\PageRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\RecommendationRepository" type="service_closure" id="App\Repository\RecommendationRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\ReviewRepository" type="service_closure" id="App\Repository\ReviewRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\SubscriptionRepository" type="service_closure" id="App\Repository\SubscriptionRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\TenantRepository" type="service_closure" id="App\Repository\TenantRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\UserRepository" type="service_closure" id="App\Repository\UserRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\AuditIntakeValidationService" type="service_closure" id="App\Service\AuditIntakeValidationService" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\SystemAccountService" type="service_closure" id="App\Service\SystemAccountService" on-invalid="ignore_uninitialized"/>
        <argument key="App\Validator\AuditIntakeClient" type="service_closure" id="App\Validator\AuditIntakeClient" on-invalid="ignore_uninitialized"/>
        <argument key="App\Validator\AuditIntakeClientValidator" type="service_closure" id="App\Validator\AuditIntakeClientValidator" on-invalid="ignore_uninitialized"/>
        <argument key="App\Validator\Constraints\DomainOrUrl" type="service_closure" id="App\Validator\Constraints\DomainOrUrl" on-invalid="ignore_uninitialized"/>
        <argument key="App\Validator\Constraints\DomainOrUrlValidator" type="service_closure" id="App\Validator\Constraints\DomainOrUrlValidator" on-invalid="ignore_uninitialized"/>
        <argument key="argument_metadata_factory" type="service_closure" id="argument_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.backed_enum_resolver" type="service_closure" id="argument_resolver.backed_enum_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.uid" type="service_closure" id="argument_resolver.uid" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.datetime" type="service_closure" id="argument_resolver.datetime" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request_payload" type="service_closure" id="argument_resolver.request_payload" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request_attribute" type="service_closure" id="argument_resolver.request_attribute" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request" type="service_closure" id="argument_resolver.request" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.session" type="service_closure" id="argument_resolver.session" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.service" type="service_closure" id="argument_resolver.service" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.default" type="service_closure" id="argument_resolver.default" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.variadic" type="service_closure" id="argument_resolver.variadic" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.query_parameter_value_resolver" type="service_closure" id="argument_resolver.query_parameter_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="response_listener" type="service_closure" id="response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="locale_listener" type="service_closure" id="locale_listener" on-invalid="ignore_uninitialized"/>
        <argument key="validate_request_listener" type="service_closure" id="validate_request_listener" on-invalid="ignore_uninitialized"/>
        <argument key="disallow_search_engine_index_response_listener" type="service_closure" id="disallow_search_engine_index_response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="exception_listener" type="service_closure" id="exception_listener" on-invalid="ignore_uninitialized"/>
        <argument key="controller.cache_attribute_listener" type="service_closure" id="controller.cache_attribute_listener" on-invalid="ignore_uninitialized"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="http_cache" type="service_closure" id="http_cache" on-invalid="ignore_uninitialized"/>
        <argument key="http_cache.store" type="service_closure" id="http_cache.store" on-invalid="ignore_uninitialized"/>
        <argument key="url_helper" type="service_closure" id="url_helper" on-invalid="ignore_uninitialized"/>
        <argument key="cache_clearer" type="service_closure" id="cache_clearer" on-invalid="ignore_uninitialized"/>
        <argument key="filesystem" type="service_closure" id="filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="file_locator" type="service_closure" id="file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="uri_signer" type="service_closure" id="uri_signer" on-invalid="ignore_uninitialized"/>
        <argument key="config_cache_factory" type="service_closure" id="config_cache_factory" on-invalid="ignore_uninitialized"/>
        <argument key="dependency_injection.config.container_parameters_resource_checker" type="service_closure" id="dependency_injection.config.container_parameters_resource_checker" on-invalid="ignore_uninitialized"/>
        <argument key="config.resource.self_checking_resource_checker" type="service_closure" id="config.resource.self_checking_resource_checker" on-invalid="ignore_uninitialized"/>
        <argument key="reverse_container" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
        <argument key="locale_aware_listener" type="service_closure" id="locale_aware_listener" on-invalid="ignore_uninitialized"/>
        <argument key="container.env_var_processor" type="service_closure" id="container.env_var_processor" on-invalid="ignore_uninitialized"/>
        <argument key="slugger" type="service_closure" id="slugger" on-invalid="ignore_uninitialized"/>
        <argument key="container.getenv" type="service_closure" id="container.getenv" on-invalid="ignore_uninitialized"/>
        <argument key="config_builder.warmer" type="service_closure" id="config_builder.warmer" on-invalid="ignore_uninitialized"/>
        <argument key="clock" type="service_closure" id="clock" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.handler" type="service_closure" id="fragment.handler" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.uri_generator" type="service_closure" id="fragment.uri_generator" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.renderer.inline" type="service_closure" id="fragment.renderer.inline" on-invalid="ignore_uninitialized"/>
        <argument key="error_handler.error_renderer.html" type="service_closure" id="error_handler.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="process.messenger.process_message_handler" type="service_closure" id="process.messenger.process_message_handler" on-invalid="ignore_uninitialized"/>
        <argument key="console.error_listener" type="service_closure" id="console.error_listener" on-invalid="ignore_uninitialized"/>
        <argument key="console.suggest_missing_package_subscriber" type="service_closure" id="console.suggest_missing_package_subscriber" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.about" type="service_closure" id="console.command.about" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.assets_install" type="service_closure" id="console.command.assets_install" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_clear" type="service_closure" id="console.command.cache_clear" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_clear" type="service_closure" id="console.command.cache_pool_clear" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_prune" type="service_closure" id="console.command.cache_pool_prune" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_invalidate_tags" type="service_closure" id="console.command.cache_pool_invalidate_tags" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_delete" type="service_closure" id="console.command.cache_pool_delete" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_list" type="service_closure" id="console.command.cache_pool_list" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_warmup" type="service_closure" id="console.command.cache_warmup" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.config_debug" type="service_closure" id="console.command.config_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.config_dump_reference" type="service_closure" id="console.command.config_dump_reference" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.container_debug" type="service_closure" id="console.command.container_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.container_lint" type="service_closure" id="console.command.container_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.debug_autowiring" type="service_closure" id="console.command.debug_autowiring" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.dotenv_debug" type="service_closure" id="console.command.dotenv_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.event_dispatcher_debug" type="service_closure" id="console.command.event_dispatcher_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.router_debug" type="service_closure" id="console.command.router_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.router_match" type="service_closure" id="console.command.router_match" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.serializer_debug" type="service_closure" id="console.command.serializer_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.validator_debug" type="service_closure" id="console.command.validator_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.yaml_lint" type="service_closure" id="console.command.yaml_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_set" type="service_closure" id="console.command.secrets_set" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_remove" type="service_closure" id="console.command.secrets_remove" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_generate_key" type="service_closure" id="console.command.secrets_generate_key" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_list" type="service_closure" id="console.command.secrets_list" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_reveal" type="service_closure" id="console.command.secrets_reveal" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service_closure" id="console.command.secrets_decrypt_to_local" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service_closure" id="console.command.secrets_encrypt_from_local" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.error_dumper" type="service_closure" id="console.command.error_dumper" on-invalid="ignore_uninitialized"/>
        <argument key="console.messenger.application" type="service_closure" id="console.messenger.application" on-invalid="ignore_uninitialized"/>
        <argument key="console.messenger.execute_command_handler" type="service_closure" id="console.messenger.execute_command_handler" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app.taggable" type="service_closure" id="cache.app.taggable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service_closure" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service_closure" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service_closure" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_marshaller" type="service_closure" id="cache.default_marshaller" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_clearer" type="service_closure" id="cache.default_clearer" on-invalid="ignore_uninitialized"/>
        <argument key="test.client.history" type="service_closure" id="test.client.history" on-invalid="ignore_uninitialized"/>
        <argument key="test.client.cookiejar" type="service_closure" id="test.client.cookiejar" on-invalid="ignore_uninitialized"/>
        <argument key="test.session.listener" type="service_closure" id="test.session.listener" on-invalid="ignore_uninitialized"/>
        <argument key="assets.packages" type="service_closure" id="assets.packages" on-invalid="ignore_uninitialized"/>
        <argument key="assets.empty_package" type="service_closure" id="assets.empty_package" on-invalid="ignore_uninitialized"/>
        <argument key="assets.context" type="service_closure" id="assets.context" on-invalid="ignore_uninitialized"/>
        <argument key="assets.empty_version_strategy" type="service_closure" id="assets.empty_version_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="assets._default_package" type="service_closure" id="assets._default_package" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.transport" type="service_closure" id="http_client.transport" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.uri_template" type="service_closure" id="http_client.uri_template" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.uri_template_expander.guzzle" type="service_closure" id="http_client.uri_template_expander.guzzle" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.uri_template_expander.rize" type="service_closure" id="http_client.uri_template_expander.rize" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.messenger.ping_webhook_handler" type="service_closure" id="http_client.messenger.ping_webhook_handler" on-invalid="ignore_uninitialized"/>
        <argument key="debug.debug_handlers_listener" type="service_closure" id="debug.debug_handlers_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.file_link_formatter" type="service_closure" id="debug.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service_closure" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="debug.controller_resolver" type="service_closure" id="debug.controller_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver" type="service_closure" id="debug.argument_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.not_tagged_controller" type="service_closure" id="argument_resolver.not_tagged_controller" on-invalid="ignore_uninitialized"/>
        <argument key="debug.log_processor" type="service_closure" id="debug.log_processor" on-invalid="ignore_uninitialized"/>
        <argument key="debug.debug_logger_configurator" type="service_closure" id="debug.debug_logger_configurator" on-invalid="ignore_uninitialized"/>
        <argument key="routing.resolver" type="service_closure" id="routing.resolver" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.xml" type="service_closure" id="routing.loader.xml" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.yml" type="service_closure" id="routing.loader.yml" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.php" type="service_closure" id="routing.loader.php" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.glob" type="service_closure" id="routing.loader.glob" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.directory" type="service_closure" id="routing.loader.directory" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.container" type="service_closure" id="routing.loader.container" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.attribute" type="service_closure" id="routing.loader.attribute" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.attribute.directory" type="service_closure" id="routing.loader.attribute.directory" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.attribute.file" type="service_closure" id="routing.loader.attribute.file" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.psr4" type="service_closure" id="routing.loader.psr4" on-invalid="ignore_uninitialized"/>
        <argument key="router.default" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="router.request_context" type="service_closure" id="router.request_context" on-invalid="ignore_uninitialized"/>
        <argument key="router.expression_language_provider" type="service_closure" id="router.expression_language_provider" on-invalid="ignore_uninitialized"/>
        <argument key="router.cache_warmer" type="service_closure" id="router.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="router_listener" type="service_closure" id="router_listener" on-invalid="ignore_uninitialized"/>
        <argument key="property_accessor" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.vault" type="service_closure" id="secrets.vault" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.env_var_loader" type="service_closure" id="secrets.env_var_loader" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.decryption_key" type="service_closure" id="secrets.decryption_key" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.local_vault" type="service_closure" id="secrets.local_vault" on-invalid="ignore_uninitialized"/>
        <argument key="serializer" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.class_discriminator_resolver" type="service_closure" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.constraint_violation_list" type="service_closure" id="serializer.normalizer.constraint_violation_list" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.datetimezone" type="service_closure" id="serializer.normalizer.datetimezone" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.dateinterval" type="service_closure" id="serializer.normalizer.dateinterval" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.data_uri" type="service_closure" id="serializer.normalizer.data_uri" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.datetime" type="service_closure" id="serializer.normalizer.datetime" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.json_serializable" type="service_closure" id="serializer.normalizer.json_serializable" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.problem" type="service_closure" id="serializer.normalizer.problem" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.denormalizer.unwrapping" type="service_closure" id="serializer.denormalizer.unwrapping" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.uid" type="service_closure" id="serializer.normalizer.uid" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.form_error" type="service_closure" id="serializer.normalizer.form_error" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.object" type="service_closure" id="serializer.normalizer.object" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.property" type="service_closure" id="serializer.normalizer.property" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.denormalizer.array" type="service_closure" id="serializer.denormalizer.array" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.chain_loader" type="service_closure" id="serializer.mapping.chain_loader" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.cache_warmer" type="service_closure" id="serializer.mapping.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.cache.symfony" type="service_closure" id="serializer.mapping.cache.symfony" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.xml" type="service_closure" id="serializer.encoder.xml" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.json" type="service_closure" id="serializer.encoder.json" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.yaml" type="service_closure" id="serializer.encoder.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.csv" type="service_closure" id="serializer.encoder.csv" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.name_converter.camel_case_to_snake_case" type="service_closure" id="serializer.name_converter.camel_case_to_snake_case" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.name_converter.snake_case_to_camel_case" type="service_closure" id="serializer.name_converter.snake_case_to_camel_case" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.name_converter.metadata_aware" type="service_closure" id="serializer.name_converter.metadata_aware" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.serializer_extractor" type="service_closure" id="property_info.serializer_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="error_handler.error_renderer.serializer" type="service_closure" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.backed_enum" type="service_closure" id="serializer.normalizer.backed_enum" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.number" type="service_closure" id="serializer.normalizer.number" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.type_context_factory" type="service_closure" id="type_info.type_context_factory" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.resolver" type="service_closure" id="type_info.resolver" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.resolver.reflection_type" type="service_closure" id="type_info.resolver.reflection_type" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.resolver.reflection_parameter" type="service_closure" id="type_info.resolver.reflection_parameter" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.resolver.reflection_property" type="service_closure" id="type_info.resolver.reflection_property" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.resolver.reflection_return" type="service_closure" id="type_info.resolver.reflection_return" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.resolver.string" type="service_closure" id="type_info.resolver.string" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.resolver.reflection_parameter.phpdoc_aware" type="service_closure" id="type_info.resolver.reflection_parameter.phpdoc_aware" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.resolver.reflection_property.phpdoc_aware" type="service_closure" id="type_info.resolver.reflection_property.phpdoc_aware" on-invalid="ignore_uninitialized"/>
        <argument key="type_info.resolver.reflection_return.phpdoc_aware" type="service_closure" id="type_info.resolver.reflection_return.phpdoc_aware" on-invalid="ignore_uninitialized"/>
        <argument key="property_info" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.reflection_extractor" type="service_closure" id="property_info.reflection_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.constructor_extractor" type="service_closure" id="property_info.constructor_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.phpstan_extractor" type="service_closure" id="property_info.phpstan_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.php_doc_extractor" type="service_closure" id="property_info.php_doc_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="web_link.http_header_serializer" type="service_closure" id="web_link.http_header_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="web_link.add_link_header_listener" type="service_closure" id="web_link.add_link_header_listener" on-invalid="ignore_uninitialized"/>
        <argument key="ulid.factory" type="service_closure" id="ulid.factory" on-invalid="ignore_uninitialized"/>
        <argument key="uuid.factory" type="service_closure" id="uuid.factory" on-invalid="ignore_uninitialized"/>
        <argument key="name_based_uuid.factory" type="service_closure" id="name_based_uuid.factory" on-invalid="ignore_uninitialized"/>
        <argument key="random_based_uuid.factory" type="service_closure" id="random_based_uuid.factory" on-invalid="ignore_uninitialized"/>
        <argument key="time_based_uuid.factory" type="service_closure" id="time_based_uuid.factory" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_access" type="service_closure" id="cache.property_access" on-invalid="ignore_uninitialized"/>
        <argument key="session.factory" type="service_closure" id="session.factory" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.factory.native" type="service_closure" id="session.storage.factory.native" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.factory.php_bridge" type="service_closure" id="session.storage.factory.php_bridge" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.factory.mock_file" type="service_closure" id="session.storage.factory.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler.native" type="service_closure" id="session.handler.native" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler.native_file" type="service_closure" id="session.handler.native_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.abstract_handler" type="service_closure" id="session.abstract_handler" on-invalid="ignore_uninitialized"/>
        <argument key="session.marshaller" type="service_closure" id="session.marshaller" on-invalid="ignore_uninitialized"/>
        <argument key="security.csrf.token_generator" type="service_closure" id="security.csrf.token_generator" on-invalid="ignore_uninitialized"/>
        <argument key="security.csrf.token_storage" type="service_closure" id="security.csrf.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime.security_csrf" type="service_closure" id="twig.runtime.security_csrf" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.security_csrf" type="service_closure" id="twig.extension.security_csrf" on-invalid="ignore_uninitialized"/>
        <argument key="validator" type="service_closure" id="validator" on-invalid="ignore_uninitialized"/>
        <argument key="validator.builder" type="service_closure" id="validator.builder" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache_warmer" type="service_closure" id="validator.mapping.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache.adapter" type="service_closure" id="validator.mapping.cache.adapter" on-invalid="ignore_uninitialized"/>
        <argument key="validator.validator_factory" type="service_closure" id="validator.validator_factory" on-invalid="ignore_uninitialized"/>
        <argument key="validator.expression" type="service_closure" id="validator.expression" on-invalid="ignore_uninitialized"/>
        <argument key="validator.expression_language" type="service_closure" id="validator.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="validator.expression_language_provider" type="service_closure" id="validator.expression_language_provider" on-invalid="ignore_uninitialized"/>
        <argument key="validator.email" type="service_closure" id="validator.email" on-invalid="ignore_uninitialized"/>
        <argument key="validator.not_compromised_password" type="service_closure" id="validator.not_compromised_password" on-invalid="ignore_uninitialized"/>
        <argument key="validator.when" type="service_closure" id="validator.when" on-invalid="ignore_uninitialized"/>
        <argument key="validator.no_suspicious_characters" type="service_closure" id="validator.no_suspicious_characters" on-invalid="ignore_uninitialized"/>
        <argument key="validator.property_info_loader" type="service_closure" id="validator.property_info_loader" on-invalid="ignore_uninitialized"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="twig.app_variable" type="service_closure" id="twig.app_variable" on-invalid="ignore_uninitialized"/>
        <argument key="twig.template_iterator" type="service_closure" id="twig.template_iterator" on-invalid="ignore_uninitialized"/>
        <argument key="twig.template_cache_warmer" type="service_closure" id="twig.template_cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.native_filesystem" type="service_closure" id="twig.loader.native_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.chain" type="service_closure" id="twig.loader.chain" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.profiler" type="service_closure" id="twig.extension.profiler" on-invalid="ignore_uninitialized"/>
        <argument key="twig.profile" type="service_closure" id="twig.profile" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.twig" type="service_closure" id="data_collector.twig" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.trans" type="service_closure" id="twig.extension.trans" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.assets" type="service_closure" id="twig.extension.assets" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.routing" type="service_closure" id="twig.extension.routing" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.yaml" type="service_closure" id="twig.extension.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.debug.stopwatch" type="service_closure" id="twig.extension.debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.expression" type="service_closure" id="twig.extension.expression" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.htmlsanitizer" type="service_closure" id="twig.extension.htmlsanitizer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.httpkernel" type="service_closure" id="twig.extension.httpkernel" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime.httpkernel" type="service_closure" id="twig.runtime.httpkernel" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.httpfoundation" type="service_closure" id="twig.extension.httpfoundation" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.debug" type="service_closure" id="twig.extension.debug" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.weblink" type="service_closure" id="twig.extension.weblink" on-invalid="ignore_uninitialized"/>
        <argument key="twig.configurator.environment" type="service_closure" id="twig.configurator.environment" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime_loader" type="service_closure" id="twig.runtime_loader" on-invalid="ignore_uninitialized"/>
        <argument key="twig.error_renderer.html" type="service_closure" id="twig.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime.serializer" type="service_closure" id="twig.runtime.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.serializer" type="service_closure" id="twig.extension.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="controller.template_attribute_listener" type="service_closure" id="controller.template_attribute_listener" on-invalid="ignore_uninitialized"/>
        <argument key="twig.command.debug" type="service_closure" id="twig.command.debug" on-invalid="ignore_uninitialized"/>
        <argument key="twig.command.lint" type="service_closure" id="twig.command.lint" on-invalid="ignore_uninitialized"/>
        <argument key="twig.validator" type="service_closure" id="twig.validator" on-invalid="ignore_uninitialized"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="security.untracked_token_storage" type="service_closure" id="security.untracked_token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="security.helper" type="service_closure" id="security.helper" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_value_resolver" type="service_closure" id="security.user_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="security.security_token_value_resolver" type="service_closure" id="security.security_token_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.trust_resolver" type="service_closure" id="security.authentication.trust_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.session_strategy" type="service_closure" id="security.authentication.session_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.session_strategy_noop" type="service_closure" id="security.authentication.session_strategy_noop" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_checker" type="service_closure" id="security.user_checker" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_checker_locator" type="service_closure" id="security.user_checker_locator" on-invalid="ignore_uninitialized"/>
        <argument key="security.expression_language" type="service_closure" id="security.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication_utils" type="service_closure" id="security.authentication_utils" on-invalid="ignore_uninitialized"/>
        <argument key="security.role_hierarchy" type="service_closure" id="security.role_hierarchy" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.simple_role_voter" type="service_closure" id="security.access.simple_role_voter" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.authenticated_voter" type="service_closure" id="security.access.authenticated_voter" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.expression_voter" type="service_closure" id="security.access.expression_voter" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.closure_voter" type="service_closure" id="security.access.closure_voter" on-invalid="ignore_uninitialized"/>
        <argument key="security.impersonate_url_generator" type="service_closure" id="security.impersonate_url_generator" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map" type="service_closure" id="security.firewall.map" on-invalid="ignore_uninitialized"/>
        <argument key="security.logout_url_generator" type="service_closure" id="security.logout_url_generator" on-invalid="ignore_uninitialized"/>
        <argument key="security.route_loader.logout" type="service_closure" id="security.route_loader.logout" on-invalid="ignore_uninitialized"/>
        <argument key="security.http_utils" type="service_closure" id="security.http_utils" on-invalid="ignore_uninitialized"/>
        <argument key="security.validator.user_password" type="service_closure" id="security.validator.user_password" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service_closure" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="controller.is_granted_attribute_listener" type="service_closure" id="controller.is_granted_attribute_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.is_granted_attribute_expression_language" type="service_closure" id="security.is_granted_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="security.is_csrf_token_valid_attribute_expression_language" type="service_closure" id="security.is_csrf_token_valid_attribute_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="security.password_hasher_factory" type="service_closure" id="security.password_hasher_factory" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_password_hasher" type="service_closure" id="security.user_password_hasher" on-invalid="ignore_uninitialized"/>
        <argument key="security.channel_listener" type="service_closure" id="security.channel_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_map" type="service_closure" id="security.access_map" on-invalid="ignore_uninitialized"/>
        <argument key="security.context_listener" type="service_closure" id="security.context_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_listener" type="service_closure" id="security.access_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.event_dispatcher_locator" type="service_closure" id="security.firewall.event_dispatcher_locator" on-invalid="ignore_uninitialized"/>
        <argument key="security.authenticator.managers_locator" type="service_closure" id="security.authenticator.managers_locator" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_authenticator" type="service_closure" id="security.user_authenticator" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.check_authenticator_credentials" type="service_closure" id="security.listener.check_authenticator_credentials" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.user_provider" type="service_closure" id="security.listener.user_provider" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.password_migrating" type="service_closure" id="security.listener.password_migrating" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_extractor.header" type="service_closure" id="security.access_token_extractor.header" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_extractor.query_string" type="service_closure" id="security.access_token_extractor.query_string" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_extractor.request_body" type="service_closure" id="security.access_token_extractor.request_body" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.algorithm_manager_factory" type="service_closure" id="security.access_token_handler.oidc.algorithm_manager_factory" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.signature.ES256" type="service_closure" id="security.access_token_handler.oidc.signature.ES256" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.signature.ES384" type="service_closure" id="security.access_token_handler.oidc.signature.ES384" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.signature.ES512" type="service_closure" id="security.access_token_handler.oidc.signature.ES512" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.signature.RS256" type="service_closure" id="security.access_token_handler.oidc.signature.RS256" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.signature.RS384" type="service_closure" id="security.access_token_handler.oidc.signature.RS384" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.signature.RS512" type="service_closure" id="security.access_token_handler.oidc.signature.RS512" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.signature.PS256" type="service_closure" id="security.access_token_handler.oidc.signature.PS256" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.signature.PS384" type="service_closure" id="security.access_token_handler.oidc.signature.PS384" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.signature.PS512" type="service_closure" id="security.access_token_handler.oidc.signature.PS512" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.encryption_algorithm_manager_factory" type="service_closure" id="security.access_token_handler.oidc.encryption_algorithm_manager_factory" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.encryption.RSAOAEP" type="service_closure" id="security.access_token_handler.oidc.encryption.RSAOAEP" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.encryption.ECDHES" type="service_closure" id="security.access_token_handler.oidc.encryption.ECDHES" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.encryption.ECDHSS" type="service_closure" id="security.access_token_handler.oidc.encryption.ECDHSS" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.encryption.A128CBCHS256" type="service_closure" id="security.access_token_handler.oidc.encryption.A128CBCHS256" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.encryption.A192CBCHS384" type="service_closure" id="security.access_token_handler.oidc.encryption.A192CBCHS384" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.encryption.A256CBCHS512" type="service_closure" id="security.access_token_handler.oidc.encryption.A256CBCHS512" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.encryption.A128GCM" type="service_closure" id="security.access_token_handler.oidc.encryption.A128GCM" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.encryption.A192GCM" type="service_closure" id="security.access_token_handler.oidc.encryption.A192GCM" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_token_handler.oidc.encryption.A256GCM" type="service_closure" id="security.access_token_handler.oidc.encryption.A256GCM" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.logout_url" type="service_closure" id="twig.extension.logout_url" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.security" type="service_closure" id="twig.extension.security" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.security" type="service_closure" id="data_collector.security" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.access.decision_manager" type="service_closure" id="debug.security.access.decision_manager" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.vote_listener" type="service_closure" id="debug.security.voter.vote_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall" type="service_closure" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="security.command.debug_firewall" type="service_closure" id="security.command.debug_firewall" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.config.dev" type="service_closure" id="security.firewall.map.config.dev" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.context.dev" type="service_closure" id="security.firewall.map.context.dev" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.config.login" type="service_closure" id="security.firewall.map.config.login" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.context.login" type="service_closure" id="security.firewall.map.context.login" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.config.public_api" type="service_closure" id="security.firewall.map.config.public_api" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.context.public_api" type="service_closure" id="security.firewall.map.context.public_api" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.config.google_oauth" type="service_closure" id="security.firewall.map.config.google_oauth" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.context.google_oauth" type="service_closure" id="security.firewall.map.context.google_oauth" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.config.microsoft_oauth" type="service_closure" id="security.firewall.map.config.microsoft_oauth" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.context.microsoft_oauth" type="service_closure" id="security.firewall.map.context.microsoft_oauth" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.config.api" type="service_closure" id="security.firewall.map.config.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_checker.chain.api" type="service_closure" id="security.user_checker.chain.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.authenticator.jwt.api" type="service_closure" id="security.authenticator.jwt.api" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.authenticator.jwt.api" type="service_closure" id="debug.security.authenticator.jwt.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.authenticator.manager.api" type="service_closure" id="security.authenticator.manager.api" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall.authenticator.api" type="service_closure" id="debug.security.firewall.authenticator.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.user_checker.api" type="service_closure" id="security.listener.user_checker.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.exception_listener.api" type="service_closure" id="security.exception_listener.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.context.api" type="service_closure" id="security.firewall.map.context.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.command.user_password_hash" type="service_closure" id="security.command.user_password_hash" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.doctrine" type="service_closure" id="data_collector.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.connection_factory" type="service_closure" id="doctrine.dbal.connection_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.connection_factory.dsn_parser" type="service_closure" id="doctrine.dbal.connection_factory.dsn_parser" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.twig.doctrine_extension" type="service_closure" id="doctrine.twig.doctrine_extension" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.well_known_schema_asset_filter" type="service_closure" id="doctrine.dbal.well_known_schema_asset_filter" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.database_create_command" type="service_closure" id="doctrine.database_create_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.database_drop_command" type="service_closure" id="doctrine.database_drop_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.query_sql_command" type="service_closure" id="doctrine.query_sql_command" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" type="service_closure" id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.idle_connection_listener" type="service_closure" id="doctrine.dbal.idle_connection_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_schema_manager_factory" type="service_closure" id="doctrine.dbal.default_schema_manager_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.legacy_schema_manager_factory" type="service_closure" id="doctrine.dbal.legacy_schema_manager_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_connection.configuration" type="service_closure" id="doctrine.dbal.default_connection.configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_regex_schema_filter" type="service_closure" id="doctrine.dbal.default_regex_schema_filter" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_connection.event_manager" type="service_closure" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" type="service_closure" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.connection_expiries" type="service_closure" id="doctrine.dbal.connection_expiries" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.debug_data_holder" type="service_closure" id="doctrine.debug_data_holder" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.proxy_cache_warmer" type="service_closure" id="doctrine.orm.proxy_cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_guesser.doctrine" type="service_closure" id="form.type_guesser.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service_closure" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.container_repository_factory" type="service_closure" id="doctrine.orm.container_repository_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.validator.unique" type="service_closure" id="doctrine.orm.validator.unique" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.validator_initializer" type="service_closure" id="doctrine.orm.validator_initializer" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.resolve_target_entity" type="service_closure" id="doctrine.orm.listeners.resolve_target_entity" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener" type="service_closure" id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.doctrine_token_provider_schema_listener" type="service_closure" id="doctrine.orm.listeners.doctrine_token_provider_schema_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.pdo_session_handler_schema_listener" type="service_closure" id="doctrine.orm.listeners.pdo_session_handler_schema_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.lock_store_schema_listener" type="service_closure" id="doctrine.orm.listeners.lock_store_schema_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.default" type="service_closure" id="doctrine.orm.naming_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.underscore" type="service_closure" id="doctrine.orm.naming_strategy.underscore" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.underscore_number_aware" type="service_closure" id="doctrine.orm.naming_strategy.underscore_number_aware" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.quote_strategy.default" type="service_closure" id="doctrine.orm.quote_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.quote_strategy.ansi" type="service_closure" id="doctrine.orm.quote_strategy.ansi" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.typed_field_mapper.default" type="service_closure" id="doctrine.orm.typed_field_mapper.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.ulid_generator" type="service_closure" id="doctrine.ulid_generator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.uuid_generator" type="service_closure" id="doctrine.uuid_generator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.command.entity_manager_provider" type="service_closure" id="doctrine.orm.command.entity_manager_provider" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.entity_value_resolver" type="service_closure" id="doctrine.orm.entity_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.entity_value_resolver.expression_language" type="service_closure" id="doctrine.orm.entity_value_resolver.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service_closure" id="doctrine.cache_clear_metadata_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service_closure" id="doctrine.cache_clear_query_cache_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_result_command" type="service_closure" id="doctrine.cache_clear_result_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_collection_region_command" type="service_closure" id="doctrine.cache_collection_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_create_command" type="service_closure" id="doctrine.schema_create_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_drop_command" type="service_closure" id="doctrine.schema_drop_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.clear_entity_region_command" type="service_closure" id="doctrine.clear_entity_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.mapping_info_command" type="service_closure" id="doctrine.mapping_info_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.clear_query_region_command" type="service_closure" id="doctrine.clear_query_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.query_dql_command" type="service_closure" id="doctrine.query_dql_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_update_command" type="service_closure" id="doctrine.schema_update_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_validate_command" type="service_closure" id="doctrine.schema_validate_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_configuration" type="service_closure" id="doctrine.orm.default_configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_attribute_metadata_driver" type="service_closure" id="doctrine.orm.default_attribute_metadata_driver" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.metadata" type="service_closure" id="cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service_closure" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service_closure" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_listener_resolver" type="service_closure" id="doctrine.orm.default_entity_listener_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service_closure" id="doctrine.orm.default_listeners.attach_entity_listeners" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_manager_configurator" type="service_closure" id="doctrine.orm.default_manager_configurator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.property_info_extractor" type="service_closure" id="doctrine.orm.default_entity_manager.property_info_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.validator_loader" type="service_closure" id="doctrine.orm.default_entity_manager.validator_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.dependency_factory" type="service_closure" id="doctrine.migrations.dependency_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.configuration_loader" type="service_closure" id="doctrine.migrations.configuration_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.connection_loader" type="service_closure" id="doctrine.migrations.connection_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.em_loader" type="service_closure" id="doctrine.migrations.em_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.entity_manager_registry_loader" type="service_closure" id="doctrine.migrations.entity_manager_registry_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.connection_registry_loader" type="service_closure" id="doctrine.migrations.connection_registry_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.configuration" type="service_closure" id="doctrine.migrations.configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.migrations_factory" type="service_closure" id="doctrine.migrations.migrations_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.diff_command" type="service_closure" id="doctrine_migrations.diff_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.sync_metadata_command" type="service_closure" id="doctrine_migrations.sync_metadata_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.versions_command" type="service_closure" id="doctrine_migrations.versions_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.current_command" type="service_closure" id="doctrine_migrations.current_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service_closure" id="doctrine_migrations.dump_schema_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.execute_command" type="service_closure" id="doctrine_migrations.execute_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.generate_command" type="service_closure" id="doctrine_migrations.generate_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.latest_command" type="service_closure" id="doctrine_migrations.latest_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.migrate_command" type="service_closure" id="doctrine_migrations.migrate_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.rollup_command" type="service_closure" id="doctrine_migrations.rollup_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.status_command" type="service_closure" id="doctrine_migrations.status_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service_closure" id="doctrine_migrations.up_to_date_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.version_command" type="service_closure" id="doctrine_migrations.version_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.schema_filter_listener" type="service_closure" id="doctrine_migrations.schema_filter_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.storage.table_storage" type="service_closure" id="doctrine.migrations.storage.table_storage" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_cors.cors_listener" type="service_closure" id="nelmio_cors.cors_listener" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_cors.options_resolver" type="service_closure" id="nelmio_cors.options_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_cors.options_provider.config" type="service_closure" id="nelmio_cors.options_provider.config" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_cors.cacheable_response_vary_listener" type="service_closure" id="nelmio_cors.cacheable_response_vary_listener" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.locator" type="service_closure" id="api_platform.state_provider.locator" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_processor.locator" type="service_closure" id="api_platform.state_processor.locator" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.pagination" type="service_closure" id="api_platform.pagination" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer_locator" type="service_closure" id="api_platform.serializer_locator" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.pagination_options" type="service_closure" id="api_platform.pagination_options" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.create" type="service_closure" id="api_platform.state_provider.create" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.object" type="service_closure" id="api_platform.state_provider.object" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.backed_enum" type="service_closure" id="api_platform.state_provider.backed_enum" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.listener.exception" type="service_closure" id="api_platform.listener.exception" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache_warmer.cache_pool_clearer" type="service_closure" id="api_platform.cache_warmer.cache_pool_clearer" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.negotiator" type="service_closure" id="api_platform.negotiator" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.resource_class_resolver" type="service_closure" id="api_platform.resource_class_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.router" type="service_closure" id="api_platform.router" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer.filter_parameter_provider" type="service_closure" id="api_platform.serializer.filter_parameter_provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer.context_builder.filter" type="service_closure" id="api_platform.serializer.context_builder.filter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer.normalizer.item" type="service_closure" id="api_platform.serializer.normalizer.item" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer.mapping.class_metadata_factory" type="service_closure" id="api_platform.serializer.mapping.class_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.path_segment_name_generator.underscore" type="service_closure" id="api_platform.path_segment_name_generator.underscore" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.path_segment_name_generator.dash" type="service_closure" id="api_platform.path_segment_name_generator.dash" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.path_segment_name_generator.underscore" type="service_closure" id="api_platform.metadata.path_segment_name_generator.underscore" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.path_segment_name_generator.dash" type="service_closure" id="api_platform.metadata.path_segment_name_generator.dash" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.inflector" type="service_closure" id="api_platform.metadata.inflector" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service_closure" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.route_loader" type="service_closure" id="api_platform.route_loader" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.symfony.iri_converter.skolem" type="service_closure" id="api_platform.symfony.iri_converter.skolem" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.api.identifiers_extractor" type="service_closure" id="api_platform.api.identifiers_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.uri_variables.converter" type="service_closure" id="api_platform.uri_variables.converter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.uri_variables.transformer.integer" type="service_closure" id="api_platform.uri_variables.transformer.integer" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.uri_variables.transformer.date_time" type="service_closure" id="api_platform.uri_variables.transformer.date_time" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.symfony.iri_converter" type="service_closure" id="api_platform.symfony.iri_converter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state.error_provider" type="service_closure" id="api_platform.state.error_provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.normalizer.constraint_violation_list" type="service_closure" id="api_platform.normalizer.constraint_violation_list" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer.property_metadata_loader" type="service_closure" id="api_platform.serializer.property_metadata_loader" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.filter_locator" type="service_closure" id="api_platform.filter_locator" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.symfony.uri_variables.transformer.ulid" type="service_closure" id="api_platform.symfony.uri_variables.transformer.ulid" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.symfony.uri_variables.transformer.uuid" type="service_closure" id="api_platform.symfony.uri_variables.transformer.uuid" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.content_negotiation" type="service_closure" id="api_platform.state_provider.content_negotiation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.error_listener" type="service_closure" id="api_platform.error_listener" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.parameter" type="service_closure" id="api_platform.state_provider.parameter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_processor.serialize" type="service_closure" id="api_platform.state_processor.serialize" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_processor.write" type="service_closure" id="api_platform.state_processor.write" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_processor.add_link_header" type="service_closure" id="api_platform.state_processor.add_link_header" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.parameter.iri_converter" type="service_closure" id="api_platform.state_provider.parameter.iri_converter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service_closure" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.cached" type="service_closure" id="api_platform.metadata.resource.name_collection_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.xml" type="service_closure" id="api_platform.metadata.resource.name_collection_factory.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.concerns" type="service_closure" id="api_platform.metadata.resource.name_collection_factory.concerns" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.attributes" type="service_closure" id="api_platform.metadata.resource.name_collection_factory.attributes" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.class_name" type="service_closure" id="api_platform.metadata.resource.name_collection_factory.class_name" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.property_info" type="service_closure" id="api_platform.metadata.property.name_collection_factory.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.cached" type="service_closure" id="api_platform.metadata.property.name_collection_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.xml" type="service_closure" id="api_platform.metadata.property.name_collection_factory.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.concerns" type="service_closure" id="api_platform.metadata.property.name_collection_factory.concerns" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource_extractor.xml" type="service_closure" id="api_platform.metadata.resource_extractor.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property_extractor.xml" type="service_closure" id="api_platform.metadata.property_extractor.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.property_info" type="service_closure" id="api_platform.metadata.property.metadata_factory.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.attribute" type="service_closure" id="api_platform.metadata.property.metadata_factory.attribute" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.serializer" type="service_closure" id="api_platform.metadata.property.metadata_factory.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.cached" type="service_closure" id="api_platform.metadata.property.metadata_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.default_property" type="service_closure" id="api_platform.metadata.property.metadata_factory.default_property" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.identifier" type="service_closure" id="api_platform.metadata.property.metadata_factory.identifier" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.xml" type="service_closure" id="api_platform.metadata.property.metadata_factory.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service_closure" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.attributes" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.attributes" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.xml" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.concerns" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.concerns" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.backed_enum" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.backed_enum" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.uri_template" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.uri_template" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.main_controller" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.main_controller" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.link" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.link" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.operation_name" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.operation_name" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.input_output" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.input_output" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.formats" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.formats" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.filters" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.filters" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.alternate_uri" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.alternate_uri" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.parameter" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.parameter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.cached" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource_collection" type="service_closure" id="api_platform.cache.metadata.resource_collection" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.operation.metadata_factory" type="service_closure" id="api_platform.metadata.operation.metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.php_doc" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.php_doc" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource_extractor.yaml" type="service_closure" id="api_platform.metadata.resource_extractor.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property_extractor.yaml" type="service_closure" id="api_platform.metadata.property_extractor.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.yaml" type="service_closure" id="api_platform.metadata.resource.name_collection_factory.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.yaml" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.yaml" type="service_closure" id="api_platform.metadata.property.metadata_factory.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.yaml" type="service_closure" id="api_platform.metadata.property.name_collection_factory.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.json_schema.json_schema_generate_command" type="service_closure" id="api_platform.json_schema.json_schema_generate_command" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.json_schema.metadata.property.metadata_factory.schema" type="service_closure" id="api_platform.json_schema.metadata.property.metadata_factory.schema" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.json_schema.backward_compatible_schema_factory" type="service_closure" id="api_platform.json_schema.backward_compatible_schema_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.json_schema.definition_name_factory" type="service_closure" id="api_platform.json_schema.definition_name_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.openapi.provider" type="service_closure" id="api_platform.openapi.provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.openapi.serializer_context_builder" type="service_closure" id="api_platform.openapi.serializer_context_builder" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.openapi.options" type="service_closure" id="api_platform.openapi.options" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.openapi.command" type="service_closure" id="api_platform.openapi.command" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.openapi.normalizer.legacy" type="service_closure" id="api_platform.openapi.normalizer.legacy" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.openapi.factory" type="service_closure" id="api_platform.openapi.factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.openapi" type="service_closure" id="api_platform.cache.openapi" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.jsonopenapi.encoder" type="service_closure" id="api_platform.jsonopenapi.encoder" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.yamlopenapi.encoder" type="service_closure" id="api_platform.yamlopenapi.encoder" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.swagger_ui.context" type="service_closure" id="api_platform.swagger_ui.context" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.swagger_ui.processor" type="service_closure" id="api_platform.swagger_ui.processor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.swagger_ui.provider" type="service_closure" id="api_platform.swagger_ui.provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.processor.link" type="service_closure" id="api_platform.hydra.processor.link" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.jsonld.context_builder" type="service_closure" id="api_platform.jsonld.context_builder" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.jsonld.normalizer.item" type="service_closure" id="api_platform.jsonld.normalizer.item" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.jsonld.normalizer.error" type="service_closure" id="api_platform.jsonld.normalizer.error" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.jsonld.normalizer.object" type="service_closure" id="api_platform.jsonld.normalizer.object" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.jsonld.normalizer.validation_exception" type="service_closure" id="api_platform.jsonld.normalizer.validation_exception" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.jsonld.encoder" type="service_closure" id="api_platform.jsonld.encoder" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.json_schema.schema_factory" type="service_closure" id="api_platform.hydra.json_schema.schema_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.documentation" type="service_closure" id="api_platform.hydra.normalizer.documentation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.constraint_violation_list" type="service_closure" id="api_platform.hydra.normalizer.constraint_violation_list" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.entrypoint" type="service_closure" id="api_platform.hydra.normalizer.entrypoint" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.partial_collection_view" type="service_closure" id="api_platform.hydra.normalizer.partial_collection_view" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.collection_filters" type="service_closure" id="api_platform.hydra.normalizer.collection_filters" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.name_converter.hydra_prefix" type="service_closure" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.problem.encoder" type="service_closure" id="api_platform.problem.encoder" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.problem.normalizer.validation_exception" type="service_closure" id="api_platform.problem.normalizer.validation_exception" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.metadata_factory" type="service_closure" id="api_platform.doctrine.metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.state.remove_processor" type="service_closure" id="api_platform.doctrine.orm.state.remove_processor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.state.persist_processor" type="service_closure" id="api_platform.doctrine.orm.state.persist_processor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.order_filter.instance" type="service_closure" id="api_platform.doctrine.orm.order_filter.instance" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.range_filter.instance" type="service_closure" id="api_platform.doctrine.orm.range_filter.instance" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.date_filter.instance" type="service_closure" id="api_platform.doctrine.orm.date_filter.instance" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.backed_enum_filter.instance" type="service_closure" id="api_platform.doctrine.orm.backed_enum_filter.instance" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.boolean_filter.instance" type="service_closure" id="api_platform.doctrine.orm.boolean_filter.instance" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.numeric_filter.instance" type="service_closure" id="api_platform.doctrine.orm.numeric_filter.instance" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.exists_filter.instance" type="service_closure" id="api_platform.doctrine.orm.exists_filter.instance" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.query_extension.eager_loading" type="service_closure" id="api_platform.doctrine.orm.query_extension.eager_loading" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.query_extension.filter" type="service_closure" id="api_platform.doctrine.orm.query_extension.filter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.query_extension.filter_eager_loading" type="service_closure" id="api_platform.doctrine.orm.query_extension.filter_eager_loading" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.query_extension.pagination" type="service_closure" id="api_platform.doctrine.orm.query_extension.pagination" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.query_extension.order" type="service_closure" id="api_platform.doctrine.orm.query_extension.order" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.extension.parameter_extension" type="service_closure" id="api_platform.doctrine.orm.extension.parameter_extension" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.metadata.property.metadata_factory" type="service_closure" id="api_platform.doctrine.orm.metadata.property.metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.state.collection_provider" type="service_closure" id="api_platform.doctrine.orm.state.collection_provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.state.item_provider" type="service_closure" id="api_platform.doctrine.orm.state.item_provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.search_filter.instance" type="service_closure" id="api_platform.doctrine.orm.search_filter.instance" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.metadata.resource.metadata_collection_factory" type="service_closure" id="api_platform.doctrine.orm.metadata.resource.metadata_collection_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.metadata.resource.link_factory" type="service_closure" id="api_platform.doctrine.orm.metadata.resource.link_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.links_handler" type="service_closure" id="api_platform.doctrine.orm.links_handler" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.http_cache.processor.add_headers" type="service_closure" id="api_platform.http_cache.processor.add_headers" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.validator" type="service_closure" id="api_platform.metadata.property.metadata_factory.validator" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property_schema.choice_restriction" type="service_closure" id="api_platform.metadata.property_schema.choice_restriction" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property_schema.collection_restriction" type="service_closure" id="api_platform.metadata.property_schema.collection_restriction" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property_schema.count_restriction" type="service_closure" id="api_platform.metadata.property_schema.count_restriction" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property_schema.greater_than_or_equal_restriction" type="service_closure" id="api_platform.metadata.property_schema.greater_than_or_equal_restriction" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property_schema.greater_than_restriction" type="service_closure" id="api_platform.metadata.property_schema.greater_than_restriction" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property_schema.length_restriction" type="service_closure" id="api_platform.metadata.property_schema.length_restriction" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property_schema.less_than_or_equal_restriction" type="service_closure" id="api_platform.metadata.property_schema.less_than_or_equal_restriction" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property_schema.less_than_restriction" type="service_closure" id="api_platform.metadata.property_schema.less_than_restriction" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property_schema.one_of_restriction" type="service_closure" id="api_platform.metadata.property_schema.one_of_restriction" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property_schema.range_restriction" type="service_closure" id="api_platform.metadata.property_schema.range_restriction" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property_schema.regex_restriction" type="service_closure" id="api_platform.metadata.property_schema.regex_restriction" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property_schema.format_restriction" type="service_closure" id="api_platform.metadata.property_schema.format_restriction" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property_schema.unique_restriction" type="service_closure" id="api_platform.metadata.property_schema.unique_restriction" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.validator" type="service_closure" id="api_platform.validator" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.validator.state.error_provider" type="service_closure" id="api_platform.validator.state.error_provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.validator.metadata.resource.metadata_collection_factory.parameter" type="service_closure" id="api_platform.validator.metadata.resource.metadata_collection_factory.parameter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.data_collector.request" type="service_closure" id="api_platform.data_collector.request" on-invalid="ignore_uninitialized"/>
        <argument key="debug.var_dumper.cloner" type="service_closure" id="debug.var_dumper.cloner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.var_dumper.cli_dumper" type="service_closure" id="debug.var_dumper.cli_dumper" on-invalid="ignore_uninitialized"/>
        <argument key="debug.api_platform.debug_resource.command" type="service_closure" id="debug.api_platform.debug_resource.command" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.security.resource_access_checker" type="service_closure" id="api_platform.security.resource_access_checker" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.security.expression_language_provider" type="service_closure" id="api_platform.security.expression_language_provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.access_checker.post_deserialize" type="service_closure" id="api_platform.state_provider.access_checker.post_deserialize" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.security_parameter" type="service_closure" id="api_platform.state_provider.security_parameter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.access_checker.post_validate" type="service_closure" id="api_platform.state_provider.access_checker.post_validate" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.maker.command.state_processor" type="service_closure" id="api_platform.maker.command.state_processor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.maker.command.state_provider" type="service_closure" id="api_platform.maker.command.state_provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.argument_resolver.payload" type="service_closure" id="api_platform.argument_resolver.payload" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.payload_enrichment.random_jti_enrichment" type="service_closure" id="lexik_jwt_authentication.payload_enrichment.random_jti_enrichment" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.payload_enrichment" type="service_closure" id="lexik_jwt_authentication.payload_enrichment" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.key_loader.raw" type="service_closure" id="lexik_jwt_authentication.key_loader.raw" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.encoder.lcobucci" type="service_closure" id="lexik_jwt_authentication.encoder.lcobucci" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.jws_provider.lcobucci" type="service_closure" id="lexik_jwt_authentication.jws_provider.lcobucci" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.handler.authentication_success" type="service_closure" id="lexik_jwt_authentication.handler.authentication_success" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.handler.authentication_failure" type="service_closure" id="lexik_jwt_authentication.handler.authentication_failure" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.extractor.chain_extractor" type="service_closure" id="lexik_jwt_authentication.extractor.chain_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.extractor.authorization_header_extractor" type="service_closure" id="lexik_jwt_authentication.extractor.authorization_header_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.extractor.query_parameter_extractor" type="service_closure" id="lexik_jwt_authentication.extractor.query_parameter_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.extractor.cookie_extractor" type="service_closure" id="lexik_jwt_authentication.extractor.cookie_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.extractor.split_cookie_extractor" type="service_closure" id="lexik_jwt_authentication.extractor.split_cookie_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.security.jwt_user_provider" type="service_closure" id="lexik_jwt_authentication.security.jwt_user_provider" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.check_config_command" type="service_closure" id="lexik_jwt_authentication.check_config_command" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.migrate_config_command" type="service_closure" id="lexik_jwt_authentication.migrate_config_command" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.enable_encryption_config_command" type="service_closure" id="lexik_jwt_authentication.enable_encryption_config_command" on-invalid="ignore_uninitialized"/>
        <argument key="lexik_jwt_authentication.generate_keypair_command" type="service_closure" id="lexik_jwt_authentication.generate_keypair_command" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger" type="service_closure" id="monolog.logger" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.chrome_php" type="service_closure" id="monolog.formatter.chrome_php" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.gelf_message" type="service_closure" id="monolog.formatter.gelf_message" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.html" type="service_closure" id="monolog.formatter.html" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.json" type="service_closure" id="monolog.formatter.json" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.line" type="service_closure" id="monolog.formatter.line" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.loggly" type="service_closure" id="monolog.formatter.loggly" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.normalizer" type="service_closure" id="monolog.formatter.normalizer" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.scalar" type="service_closure" id="monolog.formatter.scalar" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.wildfire" type="service_closure" id="monolog.formatter.wildfire" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.logstash" type="service_closure" id="monolog.formatter.logstash" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.http_client" type="service_closure" id="monolog.http_client" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.processor.psr_log_message" type="service_closure" id="monolog.processor.psr_log_message" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service_closure" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.deprecation" type="service_closure" id="monolog.handler.deprecation" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_search_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_order_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_date_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_range_filter" type="service_closure" id="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_range_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_campaign_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_campaign_api_platform_doctrine_orm_filter_search_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_campaign_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_campaign_api_platform_doctrine_orm_filter_order_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_campaign_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_campaign_api_platform_doctrine_orm_filter_date_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_case_study_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_case_study_api_platform_doctrine_orm_filter_search_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_case_study_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_case_study_api_platform_doctrine_orm_filter_order_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_citation_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_citation_api_platform_doctrine_orm_filter_search_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_citation_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_citation_api_platform_doctrine_orm_filter_order_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_citation_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_citation_api_platform_doctrine_orm_filter_date_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_content_brief_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_content_brief_api_platform_doctrine_orm_filter_search_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_content_brief_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_content_brief_api_platform_doctrine_orm_filter_order_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_content_brief_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_content_brief_api_platform_doctrine_orm_filter_date_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_content_item_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_content_item_api_platform_doctrine_orm_filter_search_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_content_item_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_content_item_api_platform_doctrine_orm_filter_order_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_content_item_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_content_item_api_platform_doctrine_orm_filter_date_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_faq_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_faq_api_platform_doctrine_orm_filter_search_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_faq_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_faq_api_platform_doctrine_orm_filter_order_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_search_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_order_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_date_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_range_filter" type="service_closure" id="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_range_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_keyword_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_keyword_api_platform_doctrine_orm_filter_search_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_keyword_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_keyword_api_platform_doctrine_orm_filter_order_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_keyword_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_keyword_api_platform_doctrine_orm_filter_date_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_lead_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_lead_api_platform_doctrine_orm_filter_search_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_lead_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_lead_api_platform_doctrine_orm_filter_date_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_lead_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_lead_api_platform_doctrine_orm_filter_order_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_search_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_order_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_date_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_range_filter" type="service_closure" id="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_range_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_recommendation_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_recommendation_api_platform_doctrine_orm_filter_search_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_recommendation_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_recommendation_api_platform_doctrine_orm_filter_order_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_recommendation_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_recommendation_api_platform_doctrine_orm_filter_date_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_review_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_review_api_platform_doctrine_orm_filter_search_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_review_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_review_api_platform_doctrine_orm_filter_order_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_review_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_review_api_platform_doctrine_orm_filter_date_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_review_api_platform_doctrine_orm_filter_range_filter" type="service_closure" id="annotated_app_entity_review_api_platform_doctrine_orm_filter_range_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_subscription_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_subscription_api_platform_doctrine_orm_filter_search_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_subscription_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_subscription_api_platform_doctrine_orm_filter_order_filter" on-invalid="ignore_uninitialized"/>
        <argument key="annotated_app_entity_subscription_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_subscription_api_platform_doctrine_orm_filter_date_filter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.event_dispatcher.api" type="service_closure" id="debug.security.event_dispatcher.api" on-invalid="ignore_uninitialized"/>
        <argument key="security.listener.csrf_protection" type="service_closure" id="security.listener.csrf_protection" on-invalid="ignore_uninitialized"/>
        <argument key="controller.is_csrf_token_valid_attribute_listener" type="service_closure" id="controller.is_csrf_token_valid_attribute_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.logout.listener.csrf_token_clearing" type="service_closure" id="security.logout.listener.csrf_token_clearing" on-invalid="ignore_uninitialized"/>
        <argument key="security.ldap_locator" type="service_closure" id="security.ldap_locator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_schema_asset_filter_manager" type="service_closure" id="doctrine.dbal.default_schema_asset_filter_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.logging_middleware.default" type="service_closure" id="doctrine.dbal.logging_middleware.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.debug_middleware.default" type="service_closure" id="doctrine.dbal.debug_middleware.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.idle_connection_middleware.default" type="service_closure" id="doctrine.dbal.idle_connection_middleware.default" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.request" type="service_closure" id="monolog.logger.request" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.console" type="service_closure" id="monolog.logger.console" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.cache" type="service_closure" id="monolog.logger.cache" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.http_client" type="service_closure" id="monolog.logger.http_client" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.php" type="service_closure" id="monolog.logger.php" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.event" type="service_closure" id="monolog.logger.event" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.router" type="service_closure" id="monolog.logger.router" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.security" type="service_closure" id="monolog.logger.security" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.doctrine" type="service_closure" id="monolog.logger.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.null_internal" type="service_closure" id="monolog.handler.null_internal" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.processor.link.inner" type="service_closure" id="api_platform.hydra.processor.link.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.metadata.resource.link_factory.inner" type="service_closure" id="api_platform.doctrine.orm.metadata.resource.link_factory.inner" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.uri_template.inner" type="service_closure" id="http_client.uri_template.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher.inner" type="service_closure" id="debug.event_dispatcher.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.controller_resolver.inner" type="service_closure" id="debug.controller_resolver.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.inner" type="service_closure" id="debug.argument_resolver.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.access.decision_manager.inner" type="service_closure" id="debug.security.access.decision_manager.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall.authenticator.api.inner" type="service_closure" id="debug.security.firewall.authenticator.api.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer.context_builder.filter.inner" type="service_closure" id="api_platform.serializer.context_builder.filter.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.swagger_ui.provider.inner" type="service_closure" id="api_platform.swagger_ui.provider.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.json_schema.schema_factory.inner" type="service_closure" id="api_platform.hydra.json_schema.schema_factory.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.partial_collection_view.inner" type="service_closure" id="api_platform.hydra.normalizer.partial_collection_view.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.access_checker.post_deserialize.inner" type="service_closure" id="api_platform.state_provider.access_checker.post_deserialize.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.security_parameter.inner" type="service_closure" id="api_platform.state_provider.security_parameter.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.access_checker.post_validate.inner" type="service_closure" id="api_platform.state_provider.access_checker.post_validate.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.event_dispatcher.api.inner" type="service_closure" id="debug.security.event_dispatcher.api.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer.mapping.class_metadata_factory.inner" type="service_closure" id="api_platform.serializer.mapping.class_metadata_factory.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.openapi.normalizer.api_gateway.inner" type="service_closure" id="api_platform.openapi.normalizer.api_gateway.inner" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.openapi.normalizer.legacy.inner" type="service_closure" id="api_platform.openapi.normalizer.legacy.inner" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" type="service_closure" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" type="service_closure" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\EventDispatcher\EventDispatcherInterface" type="service_closure" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" type="service_closure" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\EventDispatcher\EventDispatcherInterface" type="service_closure" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\HttpKernelInterface" type="service_closure" id="http_kernel" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\RequestStack" type="service_closure" id="request_stack" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\HttpCache\StoreInterface" type="service_closure" id="http_cache.store" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\UrlHelper" type="service_closure" id="url_helper" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\KernelInterface" type="service_closure" id="kernel" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Filesystem\Filesystem" type="service_closure" id="filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Config\FileLocator" type="service_closure" id="file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\UriSigner" type="service_closure" id="uri_signer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetterInterface" type="service_closure" id="services_resetter" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ReverseContainer" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\String\Slugger\SluggerInterface" type="service_closure" id="slugger" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Clock\ClockInterface" type="service_closure" id="clock" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Clock\ClockInterface" type="service_closure" id="clock" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Fragment\FragmentUriGeneratorInterface" type="service_closure" id="fragment.uri_generator" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer.html" type="service_closure" id="twig.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer" type="service_closure" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Container\ContainerInterface $parameterBag" type="service_closure" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Cache\CacheItemPoolInterface" type="service_closure" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Cache\CacheInterface" type="service_closure" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Cache\NamespacedPoolInterface" type="service_closure" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Cache\TagAwareCacheInterface" type="service_closure" id="cache.app.taggable" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Asset\Packages" type="service_closure" id="assets.packages" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\HttpClient\HttpClientInterface" type="service_closure" id="http_client.uri_template" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\ErrorHandler\ErrorRenderer\FileLinkFormatter" type="service_closure" id="debug.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Stopwatch\Stopwatch" type="service_closure" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RouterInterface" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\Generator\UrlGeneratorInterface" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\Matcher\UrlMatcherInterface" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RequestContextAwareInterface" type="service_closure" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RequestContext" type="service_closure" id="router.request_context" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyAccess\PropertyAccessorInterface" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\SerializerInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\NormalizerInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Encoder\EncoderInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Encoder\DecoderInterface" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.property_accessor" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" type="service_closure" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" type="service_closure" id="api_platform.serializer.mapping.class_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer.serializer" type="service_closure" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\TypeInfo\TypeResolver\TypeResolverInterface" type="service_closure" id="type_info.resolver" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" type="service_closure" id="property_info.reflection_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" type="service_closure" id="property_info.reflection_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\WebLink\HttpHeaderSerializer" type="service_closure" id="web_link.http_header_serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Uid\Factory\UlidFactory" type="service_closure" id="ulid.factory" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Uid\Factory\UuidFactory" type="service_closure" id="uuid.factory" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Uid\Factory\NameBasedUuidFactory" type="service_closure" id="name_based_uuid.factory" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Uid\Factory\RandomBasedUuidFactory" type="service_closure" id="random_based_uuid.factory" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Uid\Factory\TimeBasedUuidFactory" type="service_closure" id="time_based_uuid.factory" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_redis_provider" type="service_closure" id=".cache_connection.MfCypIA" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_valkey_provider" type="service_closure" id=".cache_connection.H8vabc8" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_memcached_provider" type="service_closure" id=".cache_connection.8kvDmRs" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_doctrine_dbal_provider" type="service_closure" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="SessionHandlerInterface" type="service_closure" id="session.handler.native" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.factory" type="service_closure" id="session.storage.factory.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler" type="service_closure" id="session.handler.native" on-invalid="ignore_uninitialized"/>
        <argument key="session_listener" type="service_closure" id="test.session.listener" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" type="service_closure" id="security.csrf.token_generator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" type="service_closure" id="security.csrf.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Validator\Validator\ValidatorInterface" type="service_closure" id="validator" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.class_metadata_factory" type="service_closure" id="validator" on-invalid="ignore_uninitialized"/>
        <argument key="Twig\Environment" type="service_closure" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" type="service_closure" id="security.authorization_checker" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authorization\UserAuthorizationCheckerInterface" type="service_closure" id="security.authorization_checker" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" type="service_closure" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Bundle\SecurityBundle\Security" type="service_closure" id="security.helper" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" type="service_closure" id="security.authentication.session_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" type="service_closure" id="security.authentication_utils" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" type="service_closure" id="debug.security.access.decision_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" type="service_closure" id="security.role_hierarchy" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Firewall" type="service_closure" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\FirewallMapInterface" type="service_closure" id="security.firewall.map" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\HttpUtils" type="service_closure" id="security.http_utils" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" type="service_closure" id="security.password_hasher_factory" on-invalid="ignore_uninitialized"/>
        <argument key="security.password_hasher" type="service_closure" id="security.user_password_hasher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" type="service_closure" id="security.user_password_hasher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Authentication\UserAuthenticatorInterface" type="service_closure" id="security.user_authenticator" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall" type="service_closure" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="security.user.provider.concrete.app_user_provider" type="service_closure" id="App\Repository\UserRepository" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_providers" type="service_closure" id="App\Repository\UserRepository" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\User\UserProviderInterface" type="service_closure" id="App\Repository\UserRepository" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.session_strategy.api" type="service_closure" id="security.authentication.session_strategy_noop" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_checker.api" type="service_closure" id="security.user_checker" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.context_locator" type="service_closure" id=".service_locator.shxE9gp" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\User\UserCheckerInterface" type="service_closure" id="security.user_checker" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\DBAL\Connection" type="service_closure" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ManagerRegistry" type="service_closure" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Persistence\ManagerRegistry" type="service_closure" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.event_manager" type="service_closure" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\DBAL\Connection $defaultConnection" type="service_closure" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_metadata_cache" type="service_closure" id="cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_result_cache" type="service_closure" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_query_cache" type="service_closure" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface $defaultEntityManager" type="service_closure" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.event_manager" type="service_closure" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.metadata_storage" type="service_closure" id="doctrine.migrations.storage.table_storage" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider" type="service_closure" id="api_platform.state_provider.locator" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\State\Pagination\Pagination" type="service_closure" id="api_platform.pagination" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\State\Pagination\PaginationOptions" type="service_closure" id="api_platform.pagination_options" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\State\CreateProvider" type="service_closure" id="api_platform.state_provider.create" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\State\ObjectProvider" type="service_closure" id="api_platform.state_provider.object" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\State\SerializerContextBuilderInterface" type="service_closure" id="api_platform.openapi.serializer_context_builder" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer" type="service_closure" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.property_accessor" type="service_closure" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.property_info" type="service_closure" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Metadata\ResourceClassResolverInterface" type="service_closure" id="api_platform.resource_class_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Metadata\UrlGeneratorInterface" type="service_closure" id="api_platform.router" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.identifiers_extractor" type="service_closure" id="api_platform.api.identifiers_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Metadata\IdentifiersExtractorInterface" type="service_closure" id="api_platform.api.identifiers_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.iri_converter" type="service_closure" id="api_platform.symfony.iri_converter" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Metadata\IriConverterInterface" type="service_closure" id="api_platform.symfony.iri_converter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.main" type="service_closure" id="api_platform.state_provider.content_negotiation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_processor.main" type="service_closure" id="api_platform.state_processor.write" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.path_segment_name_generator" type="service_closure" id="api_platform.metadata.path_segment_name_generator.underscore" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.inflector" type="service_closure" id="api_platform.metadata.inflector" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory" type="service_closure" id="api_platform.metadata.resource.name_collection_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Metadata\Resource\Factory\ResourceNameCollectionFactoryInterface" type="service_closure" id="api_platform.metadata.resource.name_collection_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory" type="service_closure" id="api_platform.metadata.property.name_collection_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Metadata\Property\Factory\PropertyNameCollectionFactoryInterface" type="service_closure" id="api_platform.metadata.property.name_collection_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory" type="service_closure" id="api_platform.metadata.property.metadata_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Metadata\Property\Factory\PropertyMetadataFactoryInterface" type="service_closure" id="api_platform.metadata.property.metadata_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Metadata\Resource\Factory\ResourceMetadataCollectionFactoryInterface" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Metadata\Operation\Factory\OperationMetadataFactoryInterface" type="service_closure" id="api_platform.metadata.operation.metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\JsonSchema\SchemaFactoryInterface" type="service_closure" id="api_platform.json_schema.backward_compatible_schema_factory" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\OpenApi\Serializer\OpenApiNormalizer" type="service_closure" id="api_platform.openapi.normalizer.legacy" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\OpenApi\Options" type="service_closure" id="api_platform.openapi.options" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\OpenApi\Factory\OpenApiFactoryInterface" type="service_closure" id="api_platform.openapi.factory" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Doctrine\Common\State\RemoveProcessor" type="service_closure" id="api_platform.doctrine.orm.state.remove_processor" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Doctrine\Common\State\PersistProcessor" type="service_closure" id="api_platform.doctrine.orm.state.persist_processor" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Doctrine\Orm\Extension\EagerLoadingExtension" type="service_closure" id="api_platform.doctrine.orm.query_extension.eager_loading" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Doctrine\Orm\Extension\FilterExtension" type="service_closure" id="api_platform.doctrine.orm.query_extension.filter" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Doctrine\Orm\Extension\FilterEagerLoadingExtension" type="service_closure" id="api_platform.doctrine.orm.query_extension.filter_eager_loading" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Doctrine\Orm\Extension\PaginationExtension" type="service_closure" id="api_platform.doctrine.orm.query_extension.pagination" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Doctrine\Orm\Extension\OrderExtension" type="service_closure" id="api_platform.doctrine.orm.query_extension.order" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Doctrine\Orm\Extension\ParameterExtension" type="service_closure" id="api_platform.doctrine.orm.extension.parameter_extension" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Doctrine\Orm\State\CollectionProvider" type="service_closure" id="api_platform.doctrine.orm.state.collection_provider" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Doctrine\Orm\State\ItemProvider" type="service_closure" id="api_platform.doctrine.orm.state.item_provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state.item_provider" type="service_closure" id="api_platform.doctrine.orm.state.item_provider" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Validator\ValidatorInterface" type="service_closure" id="api_platform.validator" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.security.expression_language" type="service_closure" id="security.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="ApiPlatform\Metadata\ResourceAccessCheckerInterface" type="service_closure" id="api_platform.security.resource_access_checker" on-invalid="ignore_uninitialized"/>
        <argument key="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenManagerInterface" type="service_closure" id="lexik_jwt_authentication.jwt_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\JWSProviderInterface" type="service_closure" id="lexik_jwt_authentication.jws_provider.lcobucci" on-invalid="ignore_uninitialized"/>
        <argument key="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler" type="service_closure" id="lexik_jwt_authentication.handler.authentication_success" on-invalid="ignore_uninitialized"/>
        <argument key="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler" type="service_closure" id="lexik_jwt_authentication.handler.authentication_failure" on-invalid="ignore_uninitialized"/>
        <argument key="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\TokenExtractorInterface" type="service_closure" id="lexik_jwt_authentication.extractor.chain_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Lexik\Bundle\JWTAuthenticationBundle\Encoder\JWTEncoderInterface" type="service_closure" id="lexik_jwt_authentication.encoder.lcobucci" on-invalid="ignore_uninitialized"/>
        <argument key="logger" type="service_closure" id="monolog.logger" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface" type="service_closure" id="monolog.logger" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.filesystem" type="service_closure" id="twig.loader.native_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.controller_locator" type="service_closure" id=".service_locator.F6vdjrP" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader" type="service_closure" id="twig.loader.native_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.id_generator_locator" type="service_closure" id=".service_locator.BxSdgVt" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.name_converter" type="service_closure" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $requestLogger" type="service_closure" id="monolog.logger.request" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $consoleLogger" type="service_closure" id="monolog.logger.console" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $cacheLogger" type="service_closure" id="monolog.logger.cache" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $httpClientLogger" type="service_closure" id="monolog.logger.http_client" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $phpLogger" type="service_closure" id="monolog.logger.php" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $eventLogger" type="service_closure" id="monolog.logger.event" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $routerLogger" type="service_closure" id="monolog.logger.router" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $securityLogger" type="service_closure" id="monolog.logger.security" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $doctrineLogger" type="service_closure" id="monolog.logger.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $deprecationLogger" type="service_closure" id="monolog.logger.deprecation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.parameter.inner" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.attributes" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.validator.metadata.resource.metadata_collection_factory.parameter.inner" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.parameter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.concerns.inner" type="service_closure" id="api_platform.metadata.resource.name_collection_factory.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.xml.inner" type="service_closure" id="api_platform.validator.metadata.resource.metadata_collection_factory.parameter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.concerns.inner" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.yaml.inner" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.concerns" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation.inner" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.read.inner" type="service_closure" id="api_platform.state_provider.locator" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.backed_enum.inner" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.uri_template.inner" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.backed_enum" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.main_controller.inner" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.uri_template" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.link.inner" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.main_controller" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_processor.respond" type="service_closure" id="api_platform.http_cache.processor.add_headers" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.deserialize.inner" type="service_closure" id="api_platform.state_provider.security_parameter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_processor.serialize.inner" type="service_closure" id="api_platform.http_cache.processor.add_headers" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.operation_name.inner" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.link" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.input_output.inner" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.operation_name" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.formats.inner" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.input_output" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.filters.inner" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.formats" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.alternate_uri.inner" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.filters" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.php_doc.inner" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.alternate_uri" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.validate.inner" type="service_closure" id="api_platform.state_provider.access_checker.post_deserialize" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.parameter_validator.inner" type="service_closure" id="api_platform.state_provider.access_checker.post_validate" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.parameter.inner" type="service_closure" id="api_platform.state_provider.parameter_validator" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.content_negotiation.inner" type="service_closure" id="api_platform.state_provider.parameter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_processor.write.inner" type="service_closure" id="api_platform.state_processor.serialize" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.property_info.inner" type="service_closure" id="api_platform.metadata.property.metadata_factory.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.metadata.property.metadata_factory.inner" type="service_closure" id="api_platform.metadata.property.metadata_factory.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.doctrine.orm.metadata.resource.metadata_collection_factory.inner" type="service_closure" id="api_platform.metadata.resource.metadata_collection_factory.php_doc" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.link_factory" type="service_closure" id="api_platform.doctrine.orm.metadata.resource.link_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.serializer.inner" type="service_closure" id="api_platform.doctrine.orm.metadata.property.metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.default_property.inner" type="service_closure" id="api_platform.metadata.property.metadata_factory.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.identifier.inner" type="service_closure" id="api_platform.metadata.property.metadata_factory.default_property" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.attribute.inner" type="service_closure" id="api_platform.metadata.property.metadata_factory.identifier" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.yaml.inner" type="service_closure" id="api_platform.metadata.property.metadata_factory.attribute" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.validator.inner" type="service_closure" id="api_platform.metadata.property.metadata_factory.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.json_schema.metadata.property.metadata_factory.schema.inner" type="service_closure" id="api_platform.metadata.property.metadata_factory.validator" on-invalid="ignore_uninitialized"/>
        <argument key="http_client" type="service_closure" id="http_client.uri_template" on-invalid="ignore_uninitialized"/>
        <argument key="controller_resolver" type="service_closure" id="debug.controller_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver" type="service_closure" id="debug.argument_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="twig.error_renderer.html.inner" type="service_closure" id="error_handler.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.decision_manager" type="service_closure" id="debug.security.access.decision_manager" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.authenticator.api" type="service_closure" id="debug.security.firewall.authenticator.api" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.serializer.context_builder" type="service_closure" id="api_platform.openapi.serializer_context_builder" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_processor.add_link_header.inner" type="service_closure" id="api_platform.hydra.processor.link" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.attributes.inner" type="service_closure" id="api_platform.metadata.resource.name_collection_factory.concerns" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.class_name.inner" type="service_closure" id="api_platform.metadata.resource.name_collection_factory.attributes" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.xml.inner" type="service_closure" id="api_platform.metadata.property.name_collection_factory.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.concerns.inner" type="service_closure" id="api_platform.metadata.property.name_collection_factory.xml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.yaml.inner" type="service_closure" id="api_platform.metadata.resource.name_collection_factory.class_name" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.yaml.inner" type="service_closure" id="api_platform.metadata.property.name_collection_factory.concerns" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.openapi.serializer_context_builder.inner" type="service_closure" id="api_platform.serializer.context_builder.filter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.read" type="service_closure" id="api_platform.state_provider.security_parameter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.json_schema.schema_factory" type="service_closure" id="api_platform.json_schema.backward_compatible_schema_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.collection" type="service_closure" id="api_platform.hydra.normalizer.collection_filters" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.normalizer.collection_filters.inner" type="service_closure" id="api_platform.hydra.normalizer.partial_collection_view" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.hydra.name_converter.hydra_prefix.inner" type="service_closure" id="serializer.name_converter.metadata_aware" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.http_cache.processor.add_headers.inner" type="service_closure" id="api_platform.state_processor.add_link_header" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.access_checker.inner" type="service_closure" id="api_platform.swagger_ui.provider" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.deserialize" type="service_closure" id="api_platform.state_provider.access_checker.post_deserialize" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.access_checker" type="service_closure" id="api_platform.state_provider.security_parameter" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.state_provider.validate" type="service_closure" id="api_platform.state_provider.access_checker.post_validate" on-invalid="ignore_uninitialized"/>
        <argument key="security.event_dispatcher.api" type="service_closure" id="debug.security.event_dispatcher.api" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_metadata_driver" type="service_closure" id=".doctrine.orm.default_metadata_driver" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.class_metadata_factory" type="service_closure" id="api_platform.serializer.mapping.class_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.openapi.normalizer" type="service_closure" id="api_platform.openapi.normalizer.legacy" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.json_schema.backward_compatible_schema_factory.inner" type="service_closure" id="api_platform.hydra.json_schema.schema_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.openapi.normalizer.api_gateway" type="service_closure" id="api_platform.openapi.normalizer.legacy" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.name_collection_factory.cached.inner" type="service_closure" id="api_platform.metadata.resource.name_collection_factory.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.name_collection_factory.cached.inner" type="service_closure" id="api_platform.metadata.property.name_collection_factory.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.property.metadata_factory.cached.inner" type="service_closure" id="api_platform.json_schema.metadata.property.metadata_factory.schema" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.metadata.resource.metadata_collection_factory.cached.inner" type="service_closure" id="api_platform.doctrine.orm.metadata.resource.metadata_collection_factory" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service" id="assets._default_package"/>
      <argument type="tagged_iterator" tag="assets.package" index-by="package" default-index-method="getDefaultPackageName" default-priority-method="getDefaultPackagePriority"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
      <argument type="service">
        <service class="string">
          <factory service="router.request_context" method="getBaseUrl"/>
        </service>
      </argument>
      <argument type="service">
        <service class="bool">
          <factory service="router.request_context" method="isSecure"/>
        </service>
      </argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" abstract="true">
      <argument type="abstract">base path</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" abstract="true">
      <argument type="abstract">base URLs</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" abstract="true">
      <argument type="abstract">version</argument>
      <argument type="abstract">format</argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" abstract="true">
      <argument type="abstract">manifest path</argument>
      <argument type="service" id="http_client.uri_template" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="http_client.transport" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <tag name="monolog.logger" channel="http_client"/>
      <tag name="kernel.reset" method="reset" on_invalid="ignore"/>
      <argument type="collection"/>
      <argument>6</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.http_client" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="http_client.abstract_retry_strategy" class="Symfony\Component\HttpClient\Retry\GenericRetryStrategy" abstract="true">
      <argument type="abstract">http codes</argument>
      <argument type="abstract">delay ms</argument>
      <argument type="abstract">multiplier</argument>
      <argument type="abstract">max delay ms</argument>
      <argument type="abstract">jitter</argument>
    </service>
    <service id="http_client.uri_template" class="Symfony\Component\HttpClient\UriTemplateHttpClient">
      <tag name="http_client.client"/>
      <tag name="kernel.reset" method="reset" on_invalid="ignore"/>
      <tag name="container.decorator" id="http_client" inner="http_client.uri_template.inner"/>
      <argument type="service" id="http_client.uri_template.inner"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="http_client.uri_template_expander.guzzle" class="Closure">
      <argument type="collection">
        <argument>GuzzleHttp\UriTemplate\UriTemplate</argument>
        <argument>expand</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="http_client.uri_template_expander.rize" class="Closure">
      <argument type="collection">
        <argument type="service">
          <service class="Rize\UriTemplate"/>
        </argument>
        <argument>expand</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="http_client.messenger.ping_webhook_handler" class="Symfony\Component\HttpClient\Messenger\PingWebhookMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="http_client.uri_template"/>
    </service>
    <service id="debug.error_handler_configurator" class="Symfony\Component\HttpKernel\Debug\ErrorHandlerConfigurator" public="true">
      <tag name="monolog.logger" channel="php"/>
      <argument type="service" id="monolog.logger.php"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="service" id="monolog.logger.deprecation"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument>%env(bool:default::key:web:default:kernel.runtime_mode:)%</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\ErrorHandler\ErrorRenderer\FileLinkFormatter">
      <argument>%env(default::SYMFONY_IDE)%</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="container.hot_path"/>
      <tag name="event_dispatcher">event_dispatcher.dispatcher</tag>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="event_dispatcher" inner="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument>null</argument>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="doctrine_migrations.schema_filter_listener"/>
          <argument>onConsoleCommand</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="nelmio_cors.cors_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>250</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="nelmio_cors.cors_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="nelmio_cors.cacheable_response_vary_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.exception"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-96</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="argument_resolver.request_payload"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>removeCspHeader</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.cache_attribute_listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.cache_attribute_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="test.session.listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="test.session.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="web_link.add_link_header_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.template_attribute_listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.is_granted_attribute_listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>20</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_authenticator_credentials"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.password_migrating"/>
          <argument>onLoginSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="doctrine.dbal.idle_connection_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>192</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.csrf_protection"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.is_csrf_token_valid_attribute_listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>25</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.decorator" id="controller_resolver" inner="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <tag name="container.decorator" id="argument_resolver" inner="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id=".service_locator.F6vdjrP"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="debug.debug_logger_configurator" class="Symfony\Component\HttpKernel\Log\DebugLoggerConfigurator">
      <argument type="service" id="debug.log_processor"/>
      <argument>%env(bool:default::key:web:default:kernel.runtime_mode:)%</argument>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="api_platform.route_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.attribute"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.attribute.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.attribute.file"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.psr4"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader">
      <tag name="routing.loader"/>
      <argument type="service" id=".service_locator.rhF__EI"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.attribute" class="Symfony\Bundle\FrameworkBundle\Routing\AttributeRouteControllerLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument>test</argument>
    </service>
    <service id="routing.loader.attribute.directory" class="Symfony\Component\Routing\Loader\AttributeDirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.attribute"/>
    </service>
    <service id="routing.loader.attribute.file" class="Symfony\Component\Routing\Loader\AttributeFileLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.attribute"/>
    </service>
    <service id="routing.loader.psr4" class="Symfony\Component\Routing\Loader\Psr4DirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection">
        <argument key="utf8">true</argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.VVisMRE.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="addExpressionLanguageProvider">
        <argument type="service" id="router.expression_language_provider"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" constructor="fromUri">
      <argument></argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
      <call method="setParameter">
        <argument>_functions</argument>
        <argument type="service" id="router.expression_language_provider" on-invalid="ignore"/>
      </call>
    </service>
    <service id="router.expression_language_provider" class="Symfony\Component\Routing\Matcher\ExpressionLanguageProvider">
      <tag name="routing.expression_language_provider"/>
      <argument type="service" id=".service_locator.u.4FiKa"/>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.qXR9Hv0.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="monolog.logger" channel="request"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>3</argument>
      <argument>2</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/config/secrets/%env(default:kernel.environment:APP_RUNTIME_ENV)%</argument>
      <argument type="service" id="secrets.decryption_key" on-invalid="ignore"/>
      <argument>APP_SECRET</argument>
    </service>
    <service id="secrets.env_var_loader" class="Symfony\Component\DependencyInjection\StaticEnvVarLoader">
      <tag name="container.env_var_loader"/>
      <argument type="service" id="secrets.vault"/>
    </service>
    <service id="secrets.decryption_key" class="Symfony\Component\String\LazyString" constructor="fromCallable">
      <argument type="service" id="container.getenv"/>
      <argument>base64:default::SYMFONY_DECRYPTION_SECRET</argument>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/.env.test.local</argument>
    </service>
    <service id="serializer" class="Symfony\Component\Serializer\Serializer">
      <argument type="collection">
        <argument type="service" id="serializer.denormalizer.unwrapping"/>
        <argument type="service" id="api_platform.openapi.normalizer.legacy"/>
        <argument type="service" id="api_platform.openapi.normalizer.legacy"/>
        <argument type="service" id="api_platform.normalizer.constraint_violation_list"/>
        <argument type="service" id="api_platform.hydra.normalizer.constraint_violation_list"/>
        <argument type="service" id="api_platform.openapi.normalizer.legacy"/>
        <argument type="service" id="api_platform.jsonld.normalizer.validation_exception"/>
        <argument type="service" id="api_platform.hydra.normalizer.documentation"/>
        <argument type="service" id="api_platform.hydra.normalizer.entrypoint"/>
        <argument type="service" id="api_platform.problem.normalizer.validation_exception"/>
        <argument type="service" id="api_platform.jsonld.normalizer.error"/>
        <argument type="service" id="serializer.normalizer.problem"/>
        <argument type="service" id="serializer.normalizer.uid"/>
        <argument type="service" id="api_platform.jsonld.normalizer.item"/>
        <argument type="service" id="api_platform.serializer.normalizer.item"/>
        <argument type="service" id="serializer.normalizer.datetime"/>
        <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
        <argument type="service" id="serializer.normalizer.datetimezone"/>
        <argument type="service" id="serializer.normalizer.dateinterval"/>
        <argument type="service" id="serializer.normalizer.form_error"/>
        <argument type="service" id="serializer.normalizer.backed_enum"/>
        <argument type="service" id="serializer.normalizer.number"/>
        <argument type="service" id="serializer.normalizer.data_uri"/>
        <argument type="service" id="serializer.normalizer.json_serializable"/>
        <argument type="service" id="api_platform.hydra.normalizer.collection_filters"/>
        <argument type="service" id="serializer.denormalizer.array"/>
        <argument type="service" id="api_platform.jsonld.normalizer.object"/>
        <argument type="service" id="serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="serializer.encoder.xml"/>
        <argument type="service" id="serializer.encoder.json"/>
        <argument type="service" id="serializer.encoder.yaml"/>
        <argument type="service" id="serializer.encoder.csv"/>
        <argument type="service" id="api_platform.jsonopenapi.encoder"/>
        <argument type="service" id="api_platform.yamlopenapi.encoder"/>
        <argument type="service" id="api_platform.jsonld.encoder"/>
        <argument type="service" id="api_platform.problem.encoder"/>
      </argument>
      <argument type="collection">
        <argument key="hydra_prefix">false</argument>
      </argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata">
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer" autowire="true">
      <tag name="serializer.normalizer" built_in="1" priority="-915"/>
      <tag name="serializer.normalizer.default" priority="-915"/>
      <argument type="collection">
        <argument key="hydra_prefix">false</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer">
      <tag name="serializer.normalizer" built_in="1" priority="-915"/>
      <tag name="serializer.normalizer.default" priority="-915"/>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer">
      <tag name="serializer.normalizer" built_in="1" priority="-915"/>
      <tag name="serializer.normalizer.default" priority="-915"/>
      <argument type="collection">
        <argument key="hydra_prefix">false</argument>
      </argument>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer">
      <tag name="serializer.normalizer" built_in="1" priority="-920"/>
      <tag name="serializer.normalizer.default" priority="-920"/>
      <argument>null</argument>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer">
      <tag name="serializer.normalizer" built_in="1" priority="-910"/>
      <tag name="serializer.normalizer.default" priority="-910"/>
      <argument type="collection">
        <argument key="hydra_prefix">false</argument>
      </argument>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer">
      <tag name="serializer.normalizer" built_in="1" priority="-950"/>
      <tag name="serializer.normalizer.default" priority="-950"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="hydra_prefix">false</argument>
      </argument>
    </service>
    <service id="serializer.normalizer.problem" class="Symfony\Component\Serializer\Normalizer\ProblemNormalizer">
      <tag name="serializer.normalizer" built_in="1" priority="-890"/>
      <tag name="serializer.normalizer.default" priority="-890"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="hydra_prefix">false</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="serializer.denormalizer.unwrapping" class="Symfony\Component\Serializer\Normalizer\UnwrappingDenormalizer">
      <tag name="serializer.normalizer" built_in="1" priority="1000"/>
      <tag name="serializer.normalizer.default" priority="1000"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="serializer.normalizer.uid" class="Symfony\Component\Serializer\Normalizer\UidNormalizer">
      <tag name="serializer.normalizer" built_in="1" priority="-890"/>
      <tag name="serializer.normalizer.default" priority="-890"/>
      <argument type="collection">
        <argument key="hydra_prefix">false</argument>
      </argument>
    </service>
    <service id="serializer.normalizer.form_error" class="Symfony\Component\Serializer\Normalizer\FormErrorNormalizer">
      <tag name="serializer.normalizer" built_in="1" priority="-915"/>
      <tag name="serializer.normalizer.default" priority="-915"/>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer">
      <tag name="serializer.normalizer" built_in="1" priority="-1000"/>
      <tag name="serializer.normalizer.default" priority="-1000"/>
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection">
        <argument key="hydra_prefix">false</argument>
      </argument>
      <argument type="service" id="property_info" on-invalid="ignore"/>
    </service>
    <service id="serializer.normalizer.property" class="Symfony\Component\Serializer\Normalizer\PropertyNormalizer">
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer">
      <tag name="serializer.normalizer" built_in="1" priority="-990"/>
      <tag name="serializer.normalizer.default" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AttributeLoader"/>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AttributeLoader"/>
        </argument>
        <argument type="service">
          <service class="ApiPlatform\Serializer\Mapping\Loader\PropertyMetadataLoader">
            <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
          </service>
        </argument>
      </argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface">
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder">
      <tag name="serializer.encoder" built_in="1"/>
      <tag name="serializer.encoder.default"/>
      <argument type="collection">
        <argument key="hydra_prefix">false</argument>
      </argument>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder">
      <tag name="serializer.encoder" built_in="1"/>
      <tag name="serializer.encoder.default"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="hydra_prefix">false</argument>
      </argument>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder">
      <tag name="serializer.encoder" built_in="1"/>
      <tag name="serializer.encoder.default"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="hydra_prefix">false</argument>
      </argument>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder">
      <tag name="serializer.encoder" built_in="1"/>
      <tag name="serializer.encoder.default"/>
      <argument type="collection">
        <argument key="hydra_prefix">false</argument>
      </argument>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter"/>
    <service id="serializer.name_converter.snake_case_to_camel_case" class="Symfony\Component\Serializer\NameConverter\SnakeCaseToCamelCaseNameConverter"/>
    <service id="serializer.name_converter.metadata_aware.abstract" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter" abstract="true">
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter">
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="error_handler.error_renderer.serializer" class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer">
      <argument type="service" id="serializer"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
        </service>
      </argument>
      <argument type="service" id="twig.error_renderer.html"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="serializer.normalizer.backed_enum" class="Symfony\Component\Serializer\Normalizer\BackedEnumNormalizer">
      <tag name="serializer.normalizer" built_in="1" priority="-915"/>
      <tag name="serializer.normalizer.default" priority="-915"/>
    </service>
    <service id="serializer.normalizer.number" class="Symfony\Component\Serializer\Normalizer\NumberNormalizer">
      <tag name="serializer.normalizer" built_in="1" priority="-915"/>
      <tag name="serializer.normalizer.default" priority="-915"/>
    </service>
    <service id="type_info.type_context_factory" class="Symfony\Component\TypeInfo\TypeContext\TypeContextFactory">
      <argument type="service" id="type_info.resolver.string" on-invalid="null"/>
    </service>
    <service id="type_info.resolver" class="Symfony\Component\TypeInfo\TypeResolver\TypeResolver">
      <argument type="service" id=".service_locator.riiCAol"/>
    </service>
    <service id="type_info.resolver.reflection_type" class="Symfony\Component\TypeInfo\TypeResolver\ReflectionTypeResolver">
      <argument type="service" id="type_info.type_context_factory"/>
    </service>
    <service id="type_info.resolver.reflection_parameter" class="Symfony\Component\TypeInfo\TypeResolver\ReflectionParameterTypeResolver">
      <argument type="service" id="type_info.resolver.reflection_type"/>
      <argument type="service" id="type_info.type_context_factory"/>
    </service>
    <service id="type_info.resolver.reflection_property" class="Symfony\Component\TypeInfo\TypeResolver\ReflectionPropertyTypeResolver">
      <argument type="service" id="type_info.resolver.reflection_type"/>
      <argument type="service" id="type_info.type_context_factory"/>
    </service>
    <service id="type_info.resolver.reflection_return" class="Symfony\Component\TypeInfo\TypeResolver\ReflectionReturnTypeResolver">
      <argument type="service" id="type_info.resolver.reflection_type"/>
      <argument type="service" id="type_info.type_context_factory"/>
    </service>
    <service id="type_info.resolver.string" class="Symfony\Component\TypeInfo\TypeResolver\StringTypeResolver"/>
    <service id="type_info.resolver.reflection_parameter.phpdoc_aware" class="Symfony\Component\TypeInfo\TypeResolver\PhpDocAwareReflectionTypeResolver">
      <argument type="service" id="type_info.resolver.reflection_parameter"/>
      <argument type="service" id="type_info.resolver.string"/>
      <argument type="service" id="type_info.type_context_factory"/>
    </service>
    <service id="type_info.resolver.reflection_property.phpdoc_aware" class="Symfony\Component\TypeInfo\TypeResolver\PhpDocAwareReflectionTypeResolver">
      <argument type="service" id="type_info.resolver.reflection_property"/>
      <argument type="service" id="type_info.resolver.string"/>
      <argument type="service" id="type_info.type_context_factory"/>
    </service>
    <service id="type_info.resolver.reflection_return.phpdoc_aware" class="Symfony\Component\TypeInfo\TypeResolver\PhpDocAwareReflectionTypeResolver">
      <argument type="service" id="type_info.resolver.reflection_return"/>
      <argument type="service" id="type_info.resolver.string"/>
      <argument type="service" id="type_info.type_context_factory"/>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.constructor_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.phpstan_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.php_doc_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.constructor_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="property_info.constructor_extractor" class="Symfony\Component\PropertyInfo\Extractor\ConstructorExtractor">
      <tag name="property_info.type_extractor" priority="-999"/>
      <argument type="iterator">
        <argument type="service" id="property_info.phpstan_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.phpstan_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpStanExtractor">
      <tag name="property_info.type_extractor" priority="-1000"/>
      <tag name="property_info.constructor_extractor" priority="-1000"/>
    </service>
    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
      <tag name="property_info.constructor_extractor" priority="-1001"/>
    </service>
    <service id="web_link.http_header_serializer" class="Symfony\Component\WebLink\HttpHeaderSerializer"/>
    <service id="web_link.add_link_header_listener" class="Symfony\Component\WebLink\EventListener\AddLinkHeaderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="web_link.http_header_serializer"/>
    </service>
    <service id="ulid.factory" class="Symfony\Component\Uid\Factory\UlidFactory"/>
    <service id="uuid.factory" class="Symfony\Component\Uid\Factory\UuidFactory">
      <argument>7</argument>
      <argument>7</argument>
      <argument>5</argument>
      <argument>Symfony\Component\Uid\UuidV4</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="name_based_uuid.factory" class="Symfony\Component\Uid\Factory\NameBasedUuidFactory">
      <argument type="abstract">Please set the "framework.uid.name_based_uuid_namespace" configuration option to use the "name_based_uuid.factory" service</argument>
      <factory service="uuid.factory" method="nameBased"/>
    </service>
    <service id="random_based_uuid.factory" class="Symfony\Component\Uid\Factory\RandomBasedUuidFactory">
      <factory service="uuid.factory" method="randomBased"/>
    </service>
    <service id="time_based_uuid.factory" class="Symfony\Component\Uid\Factory\TimeBasedUuidFactory">
      <factory service="uuid.factory" method="timeBased"/>
    </service>
    <service id=".cache_connection.MfCypIA" class="Symfony\Component\Cache\Adapter\AbstractAdapter" constructor="createConnection">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
    </service>
    <service id=".cache_connection.H8vabc8" class="Symfony\Component\Cache\Adapter\AbstractAdapter" constructor="createConnection">
      <argument>valkey://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
    </service>
    <service id=".cache_connection.8kvDmRs" class="Symfony\Component\Cache\Adapter\AbstractAdapter" constructor="createConnection">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="session.factory" class="Symfony\Component\HttpFoundation\Session\SessionFactory">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="session.storage.factory.mock_file"/>
      <argument type="collection">
        <argument type="service" id="test.session.listener"/>
        <argument>onSessionUsage</argument>
      </argument>
    </service>
    <service id="session.storage.factory.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorageFactory">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="session.storage.factory.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorageFactory">
      <argument type="service" id="session.handler.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="session.storage.factory.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorageFactory">
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
    </service>
    <service id="session.handler.native" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service">
        <service class="SessionHandler"/>
      </argument>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
          <argument>null</argument>
        </service>
      </argument>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler">
      <argument type="abstract">A string or a connection object</argument>
      <argument type="collection"/>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session.marshaller" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\IdentityMarshaller"/>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setGroupProviderLocator">
        <argument type="service" id=".service_locator.GIuJv7e"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="enableAttributeMapping"/>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" constructor="create">
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/validation.php</argument>
      <argument type="service" id="cache.validator"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory">
      <argument type="service" id=".service_locator.4xBqg6G"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\AllValidator" class="Symfony\Component\Validator\Constraints\AllValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\AtLeastOneOfValidator" class="Symfony\Component\Validator\Constraints\AtLeastOneOfValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\BicValidator" class="Symfony\Component\Validator\Constraints\BicValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\BlankValidator" class="Symfony\Component\Validator\Constraints\BlankValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CallbackValidator" class="Symfony\Component\Validator\Constraints\CallbackValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CardSchemeValidator" class="Symfony\Component\Validator\Constraints\CardSchemeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CharsetValidator" class="Symfony\Component\Validator\Constraints\CharsetValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ChoiceValidator" class="Symfony\Component\Validator\Constraints\ChoiceValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CidrValidator" class="Symfony\Component\Validator\Constraints\CidrValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CollectionValidator" class="Symfony\Component\Validator\Constraints\CollectionValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CompoundValidator" class="Symfony\Component\Validator\Constraints\CompoundValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CountValidator" class="Symfony\Component\Validator\Constraints\CountValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CountryValidator" class="Symfony\Component\Validator\Constraints\CountryValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CssColorValidator" class="Symfony\Component\Validator\Constraints\CssColorValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CurrencyValidator" class="Symfony\Component\Validator\Constraints\CurrencyValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DateTimeValidator" class="Symfony\Component\Validator\Constraints\DateTimeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DateValidator" class="Symfony\Component\Validator\Constraints\DateValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DivisibleByValidator" class="Symfony\Component\Validator\Constraints\DivisibleByValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\EmailValidator" class="Symfony\Component\Validator\Constraints\EmailValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\EqualToValidator" class="Symfony\Component\Validator\Constraints\EqualToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionSyntaxValidator" class="Symfony\Component\Validator\Constraints\ExpressionSyntaxValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionValidator" class="Symfony\Component\Validator\Constraints\ExpressionValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\FileValidator" class="Symfony\Component\Validator\Constraints\FileValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\GreaterThanOrEqualValidator" class="Symfony\Component\Validator\Constraints\GreaterThanOrEqualValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\GreaterThanValidator" class="Symfony\Component\Validator\Constraints\GreaterThanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\HostnameValidator" class="Symfony\Component\Validator\Constraints\HostnameValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IbanValidator" class="Symfony\Component\Validator\Constraints\IbanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IdenticalToValidator" class="Symfony\Component\Validator\Constraints\IdenticalToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ImageValidator" class="Symfony\Component\Validator\Constraints\ImageValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IpValidator" class="Symfony\Component\Validator\Constraints\IpValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsFalseValidator" class="Symfony\Component\Validator\Constraints\IsFalseValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsNullValidator" class="Symfony\Component\Validator\Constraints\IsNullValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsTrueValidator" class="Symfony\Component\Validator\Constraints\IsTrueValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsbnValidator" class="Symfony\Component\Validator\Constraints\IsbnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsinValidator" class="Symfony\Component\Validator\Constraints\IsinValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IssnValidator" class="Symfony\Component\Validator\Constraints\IssnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\JsonValidator" class="Symfony\Component\Validator\Constraints\JsonValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LanguageValidator" class="Symfony\Component\Validator\Constraints\LanguageValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LengthValidator" class="Symfony\Component\Validator\Constraints\LengthValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LessThanOrEqualValidator" class="Symfony\Component\Validator\Constraints\LessThanOrEqualValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LessThanValidator" class="Symfony\Component\Validator\Constraints\LessThanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LocaleValidator" class="Symfony\Component\Validator\Constraints\LocaleValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LuhnValidator" class="Symfony\Component\Validator\Constraints\LuhnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\MacAddressValidator" class="Symfony\Component\Validator\Constraints\MacAddressValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" class="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotBlankValidator" class="Symfony\Component\Validator\Constraints\NotBlankValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotEqualToValidator" class="Symfony\Component\Validator\Constraints\NotEqualToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotIdenticalToValidator" class="Symfony\Component\Validator\Constraints\NotIdenticalToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotNullValidator" class="Symfony\Component\Validator\Constraints\NotNullValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\PasswordStrengthValidator" class="Symfony\Component\Validator\Constraints\PasswordStrengthValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\RangeValidator" class="Symfony\Component\Validator\Constraints\RangeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\RegexValidator" class="Symfony\Component\Validator\Constraints\RegexValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\SequentiallyValidator" class="Symfony\Component\Validator\Constraints\SequentiallyValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TimeValidator" class="Symfony\Component\Validator\Constraints\TimeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TimezoneValidator" class="Symfony\Component\Validator\Constraints\TimezoneValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TypeValidator" class="Symfony\Component\Validator\Constraints\TypeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UlidValidator" class="Symfony\Component\Validator\Constraints\UlidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UniqueValidator" class="Symfony\Component\Validator\Constraints\UniqueValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UrlValidator" class="Symfony\Component\Validator\Constraints\UrlValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UuidValidator" class="Symfony\Component\Validator\Constraints\UuidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ValidValidator" class="Symfony\Component\Validator\Constraints\ValidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\WeekValidator" class="Symfony\Component\Validator\Constraints\WeekValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\WhenValidator" class="Symfony\Component\Validator\Constraints\WhenValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\WordCountValidator" class="Symfony\Component\Validator\Constraints\WordCountValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\YamlValidator" class="Symfony\Component\Validator\Constraints\YamlValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
      <argument type="service" id="validator.expression_language" on-invalid="null"/>
    </service>
    <service id="validator.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <argument type="service" id="cache.validator_expression_language" on-invalid="null"/>
      <call method="registerProvider">
        <argument type="service" id="validator.expression_language_provider" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.validator_expression_language" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>R489z6rfnX</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="validator.expression_language_provider" class="Symfony\Component\Validator\Constraints\ExpressionLanguageProvider"/>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator"/>
      <argument>html5</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="http_client.uri_template" on-invalid="null"/>
      <argument>UTF-8</argument>
      <argument>false</argument>
      <argument>null</argument>
    </service>
    <service id="validator.when" class="Symfony\Component\Validator\Constraints\WhenValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="validator.expression_language" on-invalid="null"/>
    </service>
    <service id="validator.no_suspicious_characters" class="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator"/>
      <argument type="collection"/>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="twig" class="Twig\Environment">
      <tag name="container.preload" class="Twig\Cache\FilesystemCache"/>
      <tag name="container.preload" class="Twig\Extension\CoreExtension"/>
      <tag name="container.preload" class="Twig\Extension\EscaperExtension"/>
      <tag name="container.preload" class="Twig\Extension\OptimizerExtension"/>
      <tag name="container.preload" class="Twig\Extension\StagingExtension"/>
      <tag name="container.preload" class="Twig\ExpressionParser\Infix\BinaryOperatorExpressionParser"/>
      <tag name="container.preload" class="Twig\ExtensionSet"/>
      <tag name="container.preload" class="Twig\Template"/>
      <tag name="container.preload" class="Twig\TemplateWrapper"/>
      <tag name="kernel.reset" method="resetGlobals"/>
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="strict_variables">true</argument>
        <argument key="cache">/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="debug">true</argument>
        <argument key="autoescape">name</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable">
      <call method="setEnvironment">
        <argument>test</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
      <call method="setEnabledLocales">
        <argument type="collection"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator">
      <argument type="service" id="kernel"/>
      <argument type="collection"/>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/templates</argument>
      <argument type="collection">
        <argument>*.twig</argument>
      </argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.lMv3Dwi.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
      <argument>null</argument>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend</argument>
      <call method="addPath">
        <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/doctrine/doctrine-bundle/templates</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/doctrine/doctrine-bundle/templates</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/doctrine/doctrine-migrations-bundle/templates</argument>
        <argument>DoctrineMigrations</argument>
      </call>
      <call method="addPath">
        <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/doctrine/doctrine-migrations-bundle/templates</argument>
        <argument>!DoctrineMigrations</argument>
      </call>
      <call method="addPath">
        <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/api-platform/symfony/Bundle/Resources/views</argument>
        <argument>ApiPlatform</argument>
      </call>
      <call method="addPath">
        <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/vendor/api-platform/symfony/Bundle/Resources/views</argument>
        <argument>!ApiPlatform</argument>
      </call>
      <call method="addPath">
        <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/templates</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension">
      <tag name="twig.extension"/>
      <argument>null</argument>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.htmlsanitizer" class="Symfony\Bridge\Twig\Extension\HtmlSanitizerExtension">
      <argument type="service" id=".service_locator.GIuJv7e"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
      <argument type="service" id="fragment.uri_generator" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader">
      <argument type="service" id=".service_locator.QoTGqUC"/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service">
        <service class="bool">
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="twig.runtime.serializer" class="Symfony\Bridge\Twig\Extension\SerializerRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="serializer"/>
    </service>
    <service id="twig.extension.serializer" class="Symfony\Bridge\Twig\Extension\SerializerExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="controller.template_attribute_listener" class="Symfony\Bridge\Twig\EventListener\TemplateAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Show a list of twig functions, filters, globals and tests</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument>*.twig</argument>
      </argument>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a Twig template and outputs encountered errors</argument>
      </call>
    </service>
    <service id="twig.validator" class="Symfony\Bridge\Twig\Validator\Constraints\TwigValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.mDV6p8L"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.helper" class="Symfony\Bundle\SecurityBundle\Security">
      <argument type="service" id=".service_locator.2QMaG2L"/>
      <argument type="collection">
        <argument key="dev">null</argument>
        <argument key="login">null</argument>
        <argument key="public_api">null</argument>
        <argument key="google_oauth">null</argument>
        <argument key="microsoft_oauth">null</argument>
        <argument key="api" type="service" id=".service_locator.JimicQO"/>
      </argument>
    </service>
    <service id="security.user_value_resolver" class="Symfony\Component\Security\Http\Controller\UserValueResolver">
      <tag priority="120" name="Symfony\Component\Security\Http\Controller\UserValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.security_token_value_resolver" class="Symfony\Component\Security\Http\Controller\SecurityTokenValueResolver">
      <tag priority="120" name="Symfony\Component\Security\Http\Controller\SecurityTokenValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver"/>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy">
      <argument>migrate</argument>
      <argument type="service" id="security.csrf.token_storage" on-invalid="ignore"/>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy">
      <argument>none</argument>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\InMemoryUserChecker"/>
    <service id="security.user_checker_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection">
        <argument key="api" type="service_closure" id="security.user_checker"/>
      </argument>
    </service>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage">
      <argument type="service" id="cache.security_expression_language" on-invalid="null"/>
      <call method="registerProvider">
        <argument type="service" id="api_platform.security.expression_language_provider"/>
      </call>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy">
      <argument type="collection"/>
    </service>
    <service id="security.access.simple_role_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleVoter">
      <tag name="security.voter" priority="245"/>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.access.closure_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ClosureVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="security.impersonate_url_generator" class="Symfony\Component\Security\Http\Impersonate\ImpersonateUrlGenerator">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap">
      <argument type="service" id=".service_locator.shxE9gp"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.gOpgIHx"/>
        <argument key="security.firewall.map.context.login" type="service" id=".security.request_matcher.0hnHUuT"/>
        <argument key="security.firewall.map.context.public_api" type="service" id=".security.request_matcher.7W5bBcb"/>
        <argument key="security.firewall.map.context.google_oauth" type="service" id=".security.request_matcher.ER1XpfU"/>
        <argument key="security.firewall.map.context.microsoft_oauth" type="service" id=".security.request_matcher.__yH6K8"/>
        <argument key="security.firewall.map.context.api" type="service" id=".security.request_matcher.NaFk5J1"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument type="abstract">LogoutListener</argument>
      <argument type="abstract">FirewallConfig</argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument type="abstract">LogoutListener</argument>
      <argument type="abstract">FirewallConfig</argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" abstract="true">
      <argument type="abstract">name</argument>
      <argument type="abstract">user_checker</argument>
      <argument type="abstract">request_matcher</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
    </service>
    <service id="security.route_loader.logout" class="Symfony\Bundle\SecurityBundle\Routing\LogoutRouteLoader">
      <tag name="routing.route_loader"/>
      <argument type="collection"/>
      <argument>security.logout_uris</argument>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" abstract="true">
      <argument type="abstract">firewall</argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" abstract="true">
      <argument type="abstract">security.ldap.ldap</argument>
      <argument type="abstract">base dn</argument>
      <argument type="abstract">search dn</argument>
      <argument type="abstract">search password</argument>
      <argument type="abstract">default_roles</argument>
      <argument type="abstract">uid key</argument>
      <argument type="abstract">filter</argument>
      <argument type="abstract">password_attribute</argument>
      <argument type="abstract">extra_fields (email etc)</argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>{^https://%%s$}i</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>kDUYuC9Co7</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="controller.is_granted_attribute_listener" class="Symfony\Component\Security\Http\EventListener\IsGrantedAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.is_granted_attribute_expression_language" on-invalid="null"/>
    </service>
    <service id="security.is_granted_attribute_expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <argument type="service" id="cache.security_is_granted_attribute_expression_language" on-invalid="null"/>
    </service>
    <service id="cache.security_is_granted_attribute_expression_language" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>5Cqq9EtLH8</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="security.is_csrf_token_valid_attribute_expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <argument type="service" id="cache.security_is_csrf_token_valid_attribute_expression_language" on-invalid="null"/>
    </service>
    <service id="cache.security_is_csrf_token_valid_attribute_expression_language" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>sMp6LJEiSP</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="security.password_hasher_factory" class="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory">
      <argument type="collection">
        <argument key="Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface" type="collection">
          <argument key="algorithm">auto</argument>
          <argument key="cost">4</argument>
          <argument key="time_cost">3</argument>
          <argument key="memory_cost">10</argument>
          <argument key="migrate_from" type="collection"/>
          <argument key="hash_algorithm">sha512</argument>
          <argument key="key_length">40</argument>
          <argument key="ignore_case">false</argument>
          <argument key="encode_as_base64">true</argument>
          <argument key="iterations">5000</argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_hasher" class="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher">
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap">
      <call method="add">
        <argument type="service" id=".security.request_matcher.BLmbogn"/>
        <argument type="collection">
          <argument>PUBLIC_ACCESS</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.nHRaGku"/>
        <argument type="collection">
          <argument>PUBLIC_ACCESS</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.BW2GChV"/>
        <argument type="collection">
          <argument>PUBLIC_ACCESS</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.WgCR6gS"/>
        <argument type="collection">
          <argument>PUBLIC_ACCESS</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.q5eLlT5"/>
        <argument type="collection">
          <argument>PUBLIC_ACCESS</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.UmPEJiI"/>
        <argument type="collection">
          <argument>PUBLIC_ACCESS</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher._XBHvQS"/>
        <argument type="collection">
          <argument>PUBLIC_ACCESS</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.HRK1z.o"/>
        <argument type="collection">
          <argument>PUBLIC_ACCESS</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.D8D3oSo"/>
        <argument type="collection">
          <argument>PUBLIC_ACCESS</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.0tMb.ud"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="App\Repository\UserRepository"/>
      </argument>
      <argument type="abstract">Provider Key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">event dispatcher</argument>
      <argument type="collection"/>
    </service>
    <service id="security.logout.listener.session" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener" abstract="true"/>
    <service id="security.logout.listener.clear_site_data" class="Symfony\Component\Security\Http\EventListener\ClearSiteDataLogoutListener" abstract="true"/>
    <service id="security.logout.listener.cookie_clearing" class="Symfony\Component\Security\Http\EventListener\CookieClearingLogoutListener" abstract="true"/>
    <service id="security.logout.listener.default" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">target url</argument>
    </service>
    <service id="security.authentication.listener.abstract" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" abstract="true">
      <argument type="abstract">The custom success handler service</argument>
      <argument type="collection"/>
      <argument type="abstract">Provider-shared Key</argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" abstract="true">
      <argument type="abstract">The custom failure handler service</argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">User Checker</argument>
      <argument type="abstract">Provider Key</argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="abstract">Target Route</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
    </service>
    <service id="security.firewall.event_dispatcher_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection">
        <argument key="api" type="service_closure" id="debug.security.event_dispatcher.api"/>
      </argument>
    </service>
    <service id="security.authenticator.manager" class="Symfony\Component\Security\Http\Authentication\AuthenticatorManager" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">authenticators</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="abstract">provider key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <argument type="constant">Symfony\Component\Security\Http\Authentication\ExposeSecurityLevel::None</argument>
      <argument type="abstract">required badges</argument>
    </service>
    <service id="security.authenticator.managers_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection">
        <argument key="api" type="service_closure" id="security.authenticator.manager.api"/>
      </argument>
    </service>
    <service id="security.user_authenticator" class="Symfony\Bundle\SecurityBundle\Security\UserAuthenticator">
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="security.authenticator.managers_locator"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.firewall.authenticator" class="Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener" abstract="true">
      <argument type="abstract">authenticator manager</argument>
    </service>
    <service id="security.listener.check_authenticator_credentials" class="Symfony\Component\Security\Http\EventListener\CheckCredentialsListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.listener.user_provider" class="Symfony\Component\Security\Http\EventListener\UserProviderListener">
      <tag name="kernel.event_listener" event="Symfony\Component\Security\Http\Event\CheckPassportEvent" priority="1024" method="checkPassport"/>
      <argument type="service" id="App\Repository\UserRepository"/>
    </service>
    <service id="security.listener.user_provider.abstract" class="Symfony\Component\Security\Http\EventListener\UserProviderListener" abstract="true">
      <argument type="abstract">user provider</argument>
    </service>
    <service id="security.listener.password_migrating" class="Symfony\Component\Security\Http\EventListener\PasswordMigratingListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.listener.user_checker" class="Symfony\Component\Security\Http\EventListener\UserCheckerListener" abstract="true">
      <argument type="abstract">user checker</argument>
    </service>
    <service id="security.listener.session" class="Symfony\Component\Security\Http\EventListener\SessionStrategyListener" abstract="true">
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.listener.login_throttling" class="Symfony\Component\Security\Http\EventListener\LoginThrottlingListener" abstract="true">
      <argument type="service" id="request_stack"/>
      <argument type="abstract">request rate limiter</argument>
    </service>
    <service id="security.authenticator.http_basic" class="Symfony\Component\Security\Http\Authenticator\HttpBasicAuthenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">realm name</argument>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authenticator.form_login" class="Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">user provider</argument>
      <argument type="abstract">authentication success handler</argument>
      <argument type="abstract">authentication failure handler</argument>
      <argument type="abstract">options</argument>
    </service>
    <service id="security.authenticator.json_login" class="Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">user provider</argument>
      <argument type="abstract">authentication success handler</argument>
      <argument type="abstract">authentication failure handler</argument>
      <argument type="abstract">options</argument>
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <call method="setTranslator">
        <argument type="service" id="translator" on-invalid="ignore"/>
      </call>
    </service>
    <service id="security.authenticator.x509" class="Symfony\Component\Security\Http\Authenticator\X509Authenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">firewall name</argument>
      <argument type="abstract">user key</argument>
      <argument type="abstract">credentials key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="abstract">credentials user identifier</argument>
    </service>
    <service id="security.authenticator.remote_user" class="Symfony\Component\Security\Http\Authenticator\RemoteUserAuthenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">firewall name</argument>
      <argument type="abstract">user key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_token_extractor.header" class="Symfony\Component\Security\Http\AccessToken\HeaderAccessTokenExtractor"/>
    <service id="security.access_token_extractor.query_string" class="Symfony\Component\Security\Http\AccessToken\QueryAccessTokenExtractor"/>
    <service id="security.access_token_extractor.request_body" class="Symfony\Component\Security\Http\AccessToken\FormEncodedBodyExtractor"/>
    <service id="security.authenticator.access_token" class="Symfony\Component\Security\Http\Authenticator\AccessTokenAuthenticator" abstract="true">
      <argument type="abstract">access token handler</argument>
      <argument type="abstract">access token extractor</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.authenticator.access_token.chain_extractor" class="Symfony\Component\Security\Http\AccessToken\ChainAccessTokenExtractor" abstract="true">
      <argument type="abstract">access token extractors</argument>
    </service>
    <service id="security.access_token_handler.oidc_user_info.http_client" class="Symfony\Contracts\HttpClient\HttpClientInterface" abstract="true">
      <argument type="abstract">http client options</argument>
      <factory service="http_client.uri_template" method="withOptions"/>
    </service>
    <service id="security.access_token_handler.oidc_user_info" class="Symfony\Component\Security\Http\AccessToken\Oidc\OidcUserInfoTokenHandler" abstract="true">
      <argument type="abstract">http client</argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument type="abstract">claim</argument>
    </service>
    <service id="security.access_token_handler.oidc" class="Symfony\Component\Security\Http\AccessToken\Oidc\OidcTokenHandler" abstract="true">
      <argument type="abstract">signature algorithm</argument>
      <argument type="abstract">signature key</argument>
      <argument type="abstract">audience</argument>
      <argument type="abstract">issuers</argument>
      <argument>sub</argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument type="service" id="clock"/>
    </service>
    <service id="security.access_token_handler.oidc_discovery.http_client" class="Symfony\Contracts\HttpClient\HttpClientInterface" abstract="true">
      <argument type="abstract">http client options</argument>
      <factory service="http_client.uri_template" method="withOptions"/>
    </service>
    <service id="security.access_token_handler.oidc.jwk" class="Jose\Component\Core\JWK" constructor="createFromJson" abstract="true">
      <argument type="abstract">signature key</argument>
      <deprecated package="symfony/security-http" version="7.1">The "%service_id%" service is deprecated. Please use "security.access_token_handler.oidc.jwkset" instead</deprecated>
    </service>
    <service id="security.access_token_handler.oidc.jwkset" class="Jose\Component\Core\JWKSet" constructor="createFromJson" abstract="true">
      <argument type="abstract">signature keyset</argument>
    </service>
    <service id="security.access_token_handler.oidc.algorithm_manager_factory" class="Jose\Component\Core\AlgorithmManagerFactory">
      <argument type="tagged_iterator" tag="security.access_token_handler.oidc.signature_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.signature" class="Jose\Component\Core\AlgorithmManager" abstract="true">
      <argument type="abstract">signature algorithms</argument>
      <factory service="security.access_token_handler.oidc.algorithm_manager_factory" method="create"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.ES256" class="Jose\Component\Signature\Algorithm\ES256">
      <tag name="security.access_token_handler.oidc.signature_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.ES384" class="Jose\Component\Signature\Algorithm\ES384">
      <tag name="security.access_token_handler.oidc.signature_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.ES512" class="Jose\Component\Signature\Algorithm\ES512">
      <tag name="security.access_token_handler.oidc.signature_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.RS256" class="Jose\Component\Signature\Algorithm\RS256">
      <tag name="security.access_token_handler.oidc.signature_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.RS384" class="Jose\Component\Signature\Algorithm\RS384">
      <tag name="security.access_token_handler.oidc.signature_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.RS512" class="Jose\Component\Signature\Algorithm\RS512">
      <tag name="security.access_token_handler.oidc.signature_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.PS256" class="Jose\Component\Signature\Algorithm\PS256">
      <tag name="security.access_token_handler.oidc.signature_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.PS384" class="Jose\Component\Signature\Algorithm\PS384">
      <tag name="security.access_token_handler.oidc.signature_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.signature.PS512" class="Jose\Component\Signature\Algorithm\PS512">
      <tag name="security.access_token_handler.oidc.signature_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.encryption_algorithm_manager_factory" class="Jose\Component\Core\AlgorithmManagerFactory">
      <argument type="tagged_iterator" tag="security.access_token_handler.oidc.encryption_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.encryption" class="Jose\Component\Core\AlgorithmManager" abstract="true">
      <argument type="abstract">encryption algorithms</argument>
      <factory service="security.access_token_handler.oidc.encryption_algorithm_manager_factory" method="create"/>
    </service>
    <service id="security.access_token_handler.oidc.encryption.RSAOAEP" class="Jose\Component\Encryption\Algorithm\KeyEncryption\RSAOAEP">
      <tag name="security.access_token_handler.oidc.encryption_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.encryption.ECDHES" class="Jose\Component\Encryption\Algorithm\KeyEncryption\ECDHES">
      <tag name="security.access_token_handler.oidc.encryption_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.encryption.ECDHSS" class="Jose\Component\Encryption\Algorithm\KeyEncryption\ECDHSS">
      <tag name="security.access_token_handler.oidc.encryption_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.encryption.A128CBCHS256" class="Jose\Component\Encryption\Algorithm\ContentEncryption\A128CBCHS256">
      <tag name="security.access_token_handler.oidc.encryption_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.encryption.A192CBCHS384" class="Jose\Component\Encryption\Algorithm\ContentEncryption\A192CBCHS384">
      <tag name="security.access_token_handler.oidc.encryption_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.encryption.A256CBCHS512" class="Jose\Component\Encryption\Algorithm\ContentEncryption\A256CBCHS512">
      <tag name="security.access_token_handler.oidc.encryption_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.encryption.A128GCM" class="Jose\Component\Encryption\Algorithm\ContentEncryption\A128GCM">
      <tag name="security.access_token_handler.oidc.encryption_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.encryption.A192GCM" class="Jose\Component\Encryption\Algorithm\ContentEncryption\A192GCM">
      <tag name="security.access_token_handler.oidc.encryption_algorithm"/>
    </service>
    <service id="security.access_token_handler.oidc.encryption.A256GCM" class="Jose\Component\Encryption\Algorithm\ContentEncryption\A256GCM">
      <tag name="security.access_token_handler.oidc.encryption_algorithm"/>
    </service>
    <service id="security.access_token_handler.oauth2" class="Symfony\Component\Security\Http\AccessToken\OAuth2\Oauth2TokenHandler" abstract="true">
      <argument type="service" id="http_client.uri_template"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
      <argument type="service" id="security.impersonate_url_generator" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager">
      <tag name="kernel.reset" method="reset" on_invalid="ignore"/>
      <tag name="container.decorator" id="security.access.decision_manager" inner="debug.security.access.decision_manager.inner"/>
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener">
      <tag name="kernel.reset" method="reset"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.command.debug_firewall" class="Symfony\Bundle\SecurityBundle\Command\DebugFirewallCommand">
      <tag name="console.command" command="debug:firewall"/>
      <tag name="container.no_preload"/>
      <argument>%security.firewalls%</argument>
      <argument type="service" id=".service_locator.shxE9gp"/>
      <argument type="service" id=".service_locator.8GlXtTV"/>
      <argument type="collection">
        <argument key="api" type="collection">
          <argument type="service" id="debug.security.authenticator.jwt.api"/>
        </argument>
      </argument>
      <argument>false</argument>
      <call method="setName">
        <argument>debug:firewall</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about your security firewall(s)</argument>
      </call>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.gOpgIHx</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.kQIRvor" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id=".security.request_matcher.gOpgIHx" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.kQIRvor"/>
      </argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.login" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>login</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.0hnHUuT</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.ZYo2mvA" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/api/auth/login</argument>
    </service>
    <service id=".security.request_matcher.0hnHUuT" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.ZYo2mvA"/>
      </argument>
    </service>
    <service id="security.firewall.map.context.login" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.login"/>
    </service>
    <service id="security.firewall.map.config.public_api" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>public_api</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.7W5bBcb</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.rVwMIXY" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/api/v1/(clients/register|leads|newsletter-subs|pages|media-assets|packages)</argument>
    </service>
    <service id=".security.request_matcher.7W5bBcb" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.rVwMIXY"/>
      </argument>
    </service>
    <service id="security.firewall.map.context.public_api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.public_api"/>
    </service>
    <service id="security.firewall.map.config.google_oauth" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>google_oauth</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.ER1XpfU</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.W1jixxo" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/api/v1/auth/google</argument>
    </service>
    <service id=".security.request_matcher.ER1XpfU" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.W1jixxo"/>
      </argument>
    </service>
    <service id="security.firewall.map.context.google_oauth" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.google_oauth"/>
    </service>
    <service id="security.firewall.map.config.microsoft_oauth" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>microsoft_oauth</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.__yH6K8</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.hM4CLyk" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/api/v1/auth/microsoft</argument>
    </service>
    <service id=".security.request_matcher.__yH6K8" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.hM4CLyk"/>
      </argument>
    </service>
    <service id="security.firewall.map.context.microsoft_oauth" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.microsoft_oauth"/>
    </service>
    <service id="security.firewall.map.config.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>api</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.NaFk5J1</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>App\Repository\UserRepository</argument>
      <argument>null</argument>
      <argument>security.authenticator.jwt.api</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>jwt</argument>
      </argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.3qgJVJN" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/api</argument>
    </service>
    <service id=".security.request_matcher.NaFk5J1" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.3qgJVJN"/>
      </argument>
    </service>
    <service id="security.user_checker.chain.api" class="Symfony\Component\Security\Core\User\ChainUserChecker">
      <argument type="tagged_iterator" tag="security.user_checker.api"/>
    </service>
    <service id="security.authenticator.jwt.api" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator">
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="lexik_jwt_authentication.extractor.chain_extractor"/>
      <argument type="service" id="App\Repository\UserRepository"/>
      <argument>null</argument>
    </service>
    <service id="debug.security.authenticator.jwt.api" class="Symfony\Component\Security\Http\Authenticator\Debug\TraceableAuthenticator">
      <argument type="service" id="security.authenticator.jwt.api"/>
    </service>
    <service id="security.authenticator.manager.api" class="Symfony\Component\Security\Http\Authentication\AuthenticatorManager">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection">
        <argument type="service" id="debug.security.authenticator.jwt.api"/>
      </argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.event_dispatcher.api"/>
      <argument>api</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <argument type="constant">Symfony\Component\Security\Http\Authentication\ExposeSecurityLevel::None</argument>
      <argument type="collection"/>
    </service>
    <service id="debug.security.firewall.authenticator.api" class="Symfony\Component\Security\Http\Authenticator\Debug\TraceableAuthenticatorManagerListener">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="security.firewall.authenticator.api" inner="debug.security.firewall.authenticator.api.inner"/>
      <argument type="service" id="debug.security.firewall.authenticator.api.inner"/>
    </service>
    <service id="security.listener.user_checker.api" class="Symfony\Component\Security\Http\EventListener\UserCheckerListener">
      <tag name="kernel.event_subscriber" dispatcher="debug.security.event_dispatcher.api"/>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="security.exception_listener.api" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>api</argument>
      <argument type="service" id="security.authenticator.jwt.api"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id=".service_locator.JimicQO" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authenticator.jwt.api" type="service_closure" id="security.authenticator.jwt.api"/>
      </argument>
    </service>
    <service id="security.firewall.map.context.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="debug.security.firewall.authenticator.api"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.api"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.api"/>
    </service>
    <service id=".service_locator.shxE9gp" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.dev" type="service_closure" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.login" type="service_closure" id="security.firewall.map.context.login"/>
        <argument key="security.firewall.map.context.public_api" type="service_closure" id="security.firewall.map.context.public_api"/>
        <argument key="security.firewall.map.context.google_oauth" type="service_closure" id="security.firewall.map.context.google_oauth"/>
        <argument key="security.firewall.map.context.microsoft_oauth" type="service_closure" id="security.firewall.map.context.microsoft_oauth"/>
        <argument key="security.firewall.map.context.api" type="service_closure" id="security.firewall.map.context.api"/>
      </argument>
    </service>
    <service id=".security.request_matcher.BLmbogn" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.ZYo2mvA"/>
      </argument>
    </service>
    <service id=".security.request_matcher.nHRaGku" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.W1jixxo"/>
      </argument>
    </service>
    <service id=".security.request_matcher.BW2GChV" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.hM4CLyk"/>
      </argument>
    </service>
    <service id=".security.request_matcher.3Lati3g" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/api/v1/clients/register</argument>
    </service>
    <service id=".security.request_matcher.WgCR6gS" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.3Lati3g"/>
      </argument>
    </service>
    <service id=".security.request_matcher.0Puek.W" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/api/v1/leads</argument>
    </service>
    <service id=".security.request_matcher.q5eLlT5" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.0Puek.W"/>
      </argument>
    </service>
    <service id=".security.request_matcher.dWM21yE" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/api/v1/newsletter-subs</argument>
    </service>
    <service id=".security.request_matcher.UmPEJiI" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.dWM21yE"/>
      </argument>
    </service>
    <service id=".security.request_matcher.5UIM6U9" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/api/v1/pages</argument>
    </service>
    <service id=".security.request_matcher._XBHvQS" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.5UIM6U9"/>
      </argument>
    </service>
    <service id=".security.request_matcher.XCIzDvf" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/api/v1/media-assets</argument>
    </service>
    <service id=".security.request_matcher.HRK1z.o" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.XCIzDvf"/>
      </argument>
    </service>
    <service id=".security.request_matcher.lAxttc3" class="Symfony\Component\HttpFoundation\RequestMatcher\PathRequestMatcher">
      <argument>^/api/v1/packages</argument>
    </service>
    <service id=".security.request_matcher.D8D3oSo" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.lAxttc3"/>
      </argument>
    </service>
    <service id=".security.request_matcher.0tMb.ud" class="Symfony\Component\HttpFoundation\ChainRequestMatcher">
      <argument type="collection">
        <argument type="service" id=".security.request_matcher.3qgJVJN"/>
      </argument>
    </service>
    <service id="security.command.user_password_hash" class="Symfony\Component\PasswordHasher\Command\UserPasswordHashCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="security.password_hasher_factory"/>
      <argument type="collection">
        <argument>Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface</argument>
      </argument>
      <call method="setName">
        <argument>security:hash-password</argument>
      </call>
      <call method="setDescription">
        <argument>Hash a user password</argument>
      </call>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <argument>true</argument>
      <argument type="service" id="doctrine.debug_data_holder" on-invalid="null"/>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument>%doctrine.dbal.connection_factory.types%</argument>
      <argument type="service" id="doctrine.dbal.connection_factory.dsn_parser"/>
    </service>
    <service id="doctrine.dbal.connection_factory.dsn_parser" class="Doctrine\DBAL\Tools\DsnParser">
      <argument type="collection">
        <argument key="db2">ibm_db2</argument>
        <argument key="mssql">pdo_sqlsrv</argument>
        <argument key="mysql">pdo_mysql</argument>
        <argument key="mysql2">pdo_mysql</argument>
        <argument key="postgres">pdo_pgsql</argument>
        <argument key="postgresql">pdo_pgsql</argument>
        <argument key="pgsql">pdo_pgsql</argument>
        <argument key="sqlite">pdo_sqlite</argument>
        <argument key="sqlite3">pdo_sqlite</argument>
      </argument>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter">
      <argument type="collection"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" class="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand">
      <tag name="console.command" command="dbal:run-sql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>dbal:run-sql</argument>
      </call>
    </service>
    <service id="doctrine.dbal.idle_connection_listener" class="Symfony\Bridge\Doctrine\Middleware\IdleConnection\Listener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="doctrine.dbal.connection_expiries"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.default_schema_manager_factory" class="Doctrine\DBAL\Schema\DefaultSchemaManagerFactory"/>
    <service id="doctrine.dbal.legacy_schema_manager_factory" class="Doctrine\DBAL\Schema\LegacySchemaManagerFactory"/>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration">
      <call method="setSchemaManagerFactory">
        <argument type="service" id="doctrine.dbal.legacy_schema_manager_factory"/>
      </call>
      <call method="setSchemaAssetsFilter">
        <argument type="service" id="doctrine.dbal.default_schema_asset_filter_manager"/>
      </call>
      <call method="setMiddlewares">
        <argument type="collection">
          <argument type="service" id="doctrine.dbal.logging_middleware.default"/>
          <argument type="service" id="doctrine.dbal.debug_middleware.default"/>
          <argument type="service" id="doctrine.dbal.idle_connection_middleware.default"/>
        </argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_regex_schema_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\RegexSchemaAssetFilter">
      <tag name="doctrine.dbal.schema_filter" connection="default"/>
      <argument>~^(?!pg_stat_statements)~</argument>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager">
      <argument type="service" id=".service_locator.ZSS2D.Y"/>
      <argument type="collection">
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.listeners.doctrine_token_provider_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.listeners.pdo_session_handler_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>postGenerateSchema</argument>
          </argument>
          <argument>doctrine.orm.listeners.lock_store_schema_listener</argument>
        </argument>
        <argument type="collection">
          <argument type="collection">
            <argument>loadClassMetadata</argument>
          </argument>
          <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
        </argument>
      </argument>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="url">%env(resolve:DATABASE_URL)%</argument>
        <argument key="use_savepoints">true</argument>
        <argument key="dbname_suffix">_test%env(default::TEST_TOKEN)%</argument>
        <argument key="driver">pdo_mysql</argument>
        <argument key="idle_connection_ttl">600</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="driverOptions" type="collection">
          <argument key="1002">SET timezone='UTC'</argument>
        </argument>
        <argument key="serverVersion" type="string">16</argument>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection">
        <argument key="citext">string</argument>
        <argument key="text">text</argument>
      </argument>
      <call method="setNestTransactionsWithSavepoints">
        <argument>true</argument>
      </call>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" class="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider">
      <argument type="service">
        <service class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
          <tag name="kernel.reset" method="reset"/>
          <argument type="service" id="service_container"/>
          <argument>%doctrine.connections%</argument>
          <argument>%doctrine.entity_managers%</argument>
          <argument>default</argument>
          <argument>default</argument>
        </service>
      </argument>
    </service>
    <service id="doctrine.dbal.connection_expiries" class="ArrayObject"/>
    <service id="doctrine.dbal.logging_middleware" class="Doctrine\DBAL\Logging\Middleware" abstract="true">
      <tag name="monolog.logger" channel="doctrine"/>
      <tag name="doctrine.middleware" connection="default" priority="10"/>
      <argument type="service" id="monolog.logger.doctrine"/>
    </service>
    <service id="doctrine.debug_data_holder" class="Doctrine\Bundle\DoctrineBundle\Middleware\BacktraceDebugDataHolder">
      <tag name="kernel.reset" method="reset"/>
      <argument type="collection">
        <argument>default</argument>
      </argument>
    </service>
    <service id="doctrine.dbal.debug_middleware" class="Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware" abstract="true">
      <tag name="doctrine.middleware" connection="default" priority="10"/>
      <argument type="service" id="doctrine.debug_data_holder"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="doctrine.dbal.idle_connection_middleware" class="Doctrine\Bundle\DoctrineBundle\Middleware\IdleConnectionMiddleware" abstract="true">
      <tag name="doctrine.middleware" connection="default" priority="10"/>
      <argument type="service" id="doctrine.dbal.connection_expiries"/>
      <argument type="collection">
        <argument key="default">600</argument>
      </argument>
    </service>
    <service id=".1_ServiceLocator~bitS4CM" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true"/>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory">
      <argument type="service" id=".service_locator.CsWi4QZ"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener"/>
    <service id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\DoctrineDbalCacheAdapterSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.listeners.doctrine_token_provider_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\RememberMeTokenProviderDoctrineSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <argument type="tagged_iterator" tag="security.remember_me_handler"/>
    </service>
    <service id="doctrine.orm.listeners.pdo_session_handler_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\PdoSessionHandlerSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <argument type="service" id="session.handler.native"/>
    </service>
    <service id="doctrine.orm.listeners.lock_store_schema_listener" class="Symfony\Bridge\Doctrine\SchemaListener\LockStoreSchemaListener">
      <tag name="doctrine.event_listener" event="postGenerateSchema"/>
      <argument type="tagged_iterator" tag="lock.store"/>
    </service>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy"/>
    <service id="doctrine.orm.typed_field_mapper.default" class="Doctrine\ORM\Mapping\DefaultTypedFieldMapper"/>
    <service id="doctrine.ulid_generator" class="Symfony\Bridge\Doctrine\IdGenerator\UlidGenerator">
      <tag name="doctrine.id_generator"/>
      <argument type="service" id="ulid.factory" on-invalid="ignore"/>
    </service>
    <service id="doctrine.uuid_generator" class="Symfony\Bridge\Doctrine\IdGenerator\UuidGenerator">
      <tag name="doctrine.id_generator"/>
      <argument type="service" id="uuid.factory" on-invalid="ignore"/>
    </service>
    <service id="doctrine.orm.command.entity_manager_provider" class="Doctrine\Bundle\DoctrineBundle\Orm\ManagerRegistryAwareEntityManagerProvider">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.entity_value_resolver" class="Symfony\Bridge\Doctrine\ArgumentResolver\EntityValueResolver">
      <tag name="Symfony\Bridge\Doctrine\ArgumentResolver\EntityValueResolver" priority="110">controller.argument_value_resolver</tag>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="doctrine.orm.entity_value_resolver.expression_language" on-invalid="ignore"/>
      <argument type="service">
        <service class="Symfony\Bridge\Doctrine\Attribute\MapEntity">
          <argument>null</argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="collection"/>
          <argument>null</argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument>false</argument>
        </service>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.entity_value_resolver.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\MetadataCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\QueryCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\ResultCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\CollectionRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\CreateCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\DropCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\EntityRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\ORM\Tools\Console\Command\InfoCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\QueryRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\ORM\Tools\Console\Command\RunDqlCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\UpdateCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\ORM\Tools\Console\Command\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration">
      <tag name="doctrine.orm.configuration"/>
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="App">App\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCache">
        <argument type="service" id="cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="setQueryCache">
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
      <call method="setResultCache">
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id=".doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setSchemaIgnoreClasses">
        <argument type="collection"/>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\Bundle\DoctrineBundle\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore_number_aware"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setTypedFieldMapper">
        <argument type="service" id="doctrine.orm.typed_field_mapper.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setLazyGhostObjectEnabled">
        <argument>true</argument>
      </call>
      <call method="setIdentityGenerationPreferences">
        <argument type="collection">
          <argument key="Doctrine\DBAL\Platforms\PostgreSQLPlatform">4</argument>
        </argument>
      </call>
      <call method="enableNativeLazyObjects">
        <argument>false</argument>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
      <call method="addFilter">
        <argument>tenant_filter</argument>
        <argument>App\MultiTenancy\TenantFilter</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_attribute_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AttributeDriver">
      <argument type="collection">
        <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/src/Entity</argument>
      </argument>
      <argument>true</argument>
    </service>
    <service id="cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.doctrine.orm.default.result" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag name="cache.pool"/>
    </service>
    <service id="cache.doctrine.orm.default.query" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag name="cache.pool"/>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <tag name="container.preload" class="Doctrine\ORM\Proxy\Autoloader"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <tag name="property_info.access_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.migrations.dependency_factory" class="Doctrine\Migrations\DependencyFactory" constructor="fromEntityManager">
      <argument type="service" id="doctrine.migrations.configuration_loader"/>
      <argument type="service" id="doctrine.migrations.entity_manager_registry_loader"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <call method="setDefinition">
        <argument>Doctrine\Migrations\Version\MigrationFactory</argument>
        <argument type="service_closure" id="doctrine.migrations.migrations_factory"/>
      </call>
    </service>
    <service id="doctrine.migrations.configuration_loader" class="Doctrine\Migrations\Configuration\Migration\ExistingConfiguration">
      <argument type="service" id="doctrine.migrations.configuration"/>
    </service>
    <service id="doctrine.migrations.connection_loader" class="Doctrine\Migrations\Configuration\Connection\ExistingConnection"/>
    <service id="doctrine.migrations.em_loader" class="Doctrine\Migrations\Configuration\EntityManager\ExistingEntityManager"/>
    <service id="doctrine.migrations.entity_manager_registry_loader" class="Doctrine\Migrations\Configuration\EntityManager\ManagerRegistryEntityManager" constructor="withSimpleDefault">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.migrations.connection_registry_loader" class="Doctrine\Migrations\Configuration\Connection\ConnectionRegistryConnection" constructor="withSimpleDefault">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.migrations.configuration" class="Doctrine\Migrations\Configuration\Configuration">
      <call method="addMigrationsDirectory">
        <argument>DoctrineMigrations</argument>
        <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/migrations</argument>
      </call>
      <call method="setAllOrNothing">
        <argument>false</argument>
      </call>
      <call method="setCheckDatabasePlatform">
        <argument>true</argument>
      </call>
      <call method="setTransactional">
        <argument>true</argument>
      </call>
      <call method="setMetadataStorageConfiguration">
        <argument type="service" id="doctrine.migrations.storage.table_storage"/>
      </call>
    </service>
    <service id="doctrine.migrations.migrations_factory" class="Doctrine\Migrations\Version\MigrationFactory">
      <factory service="doctrine.migrations.dependency_factory" method="getMigrationFactory"/>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Migrations\Tools\Console\Command\DiffCommand">
      <tag name="console.command" command="doctrine:migrations:diff"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:diff</argument>
      <call method="setName">
        <argument>doctrine:migrations:diff</argument>
      </call>
      <call method="setDescription">
        <argument>Generate a migration by comparing your current database to your mapping information.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.sync_metadata_command" class="Doctrine\Migrations\Tools\Console\Command\SyncMetadataCommand">
      <tag name="console.command" command="doctrine:migrations:sync-metadata-storage"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:sync-metadata-storage</argument>
      <call method="setName">
        <argument>doctrine:migrations:sync-metadata-storage</argument>
      </call>
      <call method="setDescription">
        <argument>Ensures that the metadata storage is at the latest version.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.versions_command" class="Doctrine\Migrations\Tools\Console\Command\ListCommand">
      <tag name="console.command" command="doctrine:migrations:list"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:versions</argument>
      <call method="setName">
        <argument>doctrine:migrations:list</argument>
      </call>
      <call method="setDescription">
        <argument>Display a list of all available migrations and their status.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.current_command" class="Doctrine\Migrations\Tools\Console\Command\CurrentCommand">
      <tag name="console.command" command="doctrine:migrations:current"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:current</argument>
      <call method="setName">
        <argument>doctrine:migrations:current</argument>
      </call>
      <call method="setDescription">
        <argument>Outputs the current version</argument>
      </call>
    </service>
    <service id="doctrine_migrations.dump_schema_command" class="Doctrine\Migrations\Tools\Console\Command\DumpSchemaCommand">
      <tag name="console.command" command="doctrine:migrations:dump-schema"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:dump-schema</argument>
      <call method="setName">
        <argument>doctrine:migrations:dump-schema</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the schema for your database to a migration.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Migrations\Tools\Console\Command\ExecuteCommand">
      <tag name="console.command" command="doctrine:migrations:execute"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:execute</argument>
      <call method="setName">
        <argument>doctrine:migrations:execute</argument>
      </call>
      <call method="setDescription">
        <argument>Execute one or more migration versions up or down manually.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Migrations\Tools\Console\Command\GenerateCommand">
      <tag name="console.command" command="doctrine:migrations:generate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:generate</argument>
      <call method="setName">
        <argument>doctrine:migrations:generate</argument>
      </call>
      <call method="setDescription">
        <argument>Generate a blank migration class.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Migrations\Tools\Console\Command\LatestCommand">
      <tag name="console.command" command="doctrine:migrations:latest"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:latest</argument>
      <call method="setName">
        <argument>doctrine:migrations:latest</argument>
      </call>
      <call method="setDescription">
        <argument>Outputs the latest version</argument>
      </call>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Migrations\Tools\Console\Command\MigrateCommand">
      <tag name="console.command" command="doctrine:migrations:migrate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:migrate</argument>
      <call method="setName">
        <argument>doctrine:migrations:migrate</argument>
      </call>
      <call method="setDescription">
        <argument>Execute a migration to a specified version or the latest available version.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.rollup_command" class="Doctrine\Migrations\Tools\Console\Command\RollupCommand">
      <tag name="console.command" command="doctrine:migrations:rollup"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:rollup</argument>
      <call method="setName">
        <argument>doctrine:migrations:rollup</argument>
      </call>
      <call method="setDescription">
        <argument>Rollup migrations by deleting all tracked versions and insert the one version that exists.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Migrations\Tools\Console\Command\StatusCommand">
      <tag name="console.command" command="doctrine:migrations:status"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:status</argument>
      <call method="setName">
        <argument>doctrine:migrations:status</argument>
      </call>
      <call method="setDescription">
        <argument>View the status of a set of migrations.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.up_to_date_command" class="Doctrine\Migrations\Tools\Console\Command\UpToDateCommand">
      <tag name="console.command" command="doctrine:migrations:up-to-date"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:up-to-date</argument>
      <call method="setName">
        <argument>doctrine:migrations:up-to-date</argument>
      </call>
      <call method="setDescription">
        <argument>Tells you if your schema is up-to-date.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Migrations\Tools\Console\Command\VersionCommand">
      <tag name="console.command" command="doctrine:migrations:version"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:version</argument>
      <call method="setName">
        <argument>doctrine:migrations:version</argument>
      </call>
      <call method="setDescription">
        <argument>Manually add and delete migration versions from the version table.</argument>
      </call>
    </service>
    <service id="doctrine_migrations.schema_filter_listener" class="Doctrine\Bundle\MigrationsBundle\EventListener\SchemaFilterListener">
      <tag name="doctrine.dbal.schema_filter" connection="default"/>
      <tag name="kernel.event_listener" event="console.command" method="onConsoleCommand"/>
      <tag name="container.no_preload"/>
      <argument>doctrine_migration_versions</argument>
    </service>
    <service id="doctrine.migrations.storage.table_storage" class="Doctrine\Migrations\Metadata\Storage\TableMetadataStorageConfiguration"/>
    <service id="nelmio_cors.cors_listener" class="Nelmio\CorsBundle\EventListener\CorsListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="250"/>
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="0"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="nelmio_cors.options_resolver"/>
    </service>
    <service id="nelmio_cors.options_resolver" class="Nelmio\CorsBundle\Options\Resolver">
      <argument type="collection">
        <argument type="service" id="nelmio_cors.options_provider.config"/>
      </argument>
    </service>
    <service id="nelmio_cors.options_provider.config" class="Nelmio\CorsBundle\Options\ConfigProvider">
      <tag name="nelmio_cors.options_provider" priority="-1"/>
      <argument>%nelmio_cors.map%</argument>
      <argument>%nelmio_cors.defaults%</argument>
    </service>
    <service id="nelmio_cors.cacheable_response_vary_listener" class="Nelmio\CorsBundle\EventListener\CacheableResponseVaryListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onResponse" priority="-10"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="api_platform.state_provider.locator" class="ApiPlatform\State\CallableProvider">
      <argument type="service" id=".service_locator.5j9N9oX"/>
    </service>
    <service id="api_platform.state_processor.locator" class="ApiPlatform\State\CallableProcessor">
      <argument type="service" id=".service_locator.3z9TdAF"/>
    </service>
    <service id="api_platform.pagination" class="ApiPlatform\State\Pagination\Pagination">
      <argument>%api_platform.collection.pagination%</argument>
      <argument>%api_platform.graphql.collection.pagination%</argument>
    </service>
    <service id="api_platform.serializer_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="serializer" type="service_closure" id="serializer"/>
      </argument>
    </service>
    <service id="api_platform.pagination_options" class="ApiPlatform\State\Pagination\PaginationOptions">
      <argument>true</argument>
      <argument>page</argument>
      <argument>false</argument>
      <argument>itemsPerPage</argument>
      <argument>false</argument>
      <argument>pagination</argument>
      <argument>30</argument>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>partial</argument>
    </service>
    <service id="api_platform.state_provider.create" class="ApiPlatform\State\CreateProvider">
      <tag name="api_platform.state_provider" key="ApiPlatform\State\CreateProvider"/>
      <tag name="api_platform.state_provider" key="api_platform.state_provider.create"/>
      <argument type="service" id="api_platform.state_provider.locator"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
    </service>
    <service id="api_platform.state_provider.object" class="ApiPlatform\State\ObjectProvider">
      <tag name="api_platform.state_provider" key="ApiPlatform\State\ObjectProvider"/>
      <tag name="api_platform.state_provider" key="api_platform.state_provider.object"/>
    </service>
    <service id="api_platform.state_provider.backed_enum" class="ApiPlatform\State\Provider\BackedEnumProvider">
      <tag name="api_platform.state_provider" key="ApiPlatform\State\Provider\BackedEnumProvider"/>
      <tag name="api_platform.state_provider" key="api_platform.state_provider.backed_enum"/>
    </service>
    <service id="api_platform.listener.exception" class="ApiPlatform\Symfony\EventListener\ExceptionListener">
      <tag name="monolog.logger" channel="request"/>
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="-96"/>
      <argument type="service" id="api_platform.error_listener" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="api_platform.cache_warmer.cache_pool_clearer" class="ApiPlatform\Symfony\Bundle\CacheWarmer\CachePoolClearerCacheWarmer">
      <tag name="kernel.cache_warmer" priority="64"/>
      <argument type="service" id="cache.system_clearer"/>
      <argument type="collection">
        <argument>api_platform.cache.metadata.property</argument>
        <argument>api_platform.cache.metadata.resource</argument>
        <argument>api_platform.cache.metadata.resource_collection</argument>
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument>api_platform.cache.identifiers_extractor</argument>
        <argument>api_platform.elasticsearch.cache.metadata.document</argument>
      </argument>
    </service>
    <service id="api_platform.action.not_found" class="ApiPlatform\Symfony\Action\NotFoundAction" public="true"/>
    <service id="api_platform.action.not_exposed" class="ApiPlatform\Symfony\Action\NotExposedAction" public="true"/>
    <service id="api_platform.negotiator" class="Negotiation\Negotiator"/>
    <service id="api_platform.resource_class_resolver" class="ApiPlatform\Metadata\ResourceClassResolver">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
    </service>
    <service id="api_platform.router" class="ApiPlatform\Symfony\Routing\Router">
      <argument type="service" id="router.default"/>
      <argument>1</argument>
    </service>
    <service id="api_platform.serializer.filter_parameter_provider" class="ApiPlatform\Serializer\Parameter\SerializerFilterParameterProvider">
      <tag name="api_platform.parameter_provider" key="api_platform.serializer.filter_parameter_provider" priority="-895"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.serializer.context_builder.filter" class="ApiPlatform\Serializer\SerializerFilterContextBuilder">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter.inner"/>
    </service>
    <service id="api_platform.serializer.property_filter" class="ApiPlatform\Serializer\Filter\PropertyFilter" abstract="true">
      <argument>properties</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.serializer.group_filter" class="ApiPlatform\Serializer\Filter\GroupFilter" abstract="true"/>
    <service id="api_platform.serializer.normalizer.item" class="ApiPlatform\Serializer\ItemNormalizer">
      <tag name="serializer.normalizer" priority="-895"/>
      <tag name="serializer.normalizer.default" priority="-895"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached" on-invalid="ignore"/>
      <argument type="service" id="api_platform.security.resource_access_checker" on-invalid="ignore"/>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="api_platform.serializer.mapping.class_metadata_factory" class="ApiPlatform\Serializer\Mapping\Factory\ClassMetadataFactory">
      <tag name="container.decorator" id="serializer.mapping.class_metadata_factory" inner="api_platform.serializer.mapping.class_metadata_factory.inner"/>
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory.inner"/>
    </service>
    <service id="api_platform.path_segment_name_generator.underscore" class="ApiPlatform\Metadata\Operation\UnderscorePathSegmentNameGenerator"/>
    <service id="api_platform.path_segment_name_generator.dash" class="ApiPlatform\Metadata\Operation\DashPathSegmentNameGenerator"/>
    <service id="api_platform.metadata.path_segment_name_generator.underscore" class="ApiPlatform\Metadata\Operation\UnderscorePathSegmentNameGenerator">
      <argument type="service" id="api_platform.metadata.inflector" on-invalid="null"/>
    </service>
    <service id="api_platform.metadata.path_segment_name_generator.dash" class="ApiPlatform\Metadata\Operation\DashPathSegmentNameGenerator">
      <argument type="service" id="api_platform.metadata.inflector" on-invalid="null"/>
    </service>
    <service id="api_platform.metadata.inflector" class="ApiPlatform\Metadata\Util\Inflector"/>
    <service id="api_platform.cache.route_name_resolver" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>Eq+FXEEVbJ</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.route_loader" class="ApiPlatform\Symfony\Routing\ApiLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="service_container"/>
      <argument>%api_platform.formats%</argument>
      <argument>%api_platform.resource_class_directories%</argument>
      <argument>false</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>false</argument>
    </service>
    <service id="api_platform.symfony.iri_converter.skolem" class="ApiPlatform\Symfony\Routing\SkolemIriConverter">
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.api.identifiers_extractor" class="ApiPlatform\Metadata\IdentifiersExtractor">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="api_platform.uri_variables.converter" class="ApiPlatform\Metadata\UriVariablesConverter">
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.uri_variables.transformer"/>
    </service>
    <service id="api_platform.uri_variables.transformer.integer" class="ApiPlatform\Metadata\UriVariableTransformer\IntegerUriVariableTransformer">
      <tag name="api_platform.uri_variables.transformer" priority="-100"/>
    </service>
    <service id="api_platform.uri_variables.transformer.date_time" class="ApiPlatform\Metadata\UriVariableTransformer\DateTimeUriVariableTransformer">
      <tag name="api_platform.uri_variables.transformer" priority="-100"/>
    </service>
    <service id="api_platform.symfony.iri_converter" class="ApiPlatform\Symfony\Routing\IriConverter">
      <argument type="service" id="api_platform.state_provider.locator"/>
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.api.identifiers_extractor"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.uri_variables.converter"/>
      <argument type="service" id="api_platform.symfony.iri_converter.skolem"/>
      <argument type="service" id="api_platform.metadata.operation.metadata_factory"/>
    </service>
    <service id="api_platform.state.error_provider" class="ApiPlatform\State\ErrorProvider">
      <tag name="api_platform.state_provider" key="api_platform.state.error_provider"/>
      <argument>true</argument>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
    </service>
    <service id="api_platform.normalizer.constraint_violation_list" class="ApiPlatform\Serializer\ConstraintViolationListNormalizer">
      <tag name="serializer.normalizer" priority="-780"/>
      <tag name="serializer.normalizer.default" priority="-780"/>
      <argument type="collection"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.serializer.property_metadata_loader" class="ApiPlatform\Serializer\Mapping\Loader\PropertyMetadataLoader">
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
    </service>
    <service id="api_platform.filter_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_range_filter" type="service_closure" id="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_range_filter"/>
        <argument key="annotated_app_entity_campaign_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_campaign_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_campaign_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_campaign_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_campaign_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_campaign_api_platform_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_case_study_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_case_study_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_case_study_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_case_study_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_citation_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_citation_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_citation_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_citation_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_citation_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_citation_api_platform_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_content_brief_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_content_brief_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_content_brief_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_content_brief_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_content_brief_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_content_brief_api_platform_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_content_item_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_content_item_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_content_item_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_content_item_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_content_item_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_content_item_api_platform_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_faq_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_faq_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_faq_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_faq_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_range_filter" type="service_closure" id="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_range_filter"/>
        <argument key="annotated_app_entity_keyword_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_keyword_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_keyword_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_keyword_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_keyword_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_keyword_api_platform_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_lead_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_lead_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_lead_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_lead_api_platform_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_lead_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_lead_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_range_filter" type="service_closure" id="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_range_filter"/>
        <argument key="annotated_app_entity_recommendation_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_recommendation_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_recommendation_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_recommendation_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_recommendation_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_recommendation_api_platform_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_review_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_review_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_review_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_review_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_review_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_review_api_platform_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_review_api_platform_doctrine_orm_filter_range_filter" type="service_closure" id="annotated_app_entity_review_api_platform_doctrine_orm_filter_range_filter"/>
        <argument key="annotated_app_entity_subscription_api_platform_doctrine_orm_filter_search_filter" type="service_closure" id="annotated_app_entity_subscription_api_platform_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_subscription_api_platform_doctrine_orm_filter_order_filter" type="service_closure" id="annotated_app_entity_subscription_api_platform_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_subscription_api_platform_doctrine_orm_filter_date_filter" type="service_closure" id="annotated_app_entity_subscription_api_platform_doctrine_orm_filter_date_filter"/>
      </argument>
    </service>
    <service id="api_platform.symfony.uri_variables.transformer.ulid" class="ApiPlatform\Symfony\UriVariableTransformer\UlidUriVariableTransformer">
      <tag name="api_platform.uri_variables.transformer"/>
    </service>
    <service id="api_platform.symfony.uri_variables.transformer.uuid" class="ApiPlatform\Symfony\UriVariableTransformer\UuidUriVariableTransformer">
      <tag name="api_platform.uri_variables.transformer"/>
    </service>
    <service id="api_platform.symfony.main_controller" class="ApiPlatform\Symfony\Controller\MainController" public="true">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.state_provider.content_negotiation"/>
      <argument type="service" id="api_platform.state_processor.write"/>
      <argument type="service" id="api_platform.uri_variables.converter" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="api_platform.action.entrypoint" class="ApiPlatform\Symfony\Action\EntrypointAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.state_provider.content_negotiation"/>
      <argument type="service" id="api_platform.state_processor.write"/>
      <argument>%api_platform.docs_formats%</argument>
    </service>
    <service id="api_platform.action.documentation" class="ApiPlatform\Symfony\Action\DocumentationAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument>Hello API Platform</argument>
      <argument></argument>
      <argument>1.0.0</argument>
      <argument type="service" id="api_platform.openapi.factory" on-invalid="null"/>
      <argument type="service" id="api_platform.state_provider.content_negotiation"/>
      <argument type="service" id="api_platform.state_processor.write"/>
      <argument type="service" id="api_platform.negotiator" on-invalid="null"/>
      <argument>%api_platform.docs_formats%</argument>
    </service>
    <service id="api_platform.state_provider.content_negotiation" class="ApiPlatform\State\Provider\ContentNegotiationProvider">
      <argument type="service" id="api_platform.state_provider.parameter"/>
      <argument type="service" id="api_platform.negotiator"/>
      <argument>%api_platform.formats%</argument>
      <argument>%api_platform.error_formats%</argument>
    </service>
    <service id="api_platform.error_listener" class="ApiPlatform\Symfony\EventListener\ErrorListener">
      <argument>api_platform.symfony.main_controller</argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument>true</argument>
      <argument type="collection"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument>%api_platform.error_formats%</argument>
      <argument>%api_platform.exception_to_status%</argument>
      <argument>null</argument>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.negotiator"/>
    </service>
    <service id="api_platform.state_provider.parameter" class="ApiPlatform\State\Provider\ParameterProvider">
      <argument type="service" id="api_platform.state_provider.parameter_validator"/>
      <argument type="service" id=".service_locator.WQt9XZi"/>
    </service>
    <service id="api_platform.state_processor.serialize" class="ApiPlatform\State\Processor\SerializeProcessor">
      <argument type="service" id="api_platform.http_cache.processor.add_headers"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.openapi.serializer_context_builder"/>
    </service>
    <service id="api_platform.state_processor.write" class="ApiPlatform\State\Processor\WriteProcessor">
      <argument type="service" id="api_platform.state_processor.serialize"/>
      <argument type="service" id="api_platform.state_processor.locator"/>
    </service>
    <service id="api_platform.state_processor.add_link_header" class="ApiPlatform\State\Processor\AddLinkHeaderProcessor">
      <argument type="service" id="api_platform.hydra.processor.link"/>
    </service>
    <service id="api_platform.state_provider.parameter.iri_converter" class="ApiPlatform\State\ParameterProvider\IriConverterParameterProvider">
      <tag name="api_platform.parameter_provider" key="ApiPlatform\State\ParameterProvider\IriConverterParameterProvider" priority="-895"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
    </service>
    <service id="api_platform.cache.metadata.resource" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>8emCCtZU1K</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.cached" class="ApiPlatform\Metadata\Resource\Factory\CachedResourceNameCollectionFactory">
      <argument type="service" id="api_platform.cache.metadata.resource"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.xml" class="ApiPlatform\Metadata\Resource\Factory\ExtractorResourceNameCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource_extractor.xml"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.concerns" class="ApiPlatform\Metadata\Resource\Factory\ConcernsResourceNameCollectionFactory">
      <argument>%api_platform.resource_class_directories%</argument>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.xml"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.attributes" class="ApiPlatform\Metadata\Resource\Factory\AttributesResourceNameCollectionFactory">
      <argument>%api_platform.resource_class_directories%</argument>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.concerns"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.class_name" class="ApiPlatform\Metadata\Resource\Factory\ClassNameResourceNameCollectionFactory">
      <argument>%api_platform.class_name_resources%</argument>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.attributes"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.property_info" class="ApiPlatform\Metadata\Property\Factory\PropertyInfoPropertyNameCollectionFactory">
      <argument type="service" id="property_info"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.cached" class="ApiPlatform\Metadata\Property\Factory\CachedPropertyNameCollectionFactory">
      <argument type="service" id="api_platform.cache.metadata.property"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.xml" class="ApiPlatform\Metadata\Property\Factory\ExtractorPropertyNameCollectionFactory">
      <argument type="service" id="api_platform.metadata.property_extractor.xml"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.property_info"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.concerns" class="ApiPlatform\Metadata\Property\Factory\ConcernsPropertyNameCollectionMetadataFactory">
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.xml"/>
    </service>
    <service id="api_platform.metadata.resource_extractor.xml" class="ApiPlatform\Metadata\Extractor\XmlResourceExtractor">
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.property_extractor.xml" class="ApiPlatform\Metadata\Extractor\XmlPropertyExtractor">
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.property_info" class="ApiPlatform\Metadata\Property\Factory\PropertyInfoPropertyMetadataFactory">
      <argument type="service" id="property_info"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.xml"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.attribute" class="ApiPlatform\Metadata\Property\Factory\AttributePropertyMetadataFactory">
      <argument type="service" id="api_platform.metadata.property.metadata_factory.identifier"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.serializer" class="ApiPlatform\Metadata\Property\Factory\SerializerPropertyMetadataFactory">
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="api_platform.doctrine.orm.metadata.property.metadata_factory"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.cached" class="ApiPlatform\Metadata\Property\Factory\CachedPropertyMetadataFactory">
      <argument type="service" id="api_platform.cache.metadata.property"/>
      <argument type="service" id="api_platform.json_schema.metadata.property.metadata_factory.schema"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.default_property" class="ApiPlatform\Metadata\Property\Factory\DefaultPropertyMetadataFactory">
      <argument type="service" id="api_platform.metadata.property.metadata_factory.serializer"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.identifier" class="ApiPlatform\Metadata\Property\Factory\IdentifierPropertyMetadataFactory">
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.default_property"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.xml" class="ApiPlatform\Metadata\Property\Factory\ExtractorPropertyMetadataFactory">
      <argument type="service" id="api_platform.metadata.property_extractor.xml"/>
    </service>
    <service id="api_platform.cache.metadata.property" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>CWaRewvuFe</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.attributes" class="ApiPlatform\Metadata\Resource\Factory\AttributesResourceMetadataCollectionFactory">
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument>%api_platform.defaults%</argument>
      <argument>false</argument>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.xml" class="ApiPlatform\Metadata\Resource\Factory\ExtractorResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource_extractor.xml"/>
      <argument type="service" id="api_platform.validator.metadata.resource.metadata_collection_factory.parameter"/>
      <argument>%api_platform.defaults%</argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.concerns" class="ApiPlatform\Metadata\Resource\Factory\ConcernsResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.xml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation" class="ApiPlatform\Metadata\Resource\Factory\NotExposedOperationResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.doctrine.orm.metadata.resource.link_factory"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.backed_enum" class="ApiPlatform\Metadata\Resource\Factory\BackedEnumResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.uri_template" class="ApiPlatform\Metadata\Resource\Factory\UriTemplateResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.doctrine.orm.metadata.resource.link_factory"/>
      <argument type="service" id="api_platform.metadata.path_segment_name_generator.underscore"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.backed_enum"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.main_controller" class="ApiPlatform\Metadata\Resource\Factory\MainControllerResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.uri_template"/>
      <argument>false</argument>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.link" class="ApiPlatform\Metadata\Resource\Factory\LinkResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.doctrine.orm.metadata.resource.link_factory"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.main_controller"/>
      <argument>false</argument>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.operation_name" class="ApiPlatform\Metadata\Resource\Factory\OperationNameResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.link"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.input_output" class="ApiPlatform\Metadata\Resource\Factory\InputOutputResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.operation_name"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.formats" class="ApiPlatform\Metadata\Resource\Factory\FormatsResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.input_output"/>
      <argument>%api_platform.formats%</argument>
      <argument>%api_platform.patch_formats%</argument>
      <argument>%api_platform.error_formats%</argument>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.filters" class="ApiPlatform\Metadata\Resource\Factory\FiltersResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.formats"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.alternate_uri" class="ApiPlatform\Metadata\Resource\Factory\AlternateUriResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.filters"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.parameter" class="ApiPlatform\Metadata\Resource\Factory\ParameterResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.attributes"/>
      <argument type="service" id="api_platform.filter_locator" on-invalid="ignore"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.cached" class="ApiPlatform\Metadata\Resource\Factory\CachedResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.cache.metadata.resource_collection"/>
      <argument type="service" id="api_platform.doctrine.orm.metadata.resource.metadata_collection_factory"/>
    </service>
    <service id="api_platform.cache.metadata.resource_collection" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>siwWacwgyn</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.metadata.operation.metadata_factory" class="ApiPlatform\Metadata\Operation\Factory\OperationMetadataFactory">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.php_doc" class="ApiPlatform\Metadata\Resource\Factory\PhpDocResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.alternate_uri"/>
    </service>
    <service id="api_platform.metadata.resource_extractor.yaml" class="ApiPlatform\Metadata\Extractor\YamlResourceExtractor">
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.property_extractor.yaml" class="ApiPlatform\Metadata\Extractor\YamlPropertyExtractor">
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.yaml" class="ApiPlatform\Metadata\Resource\Factory\ExtractorResourceNameCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource_extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.class_name"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_collection_factory.yaml" class="ApiPlatform\Metadata\Resource\Factory\ExtractorResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource_extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.concerns"/>
      <argument>%api_platform.defaults%</argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.yaml" class="ApiPlatform\Metadata\Property\Factory\ExtractorPropertyMetadataFactory">
      <argument type="service" id="api_platform.metadata.property_extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.attribute"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.yaml" class="ApiPlatform\Metadata\Property\Factory\ExtractorPropertyNameCollectionFactory">
      <argument type="service" id="api_platform.metadata.property_extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.concerns"/>
    </service>
    <service id="api_platform.json_schema.json_schema_generate_command" class="ApiPlatform\JsonSchema\Command\JsonSchemaGenerateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="api_platform.json_schema.backward_compatible_schema_factory"/>
      <argument>%api_platform.formats%</argument>
      <call method="setName">
        <argument>api:json-schema:generate</argument>
      </call>
    </service>
    <service id="api_platform.json_schema.metadata.property.metadata_factory.schema" class="ApiPlatform\JsonSchema\Metadata\Property\Factory\SchemaPropertyMetadataFactory">
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.validator"/>
    </service>
    <service id="api_platform.json_schema.backward_compatible_schema_factory" class="ApiPlatform\JsonSchema\BackwardCompatibleSchemaFactory">
      <tag name="container.decorator" id="api_platform.json_schema.schema_factory" inner="api_platform.hydra.json_schema.schema_factory.inner"/>
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
    </service>
    <service id="api_platform.json_schema.definition_name_factory" class="ApiPlatform\JsonSchema\DefinitionNameFactory">
      <argument>%api_platform.jsonschema_formats%</argument>
    </service>
    <service id=".2_ObjectNormalizer~gfBDrk1" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer">
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info"/>
    </service>
    <service id=".1_Serializer~gfBDrk1" class="Symfony\Component\Serializer\Serializer">
      <argument type="collection">
        <argument type="service" id=".2_ObjectNormalizer~gfBDrk1"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="serializer.encoder.json"/>
      </argument>
    </service>
    <service id="api_platform.openapi.provider" class="ApiPlatform\OpenApi\State\OpenApiProvider">
      <tag name="api_platform.state_provider" priority="-100" key="ApiPlatform\OpenApi\State\OpenApiProvider"/>
      <tag name="api_platform.state_provider" priority="-100" key="api_platform.openapi.provider"/>
      <argument type="service" id="api_platform.openapi.factory"/>
    </service>
    <service id="api_platform.openapi.serializer_context_builder" class="ApiPlatform\OpenApi\Serializer\SerializerContextBuilder">
      <tag name="container.decorator" id="api_platform.serializer.context_builder" inner="api_platform.serializer.context_builder.filter.inner"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
    </service>
    <service id="api_platform.openapi.options" class="ApiPlatform\OpenApi\Options">
      <argument>Hello API Platform</argument>
      <argument></argument>
      <argument>1.0.0</argument>
      <argument>false</argument>
      <argument>oauth2</argument>
      <argument>application</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="api_platform.openapi.command" class="ApiPlatform\OpenApi\Command\OpenApiCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="api_platform.openapi.factory"/>
      <argument type="service" id="serializer"/>
      <call method="setName">
        <argument>api:openapi:export</argument>
      </call>
    </service>
    <service id="api_platform.openapi.normalizer.legacy" class="ApiPlatform\OpenApi\Serializer\LegacyOpenApiNormalizer">
      <tag name="serializer.normalizer"/>
      <tag name="serializer.normalizer.default"/>
      <tag name="container.decorator" id="api_platform.openapi.normalizer.api_gateway" inner="api_platform.openapi.normalizer.legacy.inner"/>
      <argument type="service" id="api_platform.openapi.normalizer.legacy.inner"/>
    </service>
    <service id="api_platform.openapi.factory" class="ApiPlatform\OpenApi\Factory\OpenApiFactory">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.json_schema.backward_compatible_schema_factory"/>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument>%api_platform.formats%</argument>
      <argument type="service" id="api_platform.openapi.options"/>
      <argument type="service" id="api_platform.pagination_options"/>
      <argument type="service" id="api_platform.router"/>
      <argument>%api_platform.error_formats%</argument>
    </service>
    <service id="api_platform.cache.openapi" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>jCvBpfBjyq</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/cache/test/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.jsonopenapi.encoder" class="ApiPlatform\Serializer\JsonEncoder">
      <tag name="serializer.encoder"/>
      <tag name="serializer.encoder.default"/>
      <argument>jsonopenapi</argument>
      <argument>null</argument>
    </service>
    <service id="api_platform.yamlopenapi.encoder" class="ApiPlatform\Serializer\YamlEncoder">
      <tag name="serializer.encoder"/>
      <tag name="serializer.encoder.default"/>
      <argument>yamlopenapi</argument>
      <argument type="service" id="serializer.encoder.yaml" on-invalid="null"/>
    </service>
    <service id="api_platform.swagger_ui.context" class="ApiPlatform\Symfony\Bundle\SwaggerUi\SwaggerUiContext">
      <argument>true</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="api_platform.swagger_ui.processor" class="ApiPlatform\Symfony\Bundle\SwaggerUi\SwaggerUiProcessor">
      <tag name="api_platform.state_processor" priority="-100" key="api_platform.swagger_ui.processor"/>
      <argument type="service" id="twig" on-invalid="null"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.openapi.options"/>
      <argument type="service" id="api_platform.swagger_ui.context"/>
      <argument>%api_platform.docs_formats%</argument>
      <argument></argument>
      <argument></argument>
      <argument>false</argument>
    </service>
    <service id="api_platform.swagger_ui.provider" class="ApiPlatform\Symfony\Bundle\SwaggerUi\SwaggerUiProvider">
      <argument type="service" id="api_platform.swagger_ui.provider.inner"/>
      <argument type="service" id="api_platform.openapi.factory"/>
    </service>
    <service id="api_platform.jsonld.action.context" class="ApiPlatform\JsonLd\Action\ContextAction" public="true">
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.state_provider.content_negotiation" on-invalid="null"/>
      <argument type="service" id="api_platform.state_processor.write" on-invalid="null"/>
      <argument type="service" id="serializer" on-invalid="null"/>
    </service>
    <service id="api_platform.hydra.processor.link" class="ApiPlatform\Hydra\State\HydraLinkProcessor">
      <argument type="service" id="api_platform.hydra.processor.link.inner"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.jsonld.context_builder" class="ApiPlatform\JsonLd\ContextBuilder">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.symfony.iri_converter.skolem"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix"/>
      <argument>%api_platform.serializer.default_context%</argument>
    </service>
    <service id="api_platform.jsonld.normalizer.item" class="ApiPlatform\JsonLd\Serializer\ItemNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
      <tag name="serializer.normalizer.default" priority="-890"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory" on-invalid="ignore"/>
      <argument>%api_platform.serializer.default_context%</argument>
      <argument type="service" id="api_platform.security.resource_access_checker" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="api_platform.jsonld.normalizer.error" class="ApiPlatform\JsonLd\Serializer\ErrorNormalizer">
      <tag name="serializer.normalizer" priority="-880"/>
      <tag name="serializer.normalizer.default" priority="-880"/>
      <argument type="service" id="api_platform.jsonld.normalizer.item"/>
      <argument>%api_platform.serializer.default_context%</argument>
    </service>
    <service id="api_platform.jsonld.normalizer.object" class="ApiPlatform\JsonLd\Serializer\ObjectNormalizer">
      <tag name="serializer.normalizer" priority="-995"/>
      <tag name="serializer.normalizer.default" priority="-995"/>
      <argument type="service" id="serializer.normalizer.object"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="api_platform.jsonld.context_builder"/>
    </service>
    <service id="api_platform.jsonld.normalizer.validation_exception" class="ApiPlatform\Symfony\Validator\Serializer\ValidationExceptionNormalizer">
      <tag name="serializer.normalizer" priority="-800"/>
      <tag name="serializer.normalizer.default" priority="-800"/>
      <argument type="service" id="api_platform.jsonld.normalizer.error"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.jsonld.encoder" class="ApiPlatform\Serializer\JsonEncoder">
      <tag name="serializer.encoder"/>
      <tag name="serializer.encoder.default"/>
      <argument>jsonld</argument>
      <argument>null</argument>
    </service>
    <service id="api_platform.hydra.json_schema.schema_factory" class="ApiPlatform\Hydra\JsonSchema\SchemaFactory">
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory.inner"/>
      <argument>%api_platform.serializer.default_context%</argument>
    </service>
    <service id="api_platform.hydra.normalizer.documentation" class="ApiPlatform\Hydra\Serializer\DocumentationNormalizer">
      <tag name="serializer.normalizer" priority="-800"/>
      <tag name="serializer.normalizer.default" priority="-800"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>%api_platform.serializer.default_context%</argument>
      <argument>true</argument>
    </service>
    <service id="api_platform.hydra.normalizer.constraint_violation_list" class="ApiPlatform\Hydra\Serializer\ConstraintViolationListNormalizer">
      <tag name="serializer.normalizer" priority="-780"/>
      <tag name="serializer.normalizer.default" priority="-780"/>
      <argument type="collection"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>%api_platform.serializer.default_context%</argument>
    </service>
    <service id="api_platform.hydra.normalizer.entrypoint" class="ApiPlatform\Hydra\Serializer\EntrypointNormalizer">
      <tag name="serializer.normalizer" priority="-800"/>
      <tag name="serializer.normalizer.default" priority="-800"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.hydra.normalizer.partial_collection_view" class="ApiPlatform\Hydra\Serializer\PartialCollectionViewNormalizer">
      <argument type="service" id="api_platform.hydra.normalizer.partial_collection_view.inner"/>
      <argument>page</argument>
      <argument>pagination</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="property_accessor"/>
      <argument>1</argument>
      <argument>%api_platform.serializer.default_context%</argument>
    </service>
    <service id="api_platform.hydra.normalizer.collection_filters" class="ApiPlatform\Hydra\Serializer\CollectionFiltersNormalizer">
      <tag name="serializer.normalizer" priority="-985"/>
      <tag name="serializer.normalizer.default" priority="-985"/>
      <tag name="container.decorator" id="api_platform.hydra.normalizer.collection" inner="api_platform.hydra.normalizer.partial_collection_view.inner"/>
      <argument type="service" id="api_platform.hydra.normalizer.partial_collection_view"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument>%api_platform.serializer.default_context%</argument>
    </service>
    <service id="api_platform.hydra.name_converter.hydra_prefix" class="ApiPlatform\Hydra\Serializer\HydraPrefixNameConverter">
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument>%api_platform.serializer.default_context%</argument>
    </service>
    <service id="api_platform.problem.encoder" class="ApiPlatform\Serializer\JsonEncoder">
      <tag name="serializer.encoder"/>
      <tag name="serializer.encoder.default"/>
      <argument>jsonproblem</argument>
    </service>
    <service id="api_platform.problem.normalizer.validation_exception" class="ApiPlatform\Symfony\Validator\Serializer\ValidationExceptionNormalizer">
      <tag name="serializer.normalizer" priority="-800"/>
      <tag name="serializer.normalizer.default" priority="-800"/>
      <argument type="service" id="api_platform.serializer.normalizer.item"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.metadata_factory" class="Doctrine\Persistence\Mapping\ClassMetadataFactory">
      <factory service="doctrine.orm.default_entity_manager" method="getMetadataFactory"/>
    </service>
    <service id="api_platform.doctrine.orm.state.remove_processor" class="ApiPlatform\Doctrine\Common\State\RemoveProcessor">
      <tag name="api_platform.state_processor" priority="-100" key="api_platform.doctrine.orm.state.remove_processor"/>
      <tag name="api_platform.state_processor" priority="-100" key="ApiPlatform\Doctrine\Common\State\RemoveProcessor"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="api_platform.doctrine.orm.state.persist_processor" class="ApiPlatform\Doctrine\Common\State\PersistProcessor">
      <tag name="api_platform.state_processor" priority="-100" key="api_platform.doctrine.orm.state.persist_processor"/>
      <tag name="api_platform.state_processor" priority="-100" key="ApiPlatform\Doctrine\Common\State\PersistProcessor"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="api_platform.doctrine.orm.order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">order</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="nameConverter" type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument key="orderNullsComparison">null</argument>
    </service>
    <service id="api_platform.doctrine.orm.order_filter.instance" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter">
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="api_platform.doctrine.orm.range_filter" class="ApiPlatform\Doctrine\Orm\Filter\RangeFilter" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="nameConverter" type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.range_filter.instance" class="ApiPlatform\Doctrine\Orm\Filter\RangeFilter">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.date_filter" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="nameConverter" type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.date_filter.instance" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.backed_enum_filter" class="ApiPlatform\Doctrine\Orm\Filter\BackedEnumFilter" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="nameConverter" type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.backed_enum_filter.instance" class="ApiPlatform\Doctrine\Orm\Filter\BackedEnumFilter">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.boolean_filter" class="ApiPlatform\Doctrine\Orm\Filter\BooleanFilter" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="nameConverter" type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.boolean_filter.instance" class="ApiPlatform\Doctrine\Orm\Filter\BooleanFilter">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.numeric_filter" class="ApiPlatform\Doctrine\Orm\Filter\NumericFilter" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="nameConverter" type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.numeric_filter.instance" class="ApiPlatform\Doctrine\Orm\Filter\NumericFilter">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.exists_filter" class="ApiPlatform\Doctrine\Orm\Filter\ExistsFilter" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="existsParameterName">exists</argument>
      <argument key="nameConverter" type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.exists_filter.instance" class="ApiPlatform\Doctrine\Orm\Filter\ExistsFilter">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection"/>
      <argument>exists</argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.eager_loading" class="ApiPlatform\Doctrine\Orm\Extension\EagerLoadingExtension">
      <tag name="api_platform.doctrine.orm.query_extension.item" priority="-8"/>
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-18"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument>30</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument type="service" id="api_platform.serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.filter" class="ApiPlatform\Doctrine\Orm\Extension\FilterExtension">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-16"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.filter_eager_loading" class="ApiPlatform\Doctrine\Orm\Extension\FilterEagerLoadingExtension">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-17"/>
      <argument>true</argument>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.pagination" class="ApiPlatform\Doctrine\Orm\Extension\PaginationExtension">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-64"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.pagination"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.order" class="ApiPlatform\Doctrine\Orm\Extension\OrderExtension">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-32"/>
      <argument>ASC</argument>
    </service>
    <service id="api_platform.doctrine.orm.extension.parameter_extension" class="ApiPlatform\Doctrine\Orm\Extension\ParameterExtension">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-16"/>
      <tag name="api_platform.doctrine.orm.query_extension.item" priority="-9"/>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument type="service" id="doctrine" on-invalid="null"/>
    </service>
    <service id="api_platform.doctrine.orm.metadata.property.metadata_factory" class="ApiPlatform\Doctrine\Orm\Metadata\Property\DoctrineOrmPropertyMetadataFactory">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.property_info"/>
    </service>
    <service id="api_platform.doctrine.orm.state.collection_provider" class="ApiPlatform\Doctrine\Orm\State\CollectionProvider">
      <tag name="api_platform.state_provider" priority="-100" key="ApiPlatform\Doctrine\Orm\State\CollectionProvider"/>
      <tag name="api_platform.state_provider" priority="-100" key="api_platform.doctrine.orm.state.collection_provider"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="doctrine"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
      <argument type="service" id=".service_locator.aVKDDNU"/>
    </service>
    <service id="api_platform.doctrine.orm.state.item_provider" class="ApiPlatform\Doctrine\Orm\State\ItemProvider">
      <tag name="api_platform.state_provider" priority="-100" key="ApiPlatform\Doctrine\Orm\State\ItemProvider"/>
      <tag name="api_platform.state_provider" priority="-100" key="api_platform.doctrine.orm.state.item_provider"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="doctrine"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
      <argument type="service" id=".service_locator.aVKDDNU"/>
    </service>
    <service id="api_platform.doctrine.orm.search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1" type="service" id="api_platform.symfony.iri_converter"/>
      <argument key="2" type="service" id="property_accessor"/>
      <argument key="3" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="identifiersExtractor" type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument key="nameConverter" type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.search_filter.instance" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection"/>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.metadata.resource.metadata_collection_factory" class="ApiPlatform\Doctrine\Orm\Metadata\Resource\DoctrineOrmResourceCollectionMetadataFactory">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.php_doc"/>
    </service>
    <service id="api_platform.doctrine.orm.metadata.resource.link_factory" class="ApiPlatform\Doctrine\Orm\Metadata\Resource\DoctrineOrmLinkFactory">
      <tag name="container.decorator" id="api_platform.metadata.resource.link_factory" inner="api_platform.doctrine.orm.metadata.resource.link_factory.inner"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.doctrine.orm.metadata.resource.link_factory.inner"/>
    </service>
    <service id="api_platform.doctrine.orm.links_handler" class="ApiPlatform\Doctrine\Orm\State\LinksHandler">
      <tag name="api_platform.doctrine.orm.links_handler" key="api_platform.doctrine.orm.links_handler"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="api_platform.http_cache.processor.add_headers" class="ApiPlatform\HttpCache\State\AddHeadersProcessor">
      <tag name="container.decorator" id="api_platform.state_processor.respond" inner="api_platform.hydra.processor.link.inner"/>
      <argument type="service" id="api_platform.state_processor.add_link_header"/>
      <argument>true</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>%api_platform.http_cache.vary%</argument>
      <argument>null</argument>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.validator" class="ApiPlatform\Symfony\Validator\Metadata\Property\ValidatorPropertyMetadataFactory">
      <argument type="service" id="validator"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.yaml"/>
      <argument type="tagged_iterator" tag="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.choice_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaChoiceRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.collection_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaCollectionRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
      <argument type="tagged_iterator" tag="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.count_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaCountRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.greater_than_or_equal_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaGreaterThanOrEqualRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.greater_than_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaGreaterThanRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.length_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaLengthRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.less_than_or_equal_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaLessThanOrEqualRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.less_than_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaLessThanRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.one_of_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaOneOfRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
      <argument type="tagged_iterator" tag="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.range_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaRangeRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.regex_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaRegexRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.format_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaFormat">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.unique_restriction" class="ApiPlatform\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaUniqueRestriction">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.validator" class="ApiPlatform\Symfony\Validator\Validator">
      <argument type="service" id="validator"/>
      <argument type="service" id=".service_locator.GIuJv7e"/>
    </service>
    <service id="api_platform.validator.state.error_provider" class="ApiPlatform\Symfony\Validator\State\ErrorProvider">
      <tag name="api_platform.state_provider" key="api_platform.validator.state.error_provider"/>
    </service>
    <service id="api_platform.validator.metadata.resource.metadata_collection_factory.parameter" class="ApiPlatform\Validator\Metadata\Resource\Factory\ParameterValidationResourceMetadataCollectionFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.parameter"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.state_provider.parameter_validator" class="ApiPlatform\Symfony\Validator\State\ParameterValidatorProvider" public="true">
      <argument type="service" id="validator"/>
      <argument type="service" id="api_platform.state_provider.access_checker.post_validate"/>
    </service>
    <service id="api_platform.data_collector.request" class="ApiPlatform\Symfony\Bundle\DataCollector\RequestDataCollector">
      <tag name="data_collector" template="@ApiPlatform/DataCollector/request.html.twig" id="api_platform.data_collector.request" priority="334"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="debug.var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner"/>
    <service id="debug.var_dumper.cli_dumper" class="Symfony\Component\VarDumper\Dumper\CliDumper"/>
    <service id="debug.api_platform.debug_resource.command" class="ApiPlatform\Symfony\Bundle\Command\DebugResourceCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="debug.var_dumper.cloner"/>
      <argument type="service" id="debug.var_dumper.cli_dumper"/>
      <call method="setName">
        <argument>debug:api-resource</argument>
      </call>
    </service>
    <service id="api_platform.security.resource_access_checker" class="ApiPlatform\Symfony\Security\ResourceAccessChecker">
      <argument type="service" id="security.expression_language" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="api_platform.security.expression_language_provider" class="ApiPlatform\Symfony\Security\Core\Authorization\ExpressionLanguageProvider">
      <tag name="security.expression_language_provider"/>
    </service>
    <service id="api_platform.state_provider.access_checker.post_deserialize" class="ApiPlatform\Symfony\Security\State\AccessCheckerProvider">
      <tag name="container.decorator" id="api_platform.state_provider.deserialize" inner="api_platform.state_provider.access_checker.post_deserialize.inner"/>
      <argument type="service" id="api_platform.state_provider.access_checker.post_deserialize.inner"/>
      <argument type="service" id="api_platform.security.resource_access_checker"/>
      <argument>post_denormalize</argument>
    </service>
    <service id="api_platform.state_provider.security_parameter" class="ApiPlatform\State\Provider\SecurityParameterProvider">
      <tag name="container.decorator" id="api_platform.state_provider.access_checker" inner="api_platform.state_provider.security_parameter.inner"/>
      <argument type="service" id="api_platform.state_provider.security_parameter.inner"/>
      <argument type="service" id="api_platform.security.resource_access_checker"/>
    </service>
    <service id="api_platform.state_provider.access_checker.post_validate" class="ApiPlatform\Symfony\Security\State\AccessCheckerProvider">
      <tag name="container.decorator" id="api_platform.state_provider.validate" inner="api_platform.state_provider.access_checker.post_validate.inner"/>
      <argument type="service" id="api_platform.state_provider.access_checker.post_validate.inner"/>
      <argument type="service" id="api_platform.security.resource_access_checker"/>
      <argument>post_validate</argument>
    </service>
    <service id="api_platform.maker.command.state_processor" class="ApiPlatform\Symfony\Maker\MakeStateProcessor">
      <tag name="maker.command"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
    </service>
    <service id="api_platform.maker.command.state_provider" class="ApiPlatform\Symfony\Maker\MakeStateProvider">
      <tag name="maker.command"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
    </service>
    <service id="api_platform.argument_resolver.payload" class="ApiPlatform\Symfony\Bundle\ArgumentResolver\PayloadArgumentResolver">
      <tag name="controller.argument_value_resolver"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.openapi.serializer_context_builder"/>
    </service>
    <service id="lexik_jwt_authentication.jwt_manager" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTManager" public="true">
      <argument type="service" id="lexik_jwt_authentication.encoder.lcobucci"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>username</argument>
      <argument type="service" id="lexik_jwt_authentication.payload_enrichment"/>
    </service>
    <service id="lexik_jwt_authentication.payload_enrichment.random_jti_enrichment" class="Lexik\Bundle\JWTAuthenticationBundle\Services\PayloadEnrichment\RandomJtiEnrichment"/>
    <service id="lexik_jwt_authentication.payload_enrichment" class="Lexik\Bundle\JWTAuthenticationBundle\Services\PayloadEnrichment\ChainEnrichment">
      <argument type="collection"/>
    </service>
    <service id="lexik_jwt_authentication.key_loader.abstract" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
      <argument type="collection"/>
    </service>
    <service id="lexik_jwt_authentication.key_loader.raw" class="Lexik\Bundle\JWTAuthenticationBundle\Services\KeyLoader\RawKeyLoader">
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/config/jwt/private.pem</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/config/jwt/public.pem</argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
      <argument type="collection"/>
    </service>
    <service id="lexik_jwt_authentication.encoder.lcobucci" class="Lexik\Bundle\JWTAuthenticationBundle\Encoder\LcobucciJWTEncoder">
      <argument type="service" id="lexik_jwt_authentication.jws_provider.lcobucci"/>
    </service>
    <service id="lexik_jwt_authentication.jws_provider.lcobucci" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\LcobucciJWSProvider">
      <argument type="service" id="lexik_jwt_authentication.key_loader.raw"/>
      <argument>RS256</argument>
      <argument>86400</argument>
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="lexik_jwt_authentication.handler.authentication_success" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
      <argument>true</argument>
    </service>
    <service id="lexik_jwt_authentication.handler.authentication_failure" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>null</argument>
    </service>
    <service id="lexik_jwt_authentication.security.jwt_authenticator" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" abstract="true">
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="lexik_jwt_authentication.extractor.chain_extractor"/>
      <argument></argument>
      <argument type="service" id="translator" on-invalid="null"/>
    </service>
    <service id="lexik_jwt_authentication.extractor.chain_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\ChainTokenExtractor">
      <argument type="collection">
        <argument type="service" id="lexik_jwt_authentication.extractor.authorization_header_extractor"/>
      </argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.authorization_header_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\AuthorizationHeaderTokenExtractor">
      <argument>Bearer</argument>
      <argument>Authorization</argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.query_parameter_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\QueryParameterTokenExtractor">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.cookie_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\CookieTokenExtractor">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.split_cookie_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\SplitCookieExtractor">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.security.jwt_user_provider" class="Lexik\Bundle\JWTAuthenticationBundle\Security\User\JWTUserProvider">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.check_config_command" class="Lexik\Bundle\JWTAuthenticationBundle\Command\CheckConfigCommand">
      <tag name="console.command" command="lexik:jwt:check-config"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="lexik_jwt_authentication.key_loader.raw"/>
      <argument>RS256</argument>
      <call method="setName">
        <argument>lexik:jwt:check-config</argument>
      </call>
      <call method="setDescription">
        <argument>Checks that the bundle is properly configured.</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.migrate_config_command" class="Lexik\Bundle\JWTAuthenticationBundle\Command\MigrateConfigCommand">
      <tag name="console.command" command="lexik:jwt:migrate-config"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="lexik_jwt_authentication.key_loader.raw"/>
      <argument>%env(JWT_PASSPHRASE)%</argument>
      <argument>RS256</argument>
      <call method="setName">
        <argument>lexik:jwt:migrate-config</argument>
      </call>
      <call method="setDescription">
        <argument>Migrate LexikJWTAuthenticationBundle configuration to the Web-Token one.</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.enable_encryption_config_command" class="Lexik\Bundle\JWTAuthenticationBundle\Command\EnableEncryptionConfigCommand">
      <tag name="console.command" command="lexik:jwt:enable-encryption"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <call method="setName">
        <argument>lexik:jwt:enable-encryption</argument>
      </call>
      <call method="setDescription">
        <argument>Enable Web-Token encryption support.</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.generate_token_command" class="Lexik\Bundle\JWTAuthenticationBundle\Command\GenerateTokenCommand" public="true">
      <tag name="console.command" command="lexik:jwt:generate-token"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="iterator">
        <argument type="service" id="App\Repository\UserRepository"/>
      </argument>
      <call method="setName">
        <argument>lexik:jwt:generate-token</argument>
      </call>
      <call method="setDescription">
        <argument>Generates a JWT token for a given user.</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.generate_keypair_command" class="Lexik\Bundle\JWTAuthenticationBundle\Command\GenerateKeyPairCommand">
      <tag name="console.command" command="lexik:jwt:generate-keypair"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="filesystem"/>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/config/jwt/private.pem</argument>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/config/jwt/public.pem</argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
      <argument>RS256</argument>
      <call method="setName">
        <argument>lexik:jwt:generate-keypair</argument>
      </call>
      <call method="setDescription">
        <argument>Generate public/private keys for use in your application.</argument>
      </call>
    </service>
    <service id="monolog.logger" class="Monolog\Logger">
      <argument>app</argument>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger_prototype" class="Monolog\Logger" abstract="true">
      <argument></argument>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter">
      <argument>app</argument>
    </service>
    <service id="monolog.http_client" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/log/test.log</argument>
      <argument>debug</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.deprecation" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/Users/seanmcnary/Desktop/repos/mcnary_technical_backend/backend/var/log/test.deprecation.log</argument>
      <argument>debug</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="sourceUrl">partial</argument>
        <argument key="targetUrl">partial</argument>
        <argument key="anchorText">partial</argument>
        <argument key="status">exact</argument>
        <argument key="clientId">exact</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">DESC</argument>
        <argument key="domainAuthority">DESC</argument>
        <argument key="spamScore">ASC</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_date_filter" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
        <argument key="firstSeen">null</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_backlink_api_platform_doctrine_orm_filter_range_filter" class="ApiPlatform\Doctrine\Orm\Filter\RangeFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="domainAuthority">null</argument>
        <argument key="spamScore">null</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_campaign_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="name">partial</argument>
        <argument key="status">exact</argument>
        <argument key="type">exact</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_campaign_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">DESC</argument>
        <argument key="name">ASC</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_campaign_api_platform_doctrine_orm_filter_date_filter" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="startDate">null</argument>
        <argument key="endDate">null</argument>
        <argument key="createdAt">null</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_case_study_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="isActive">exact</argument>
        <argument key="practiceArea">partial</argument>
        <argument key="slug">exact</argument>
        <argument key="title">partial</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_case_study_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="sort">ASC</argument>
        <argument key="createdAt">DESC</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_citation_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="clientId">exact</argument>
        <argument key="platform">exact</argument>
        <argument key="status">exact</argument>
        <argument key="businessName">partial</argument>
        <argument key="url">partial</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_citation_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">DESC</argument>
        <argument key="businessName">ASC</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_citation_api_platform_doctrine_orm_filter_date_filter" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_content_brief_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="title">partial</argument>
        <argument key="status">exact</argument>
        <argument key="clientId">exact</argument>
        <argument key="contentItemId">exact</argument>
        <argument key="assignedTo">exact</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_content_brief_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">DESC</argument>
        <argument key="dueDate">ASC</argument>
        <argument key="priority">DESC</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_content_brief_api_platform_doctrine_orm_filter_date_filter" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="dueDate">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_content_item_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="title">partial</argument>
        <argument key="type">exact</argument>
        <argument key="status">exact</argument>
        <argument key="clientId">exact</argument>
        <argument key="authorId">exact</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_content_item_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">DESC</argument>
        <argument key="publishedAt">DESC</argument>
        <argument key="title">ASC</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_content_item_api_platform_doctrine_orm_filter_date_filter" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="publishedAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_faq_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="isActive">exact</argument>
        <argument key="question">partial</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_faq_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="orderIndex">ASC</argument>
        <argument key="createdAt">DESC</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="invoiceNumber">partial</argument>
        <argument key="status">exact</argument>
        <argument key="clientId">exact</argument>
        <argument key="subscriptionId">exact</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">DESC</argument>
        <argument key="dueDate">ASC</argument>
        <argument key="invoiceNumber">ASC</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_date_filter" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="dueDate">null</argument>
        <argument key="paidAt">null</argument>
        <argument key="issuedAt">null</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_invoice_api_platform_doctrine_orm_filter_range_filter" class="ApiPlatform\Doctrine\Orm\Filter\RangeFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="amount">null</argument>
        <argument key="taxAmount">null</argument>
        <argument key="totalAmount">null</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_keyword_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="phrase">partial</argument>
        <argument key="status">exact</argument>
        <argument key="difficulty">exact</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_keyword_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">DESC</argument>
        <argument key="phrase">ASC</argument>
        <argument key="difficulty">ASC</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_keyword_api_platform_doctrine_orm_filter_date_filter" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_lead_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="status">exact</argument>
        <argument key="city">partial</argument>
        <argument key="state">exact</argument>
        <argument key="firm">partial</argument>
        <argument key="email">partial</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_lead_api_platform_doctrine_orm_filter_date_filter" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_lead_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">DESC</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="keywordId">exact</argument>
        <argument key="clientId">exact</argument>
        <argument key="searchEngine">exact</argument>
        <argument key="location">exact</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="date">DESC</argument>
        <argument key="position">ASC</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_date_filter" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="date">null</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_ranking_api_platform_doctrine_orm_filter_range_filter" class="ApiPlatform\Doctrine\Orm\Filter\RangeFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="position">null</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_recommendation_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="title">partial</argument>
        <argument key="category">exact</argument>
        <argument key="priority">exact</argument>
        <argument key="status">exact</argument>
        <argument key="clientId">exact</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_recommendation_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">DESC</argument>
        <argument key="priority">DESC</argument>
        <argument key="dueDate">ASC</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_recommendation_api_platform_doctrine_orm_filter_date_filter" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="dueDate">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_review_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="clientId">exact</argument>
        <argument key="platform">exact</argument>
        <argument key="status">exact</argument>
        <argument key="reviewerName">partial</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_review_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">DESC</argument>
        <argument key="rating">DESC</argument>
        <argument key="reviewDate">DESC</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_review_api_platform_doctrine_orm_filter_date_filter" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="reviewDate">null</argument>
        <argument key="createdAt">null</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_review_api_platform_doctrine_orm_filter_range_filter" class="ApiPlatform\Doctrine\Orm\Filter\RangeFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="rating">null</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_subscription_api_platform_doctrine_orm_filter_search_filter" class="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="name">partial</argument>
        <argument key="status">exact</argument>
        <argument key="clientId">exact</argument>
        <argument key="packageId">exact</argument>
      </argument>
      <argument type="service" id="api_platform.api.identifiers_extractor" on-invalid="ignore"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_subscription_api_platform_doctrine_orm_filter_order_filter" class="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">DESC</argument>
        <argument key="nextBillingDate">ASC</argument>
        <argument key="name">ASC</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotated_app_entity_subscription_api_platform_doctrine_orm_filter_date_filter" class="ApiPlatform\Doctrine\Orm\Filter\DateFilter" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="startDate">null</argument>
        <argument key="nextBillingDate">null</argument>
        <argument key="cancelledAt">null</argument>
      </argument>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
    </service>
    <service id=".instanceof.ApiPlatform\Doctrine\Orm\Extension\QueryItemExtensionInterface.0.App\ApiPlatform\TenantExtension" class="App\ApiPlatform\TenantExtension" autowire="true" abstract="true"/>
    <service id=".instanceof.ApiPlatform\Doctrine\Orm\Extension\QueryCollectionExtensionInterface.0.App\ApiPlatform\TenantExtension" class="App\ApiPlatform\TenantExtension" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\ApiPlatform\TenantExtension" class="App\ApiPlatform\TenantExtension" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\CreateClientCommand" class="App\Command\CreateClientCommand" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Command\CreateClientCommand.0.App\Command\CreateClientCommand" class="App\Command\CreateClientCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\CreateClientCommand" class="App\Command\CreateClientCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\CreatePackageCommand" class="App\Command\CreatePackageCommand" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Command\CreatePackageCommand.0.App\Command\CreatePackageCommand" class="App\Command\CreatePackageCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\CreatePackageCommand" class="App\Command\CreatePackageCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\CreateSystemAccountCommand" class="App\Command\CreateSystemAccountCommand" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Command\CreateSystemAccountCommand.0.App\Command\CreateSystemAccountCommand" class="App\Command\CreateSystemAccountCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\CreateSystemAccountCommand" class="App\Command\CreateSystemAccountCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\CreateUserCommand" class="App\Command\CreateUserCommand" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Command\CreateUserCommand.0.App\Command\CreateUserCommand" class="App\Command\CreateUserCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\CreateUserCommand" class="App\Command\CreateUserCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\AgencyController" class="App\Controller\Api\V1\AgencyController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\AgencyController" class="App\Controller\Api\V1\AgencyController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\AgencyController" class="App\Controller\Api\V1\AgencyController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\AuditFindingsController" class="App\Controller\Api\V1\AuditFindingsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\AuditFindingsController" class="App\Controller\Api\V1\AuditFindingsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\AuditFindingsController" class="App\Controller\Api\V1\AuditFindingsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\AuditIntakeController" class="App\Controller\Api\V1\AuditIntakeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\AuditIntakeController" class="App\Controller\Api\V1\AuditIntakeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\AuditIntakeController" class="App\Controller\Api\V1\AuditIntakeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\AuditsController" class="App\Controller\Api\V1\AuditsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\AuditsController" class="App\Controller\Api\V1\AuditsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\AuditsController" class="App\Controller\Api\V1\AuditsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\AuthController" class="App\Controller\Api\V1\AuthController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\AuthController" class="App\Controller\Api\V1\AuthController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\AuthController" class="App\Controller\Api\V1\AuthController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\BacklinksController" class="App\Controller\Api\V1\BacklinksController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\BacklinksController" class="App\Controller\Api\V1\BacklinksController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\BacklinksController" class="App\Controller\Api\V1\BacklinksController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\CampaignsController" class="App\Controller\Api\V1\CampaignsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\CampaignsController" class="App\Controller\Api\V1\CampaignsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\CampaignsController" class="App\Controller\Api\V1\CampaignsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\CitationsController" class="App\Controller\Api\V1\CitationsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\CitationsController" class="App\Controller\Api\V1\CitationsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\CitationsController" class="App\Controller\Api\V1\CitationsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\ClientController" class="App\Controller\Api\V1\ClientController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\ClientController" class="App\Controller\Api\V1\ClientController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\ClientController" class="App\Controller\Api\V1\ClientController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\ContentBriefsController" class="App\Controller\Api\V1\ContentBriefsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\ContentBriefsController" class="App\Controller\Api\V1\ContentBriefsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\ContentBriefsController" class="App\Controller\Api\V1\ContentBriefsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\ContentItemsController" class="App\Controller\Api\V1\ContentItemsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\ContentItemsController" class="App\Controller\Api\V1\ContentItemsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\ContentItemsController" class="App\Controller\Api\V1\ContentItemsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\FaqsController" class="App\Controller\Api\V1\FaqsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\FaqsController" class="App\Controller\Api\V1\FaqsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\FaqsController" class="App\Controller\Api\V1\FaqsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\InvoicesController" class="App\Controller\Api\V1\InvoicesController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\InvoicesController" class="App\Controller\Api\V1\InvoicesController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\InvoicesController" class="App\Controller\Api\V1\InvoicesController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\KeywordsController" class="App\Controller\Api\V1\KeywordsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\KeywordsController" class="App\Controller\Api\V1\KeywordsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\KeywordsController" class="App\Controller\Api\V1\KeywordsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\LeadsController" class="App\Controller\Api\V1\LeadsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\LeadsController" class="App\Controller\Api\V1\LeadsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\LeadsController" class="App\Controller\Api\V1\LeadsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\MediaAssetsController" class="App\Controller\Api\V1\MediaAssetsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\MediaAssetsController" class="App\Controller\Api\V1\MediaAssetsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\MediaAssetsController" class="App\Controller\Api\V1\MediaAssetsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\PackagesController" class="App\Controller\Api\V1\PackagesController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\PackagesController" class="App\Controller\Api\V1\PackagesController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\PackagesController" class="App\Controller\Api\V1\PackagesController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\PagesController" class="App\Controller\Api\V1\PagesController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\PagesController" class="App\Controller\Api\V1\PagesController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\PagesController" class="App\Controller\Api\V1\PagesController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\RankingsController" class="App\Controller\Api\V1\RankingsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\RankingsController" class="App\Controller\Api\V1\RankingsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\RankingsController" class="App\Controller\Api\V1\RankingsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\RecommendationsController" class="App\Controller\Api\V1\RecommendationsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\RecommendationsController" class="App\Controller\Api\V1\RecommendationsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\RecommendationsController" class="App\Controller\Api\V1\RecommendationsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\ReviewsController" class="App\Controller\Api\V1\ReviewsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\ReviewsController" class="App\Controller\Api\V1\ReviewsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\ReviewsController" class="App\Controller\Api\V1\ReviewsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\SubscriptionsController" class="App\Controller\Api\V1\SubscriptionsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\SubscriptionsController" class="App\Controller\Api\V1\SubscriptionsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\SubscriptionsController" class="App\Controller\Api\V1\SubscriptionsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\UploadsController" class="App\Controller\Api\V1\UploadsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\UploadsController" class="App\Controller\Api\V1\UploadsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\UploadsController" class="App\Controller\Api\V1\UploadsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\UserController" class="App\Controller\Api\V1\UserController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\UserController" class="App\Controller\Api\V1\UserController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\UserController" class="App\Controller\Api\V1\UserController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\UserProfileController" class="App\Controller\Api\V1\UserProfileController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\UserProfileController" class="App\Controller\Api\V1\UserProfileController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\UserProfileController" class="App\Controller\Api\V1\UserProfileController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\V1\WebhooksController" class="App\Controller\Api\V1\WebhooksController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\V1\WebhooksController" class="App\Controller\Api\V1\WebhooksController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\V1\WebhooksController" class="App\Controller\Api\V1\WebhooksController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\AuthController" class="App\Controller\AuthController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\AuthController" class="App\Controller\AuthController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\AuthController" class="App\Controller\AuthController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AgencyRepository" class="App\Repository\AgencyRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AgencyRepository" class="App\Repository\AgencyRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AuditCompetitorRepository" class="App\Repository\AuditCompetitorRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AuditCompetitorRepository" class="App\Repository\AuditCompetitorRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AuditConversionGoalRepository" class="App\Repository\AuditConversionGoalRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AuditConversionGoalRepository" class="App\Repository\AuditConversionGoalRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AuditFindingRepository" class="App\Repository\AuditFindingRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AuditFindingRepository" class="App\Repository\AuditFindingRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AuditIntakeRepository" class="App\Repository\AuditIntakeRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AuditIntakeRepository" class="App\Repository\AuditIntakeRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AuditKeywordRepository" class="App\Repository\AuditKeywordRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AuditKeywordRepository" class="App\Repository\AuditKeywordRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AuditRunRepository" class="App\Repository\AuditRunRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AuditRunRepository" class="App\Repository\AuditRunRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\BacklinkRepository" class="App\Repository\BacklinkRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\BacklinkRepository" class="App\Repository\BacklinkRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CampaignRepository" class="App\Repository\CampaignRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CampaignRepository" class="App\Repository\CampaignRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CaseStudyRepository" class="App\Repository\CaseStudyRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CaseStudyRepository" class="App\Repository\CaseStudyRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CitationRepository" class="App\Repository\CitationRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CitationRepository" class="App\Repository\CitationRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ClientRepository" class="App\Repository\ClientRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ClientRepository" class="App\Repository\ClientRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ContentBriefRepository" class="App\Repository\ContentBriefRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ContentBriefRepository" class="App\Repository\ContentBriefRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ContentItemRepository" class="App\Repository\ContentItemRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ContentItemRepository" class="App\Repository\ContentItemRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\FaqRepository" class="App\Repository\FaqRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\FaqRepository" class="App\Repository\FaqRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\InvoiceRepository" class="App\Repository\InvoiceRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\InvoiceRepository" class="App\Repository\InvoiceRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\KeywordRankingRepository" class="App\Repository\KeywordRankingRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\KeywordRankingRepository" class="App\Repository\KeywordRankingRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\KeywordRepository" class="App\Repository\KeywordRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\KeywordRepository" class="App\Repository\KeywordRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\LeadRepository" class="App\Repository\LeadRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\LeadRepository" class="App\Repository\LeadRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\MediaAssetRepository" class="App\Repository\MediaAssetRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\MediaAssetRepository" class="App\Repository\MediaAssetRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\OAuthConnectionRepository" class="App\Repository\OAuthConnectionRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\OAuthConnectionRepository" class="App\Repository\OAuthConnectionRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\OAuthTokenRepository" class="App\Repository\OAuthTokenRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\OAuthTokenRepository" class="App\Repository\OAuthTokenRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\OrganizationRepository" class="App\Repository\OrganizationRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\OrganizationRepository" class="App\Repository\OrganizationRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PackageRepository" class="App\Repository\PackageRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PackageRepository" class="App\Repository\PackageRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PageRepository" class="App\Repository\PageRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PageRepository" class="App\Repository\PageRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\RecommendationRepository" class="App\Repository\RecommendationRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\RecommendationRepository" class="App\Repository\RecommendationRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ReviewRepository" class="App\Repository\ReviewRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ReviewRepository" class="App\Repository\ReviewRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\SubscriptionRepository" class="App\Repository\SubscriptionRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\SubscriptionRepository" class="App\Repository\SubscriptionRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TenantRepository" class="App\Repository\TenantRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TenantRepository" class="App\Repository\TenantRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\UserRepository" class="App\Repository\UserRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\UserRepository" class="App\Repository\UserRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\Constraint.0.App\Validator\AuditIntakeClient" class="App\Validator\AuditIntakeClient" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Validator\AuditIntakeClient.0.App\Validator\AuditIntakeClient" class="App\Validator\AuditIntakeClient" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Validator\AuditIntakeClient" class="App\Validator\AuditIntakeClient" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.App\Validator\AuditIntakeClientValidator" class="App\Validator\AuditIntakeClientValidator" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Validator\AuditIntakeClientValidator" class="App\Validator\AuditIntakeClientValidator" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\Constraint.0.App\Validator\Constraints\DomainOrUrl" class="App\Validator\Constraints\DomainOrUrl" autowire="true" abstract="true"/>
    <service id=".instanceof.App\Validator\Constraints\DomainOrUrl.0.App\Validator\Constraints\DomainOrUrl" class="App\Validator\Constraints\DomainOrUrl" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Validator\Constraints\DomainOrUrl" class="App\Validator\Constraints\DomainOrUrl" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.App\Validator\Constraints\DomainOrUrlValidator" class="App\Validator\Constraints\DomainOrUrlValidator" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Validator\Constraints\DomainOrUrlValidator" class="App\Validator\Constraints\DomainOrUrlValidator" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.pRu6x_4" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service_closure" id="container.env_var_processor"/>
        <argument key="bool" type="service_closure" id="container.env_var_processor"/>
        <argument key="not" type="service_closure" id="container.env_var_processor"/>
        <argument key="const" type="service_closure" id="container.env_var_processor"/>
        <argument key="csv" type="service_closure" id="container.env_var_processor"/>
        <argument key="file" type="service_closure" id="container.env_var_processor"/>
        <argument key="float" type="service_closure" id="container.env_var_processor"/>
        <argument key="int" type="service_closure" id="container.env_var_processor"/>
        <argument key="json" type="service_closure" id="container.env_var_processor"/>
        <argument key="key" type="service_closure" id="container.env_var_processor"/>
        <argument key="url" type="service_closure" id="container.env_var_processor"/>
        <argument key="query_string" type="service_closure" id="container.env_var_processor"/>
        <argument key="resolve" type="service_closure" id="container.env_var_processor"/>
        <argument key="default" type="service_closure" id="container.env_var_processor"/>
        <argument key="string" type="service_closure" id="container.env_var_processor"/>
        <argument key="trim" type="service_closure" id="container.env_var_processor"/>
        <argument key="require" type="service_closure" id="container.env_var_processor"/>
        <argument key="enum" type="service_closure" id="container.env_var_processor"/>
        <argument key="shuffle" type="service_closure" id="container.env_var_processor"/>
        <argument key="defined" type="service_closure" id="container.env_var_processor"/>
        <argument key="urlencode" type="service_closure" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id="debug.security.event_dispatcher.api" class="Symfony\Component\EventDispatcher\Debug\TraceableEventDispatcher">
      <tag name="security.event_dispatcher.api">event_dispatcher.dispatcher</tag>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="security.event_dispatcher.api" inner="debug.security.event_dispatcher.api.inner"/>
      <argument type="service" id="debug.security.event_dispatcher.api.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.api"/>
          <argument>preCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.api"/>
          <argument>postCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_authenticator_credentials"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.password_migrating"/>
          <argument>onLoginSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.csrf_protection"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id=".service_locator.zHyJIs5" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="loader" type="service_closure" id=".errored..service_locator.zHyJIs5.Symfony\Component\Config\Loader\LoaderInterface"/>
      </argument>
    </service>
    <service id=".service_locator.zHyJIs5.kernel::registerContainerConfiguration()" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="kernel::registerContainerConfiguration()"/>
      <argument>kernel::registerContainerConfiguration()</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zHyJIs5" method="withContext"/>
    </service>
    <service id=".service_locator.zHyJIs5.kernel::loadRoutes()" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="kernel::loadRoutes()"/>
      <argument>kernel::loadRoutes()</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zHyJIs5" method="withContext"/>
    </service>
    <service id=".service_locator.F6vdjrP" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel::registerContainerConfiguration" type="service_closure" id=".service_locator.zHyJIs5.kernel::registerContainerConfiguration()"/>
        <argument key="App\Kernel::registerContainerConfiguration" type="service_closure" id=".service_locator.zHyJIs5.kernel::registerContainerConfiguration()"/>
        <argument key="kernel::loadRoutes" type="service_closure" id=".service_locator.zHyJIs5.kernel::loadRoutes()"/>
        <argument key="App\Kernel::loadRoutes" type="service_closure" id=".service_locator.zHyJIs5.kernel::loadRoutes()"/>
        <argument key="kernel:registerContainerConfiguration" type="service_closure" id=".service_locator.zHyJIs5.kernel::registerContainerConfiguration()"/>
        <argument key="kernel:loadRoutes" type="service_closure" id=".service_locator.zHyJIs5.kernel::loadRoutes()"/>
      </argument>
    </service>
    <service id=".service_locator.4xBqg6G" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Validator\AuditIntakeClientValidator" type="service_closure" id="App\Validator\AuditIntakeClientValidator"/>
        <argument key="App\Validator\Constraints\DomainOrUrlValidator" type="service_closure" id="App\Validator\Constraints\DomainOrUrlValidator"/>
        <argument key="validator.expression" type="service_closure" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service_closure" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service_closure" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service_closure" id="validator.not_compromised_password"/>
        <argument key="Symfony\Component\Validator\Constraints\WhenValidator" type="service_closure" id="validator.when"/>
        <argument key="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" type="service_closure" id="validator.no_suspicious_characters"/>
        <argument key="Symfony\Bridge\Twig\Validator\Constraints\TwigValidator" type="service_closure" id="twig.validator"/>
        <argument key="security.validator.user_password" type="service_closure" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service_closure" id="security.validator.user_password"/>
        <argument key="doctrine.orm.validator.unique" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service_closure" id="doctrine.orm.validator.unique"/>
      </argument>
    </service>
    <service id=".service_locator.va_rxC4" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service_closure" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id=".debug.value_resolver.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="security.user_value_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.security.security_token_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="security.security_token_value_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.doctrine.orm.entity_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="doctrine.orm.entity_value_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.backed_enum_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.backed_enum_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.uid" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.uid"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.datetime" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.datetime"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.request_attribute"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.request"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.session"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.api_platform.argument_resolver.payload" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="api_platform.argument_resolver.payload"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.service"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.default"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.variadic"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.not_tagged_controller"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.request_payload" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.request_payload"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.query_parameter_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.query_parameter_value_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id=".debug.security.voter.security.access.simple_role_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.simple_role_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id=".debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.expression_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id=".debug.security.voter.security.access.closure_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.closure_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.listener.csrf_protection" class="Symfony\Component\Security\Http\EventListener\CsrfProtectionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="controller.is_csrf_token_valid_attribute_listener" class="Symfony\Component\Security\Http\EventListener\IsCsrfTokenValidAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument type="service" id="security.is_csrf_token_valid_attribute_expression_language" on-invalid="null"/>
    </service>
    <service id="security.logout.listener.csrf_token_clearing" class="Symfony\Component\Security\Http\EventListener\CsrfTokenClearingLogoutListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="security.ldap_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id=".service_locator.ZSS2D.Y" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener" type="service_closure" id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener"/>
        <argument key="doctrine.orm.listeners.doctrine_token_provider_schema_listener" type="service_closure" id="doctrine.orm.listeners.doctrine_token_provider_schema_listener"/>
        <argument key="doctrine.orm.listeners.pdo_session_handler_schema_listener" type="service_closure" id="doctrine.orm.listeners.pdo_session_handler_schema_listener"/>
        <argument key="doctrine.orm.listeners.lock_store_schema_listener" type="service_closure" id="doctrine.orm.listeners.lock_store_schema_listener"/>
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service_closure" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </argument>
    </service>
    <service id=".service_locator.CsWi4QZ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Repository\AgencyRepository" type="service_closure" id="App\Repository\AgencyRepository"/>
        <argument key="App\Repository\AuditCompetitorRepository" type="service_closure" id="App\Repository\AuditCompetitorRepository"/>
        <argument key="App\Repository\AuditConversionGoalRepository" type="service_closure" id="App\Repository\AuditConversionGoalRepository"/>
        <argument key="App\Repository\AuditFindingRepository" type="service_closure" id="App\Repository\AuditFindingRepository"/>
        <argument key="App\Repository\AuditIntakeRepository" type="service_closure" id="App\Repository\AuditIntakeRepository"/>
        <argument key="App\Repository\AuditKeywordRepository" type="service_closure" id="App\Repository\AuditKeywordRepository"/>
        <argument key="App\Repository\AuditRunRepository" type="service_closure" id="App\Repository\AuditRunRepository"/>
        <argument key="App\Repository\BacklinkRepository" type="service_closure" id="App\Repository\BacklinkRepository"/>
        <argument key="App\Repository\CampaignRepository" type="service_closure" id="App\Repository\CampaignRepository"/>
        <argument key="App\Repository\CaseStudyRepository" type="service_closure" id="App\Repository\CaseStudyRepository"/>
        <argument key="App\Repository\CitationRepository" type="service_closure" id="App\Repository\CitationRepository"/>
        <argument key="App\Repository\ClientRepository" type="service_closure" id="App\Repository\ClientRepository"/>
        <argument key="App\Repository\ContentBriefRepository" type="service_closure" id="App\Repository\ContentBriefRepository"/>
        <argument key="App\Repository\ContentItemRepository" type="service_closure" id="App\Repository\ContentItemRepository"/>
        <argument key="App\Repository\FaqRepository" type="service_closure" id="App\Repository\FaqRepository"/>
        <argument key="App\Repository\InvoiceRepository" type="service_closure" id="App\Repository\InvoiceRepository"/>
        <argument key="App\Repository\KeywordRankingRepository" type="service_closure" id="App\Repository\KeywordRankingRepository"/>
        <argument key="App\Repository\KeywordRepository" type="service_closure" id="App\Repository\KeywordRepository"/>
        <argument key="App\Repository\LeadRepository" type="service_closure" id="App\Repository\LeadRepository"/>
        <argument key="App\Repository\MediaAssetRepository" type="service_closure" id="App\Repository\MediaAssetRepository"/>
        <argument key="App\Repository\OAuthConnectionRepository" type="service_closure" id="App\Repository\OAuthConnectionRepository"/>
        <argument key="App\Repository\OAuthTokenRepository" type="service_closure" id="App\Repository\OAuthTokenRepository"/>
        <argument key="App\Repository\OrganizationRepository" type="service_closure" id="App\Repository\OrganizationRepository"/>
        <argument key="App\Repository\PackageRepository" type="service_closure" id="App\Repository\PackageRepository"/>
        <argument key="App\Repository\PageRepository" type="service_closure" id="App\Repository\PageRepository"/>
        <argument key="App\Repository\RecommendationRepository" type="service_closure" id="App\Repository\RecommendationRepository"/>
        <argument key="App\Repository\ReviewRepository" type="service_closure" id="App\Repository\ReviewRepository"/>
        <argument key="App\Repository\SubscriptionRepository" type="service_closure" id="App\Repository\SubscriptionRepository"/>
        <argument key="App\Repository\TenantRepository" type="service_closure" id="App\Repository\TenantRepository"/>
        <argument key="App\Repository\UserRepository" type="service_closure" id="App\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.BxSdgVt" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.ulid_generator" type="service_closure" id="doctrine.ulid_generator"/>
        <argument key="doctrine.uuid_generator" type="service_closure" id="doctrine.uuid_generator"/>
      </argument>
    </service>
    <service id=".doctrine.orm.default_metadata_driver" class="Doctrine\Bundle\DoctrineBundle\Mapping\MappingDriver">
      <tag name="container.decorator" id="doctrine.orm.default_metadata_driver" inner=".doctrine.orm.default_metadata_driver.inner"/>
      <argument type="service" id=".doctrine.orm.default_metadata_driver.inner"/>
      <argument type="service" id=".service_locator.BxSdgVt"/>
    </service>
    <service id="doctrine.dbal.default_schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager">
      <argument type="collection">
        <argument type="service" id="doctrine.dbal.default_regex_schema_filter"/>
        <argument type="service" id="doctrine_migrations.schema_filter_listener"/>
      </argument>
    </service>
    <service id="doctrine.dbal.logging_middleware.default" class="Doctrine\DBAL\Logging\Middleware">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine"/>
    </service>
    <service id="doctrine.dbal.debug_middleware.default" class="Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware">
      <argument type="service" id="doctrine.debug_data_holder"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
      <call method="setConnectionName">
        <argument>default</argument>
      </call>
    </service>
    <service id="doctrine.dbal.idle_connection_middleware.default" class="Doctrine\Bundle\DoctrineBundle\Middleware\IdleConnectionMiddleware">
      <argument type="service" id="doctrine.dbal.connection_expiries"/>
      <argument type="collection">
        <argument key="default">600</argument>
      </argument>
      <call method="setConnectionName">
        <argument>default</argument>
      </call>
    </service>
    <service id="test.api_platform.client" class="ApiPlatform\Symfony\Bundle\Test\Client" shared="false" public="true">
      <argument type="service" id="test.client"/>
    </service>
    <service id="monolog.logger.request" class="Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.console" class="Monolog\Logger">
      <argument>console</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Monolog\Logger">
      <argument>cache</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.http_client" class="Monolog\Logger">
      <argument>http_client</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.deprecation" class="Monolog\Logger" public="true">
      <argument>deprecation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.deprecation"/>
      </call>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id=".service_locator.ZyP9f7K" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="serializer" type="service_closure" id="serializer" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="web_link.http_header_serializer" type="service_closure" id="web_link.http_header_serializer" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\AgencyController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\AgencyController"/>
      <argument>App\Controller\Api\V1\AgencyController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\AuditFindingsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\AuditFindingsController"/>
      <argument>App\Controller\Api\V1\AuditFindingsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\AuditIntakeController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\AuditIntakeController"/>
      <argument>App\Controller\Api\V1\AuditIntakeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\AuditsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\AuditsController"/>
      <argument>App\Controller\Api\V1\AuditsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\AuthController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\AuthController"/>
      <argument>App\Controller\Api\V1\AuthController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\BacklinksController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\BacklinksController"/>
      <argument>App\Controller\Api\V1\BacklinksController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\CampaignsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\CampaignsController"/>
      <argument>App\Controller\Api\V1\CampaignsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\CitationsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\CitationsController"/>
      <argument>App\Controller\Api\V1\CitationsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\ClientController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\ClientController"/>
      <argument>App\Controller\Api\V1\ClientController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\ContentBriefsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\ContentBriefsController"/>
      <argument>App\Controller\Api\V1\ContentBriefsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\ContentItemsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\ContentItemsController"/>
      <argument>App\Controller\Api\V1\ContentItemsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\FaqsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\FaqsController"/>
      <argument>App\Controller\Api\V1\FaqsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\InvoicesController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\InvoicesController"/>
      <argument>App\Controller\Api\V1\InvoicesController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\KeywordsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\KeywordsController"/>
      <argument>App\Controller\Api\V1\KeywordsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\LeadsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\LeadsController"/>
      <argument>App\Controller\Api\V1\LeadsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\MediaAssetsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\MediaAssetsController"/>
      <argument>App\Controller\Api\V1\MediaAssetsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\PackagesController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\PackagesController"/>
      <argument>App\Controller\Api\V1\PackagesController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\PagesController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\PagesController"/>
      <argument>App\Controller\Api\V1\PagesController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\RankingsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\RankingsController"/>
      <argument>App\Controller\Api\V1\RankingsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\RecommendationsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\RecommendationsController"/>
      <argument>App\Controller\Api\V1\RecommendationsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\ReviewsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\ReviewsController"/>
      <argument>App\Controller\Api\V1\ReviewsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\SubscriptionsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\SubscriptionsController"/>
      <argument>App\Controller\Api\V1\SubscriptionsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\UploadsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\UploadsController"/>
      <argument>App\Controller\Api\V1\UploadsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\UserController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\UserController"/>
      <argument>App\Controller\Api\V1\UserController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\UserProfileController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\UserProfileController"/>
      <argument>App\Controller\Api\V1\UserProfileController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\Api\V1\WebhooksController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Api\V1\WebhooksController"/>
      <argument>App\Controller\Api\V1\WebhooksController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.ZyP9f7K.App\Controller\AuthController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\AuthController"/>
      <argument>App\Controller\AuthController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ZyP9f7K" method="withContext"/>
    </service>
    <service id=".service_locator.VVisMRE" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service_closure" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.VVisMRE.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.VVisMRE" method="withContext"/>
    </service>
    <service id=".service_locator.qXR9Hv0" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service_closure" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.qXR9Hv0.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qXR9Hv0" method="withContext"/>
    </service>
    <service id=".service_locator.lMv3Dwi" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service_closure" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.lMv3Dwi.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.lMv3Dwi" method="withContext"/>
    </service>
    <service id=".service_locator.vsAfDr." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.request_payload"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.query_parameter_value_resolver"/>
        <argument key="Symfony\Component\Security\Http\Controller\UserValueResolver" type="service_closure" id=".debug.value_resolver.security.user_value_resolver"/>
        <argument key="Symfony\Component\Security\Http\Controller\SecurityTokenValueResolver" type="service_closure" id=".debug.value_resolver.security.security_token_value_resolver"/>
        <argument key="Symfony\Bridge\Doctrine\ArgumentResolver\EntityValueResolver" type="service_closure" id=".debug.value_resolver.doctrine.orm.entity_value_resolver"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.backed_enum_resolver"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\UidValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.uid"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.datetime"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.request_attribute"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.request"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.session"/>
        <argument key="api_platform.argument_resolver.payload" type="service_closure" id=".debug.value_resolver.api_platform.argument_resolver.payload"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.service"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.default"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.variadic"/>
        <argument key="argument_resolver.not_tagged_controller" type="service_closure" id=".debug.value_resolver.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id=".service_locator.NLcq8cs" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.GIuJv7e" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.DOrA4Nm" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cache.app" type="service_closure" id="cache.app.taggable"/>
      </argument>
    </service>
    <service id=".service_locator.8GlXtTV" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="event_dispatcher" type="service_closure" id="debug.event_dispatcher"/>
        <argument key="security.event_dispatcher.api" type="service_closure" id="debug.security.event_dispatcher.api"/>
      </argument>
    </service>
    <service id=".service_locator.9ba7RnD" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session_factory" type="service_closure" id="session.factory" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.rhF__EI" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service_closure" id="kernel"/>
        <argument key="security.route_loader.logout" type="service_closure" id="security.route_loader.logout"/>
      </argument>
    </service>
    <service id=".service_locator.u.4FiKa" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="env" type="service_closure" id="container.getenv"/>
        <argument key="service" type="service_closure" id="container.get_routing_condition_service"/>
      </argument>
    </service>
    <service id=".service_locator.riiCAol" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="string" type="service_closure" id="type_info.resolver.string"/>
        <argument key="ReflectionParameter" type="service_closure" id="type_info.resolver.reflection_parameter.phpdoc_aware"/>
        <argument key="ReflectionProperty" type="service_closure" id="type_info.resolver.reflection_property.phpdoc_aware"/>
        <argument key="ReflectionFunctionAbstract" type="service_closure" id="type_info.resolver.reflection_return.phpdoc_aware"/>
        <argument key="ReflectionType" type="service_closure" id="type_info.resolver.reflection_type"/>
      </argument>
    </service>
    <service id=".service_locator.mDV6p8L" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="request_stack" type="service_closure" id="request_stack"/>
      </argument>
    </service>
    <service id=".service_locator.2QMaG2L" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.token_storage" type="service_closure" id="security.token_storage"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker"/>
        <argument key="security.user_authorization_checker" type="service_closure" id="security.authorization_checker"/>
        <argument key="security.authenticator.managers_locator" type="service_closure" id="security.authenticator.managers_locator" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack"/>
        <argument key="security.firewall.map" type="service_closure" id="security.firewall.map"/>
        <argument key="security.user_checker_locator" type="service_closure" id="security.user_checker_locator"/>
        <argument key="security.firewall.event_dispatcher_locator" type="service_closure" id="security.firewall.event_dispatcher_locator"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.5j9N9oX" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="ApiPlatform\State\CreateProvider" type="service_closure" id="api_platform.state_provider.create"/>
        <argument key="api_platform.state_provider.create" type="service_closure" id="api_platform.state_provider.create"/>
        <argument key="ApiPlatform\State\ObjectProvider" type="service_closure" id="api_platform.state_provider.object"/>
        <argument key="api_platform.state_provider.object" type="service_closure" id="api_platform.state_provider.object"/>
        <argument key="ApiPlatform\State\Provider\BackedEnumProvider" type="service_closure" id="api_platform.state_provider.backed_enum"/>
        <argument key="api_platform.state_provider.backed_enum" type="service_closure" id="api_platform.state_provider.backed_enum"/>
        <argument key="api_platform.state.error_provider" type="service_closure" id="api_platform.state.error_provider"/>
        <argument key="api_platform.validator.state.error_provider" type="service_closure" id="api_platform.validator.state.error_provider"/>
        <argument key="ApiPlatform\OpenApi\State\OpenApiProvider" type="service_closure" id="api_platform.openapi.provider"/>
        <argument key="api_platform.openapi.provider" type="service_closure" id="api_platform.openapi.provider"/>
        <argument key="ApiPlatform\Doctrine\Orm\State\CollectionProvider" type="service_closure" id="api_platform.doctrine.orm.state.collection_provider"/>
        <argument key="api_platform.doctrine.orm.state.collection_provider" type="service_closure" id="api_platform.doctrine.orm.state.collection_provider"/>
        <argument key="ApiPlatform\Doctrine\Orm\State\ItemProvider" type="service_closure" id="api_platform.doctrine.orm.state.item_provider"/>
        <argument key="api_platform.doctrine.orm.state.item_provider" type="service_closure" id="api_platform.doctrine.orm.state.item_provider"/>
      </argument>
    </service>
    <service id=".service_locator.3z9TdAF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="api_platform.swagger_ui.processor" type="service_closure" id="api_platform.swagger_ui.processor"/>
        <argument key="api_platform.doctrine.orm.state.remove_processor" type="service_closure" id="api_platform.doctrine.orm.state.remove_processor"/>
        <argument key="ApiPlatform\Doctrine\Common\State\RemoveProcessor" type="service_closure" id="api_platform.doctrine.orm.state.remove_processor"/>
        <argument key="api_platform.doctrine.orm.state.persist_processor" type="service_closure" id="api_platform.doctrine.orm.state.persist_processor"/>
        <argument key="ApiPlatform\Doctrine\Common\State\PersistProcessor" type="service_closure" id="api_platform.doctrine.orm.state.persist_processor"/>
      </argument>
    </service>
    <service id=".service_locator.WQt9XZi" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="api_platform.serializer.filter_parameter_provider" type="service_closure" id="api_platform.serializer.filter_parameter_provider"/>
        <argument key="ApiPlatform\State\ParameterProvider\IriConverterParameterProvider" type="service_closure" id="api_platform.state_provider.parameter.iri_converter"/>
      </argument>
    </service>
    <service id=".service_locator.aVKDDNU" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="api_platform.doctrine.orm.links_handler" type="service_closure" id="api_platform.doctrine.orm.links_handler"/>
      </argument>
    </service>
    <service id="api_platform.hydra.processor.link.inner" class="ApiPlatform\State\Processor\RespondProcessor">
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.metadata.operation.metadata_factory"/>
    </service>
    <service id="api_platform.doctrine.orm.metadata.resource.link_factory.inner" class="ApiPlatform\Metadata\Resource\Factory\LinkFactory">
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="http_client.uri_template.inner" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <argument type="collection">
        <argument type="service" id="http_client.transport"/>
      </argument>
      <factory function="current"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver">
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <call method="allowControllers">
        <argument type="collection">
          <argument>Symfony\Bundle\FrameworkBundle\Controller\AbstractController</argument>
          <argument>Symfony\Bundle\FrameworkBundle\Controller\TemplateController</argument>
        </argument>
      </call>
      <call method="allowControllers">
        <argument type="collection">
          <argument>App\Kernel</argument>
          <argument>App\Controller\Api\V1\AgencyController</argument>
          <argument>App\Controller\Api\V1\AuditFindingsController</argument>
          <argument>App\Controller\Api\V1\AuditIntakeController</argument>
          <argument>App\Controller\Api\V1\AuditsController</argument>
          <argument>App\Controller\Api\V1\AuthController</argument>
          <argument>App\Controller\Api\V1\BacklinksController</argument>
          <argument>App\Controller\Api\V1\CampaignsController</argument>
          <argument>App\Controller\Api\V1\CitationsController</argument>
          <argument>App\Controller\Api\V1\ClientController</argument>
          <argument>App\Controller\Api\V1\ContentBriefsController</argument>
          <argument>App\Controller\Api\V1\ContentItemsController</argument>
          <argument>App\Controller\Api\V1\FaqsController</argument>
          <argument>App\Controller\Api\V1\InvoicesController</argument>
          <argument>App\Controller\Api\V1\KeywordsController</argument>
          <argument>App\Controller\Api\V1\LeadsController</argument>
          <argument>App\Controller\Api\V1\MediaAssetsController</argument>
          <argument>App\Controller\Api\V1\PackagesController</argument>
          <argument>App\Controller\Api\V1\PagesController</argument>
          <argument>App\Controller\Api\V1\RankingsController</argument>
          <argument>App\Controller\Api\V1\RecommendationsController</argument>
          <argument>App\Controller\Api\V1\ReviewsController</argument>
          <argument>App\Controller\Api\V1\SubscriptionsController</argument>
          <argument>App\Controller\Api\V1\UploadsController</argument>
          <argument>App\Controller\Api\V1\UserController</argument>
          <argument>App\Controller\Api\V1\UserProfileController</argument>
          <argument>App\Controller\Api\V1\WebhooksController</argument>
          <argument>App\Controller\AuthController</argument>
          <argument>Doctrine\Bundle\DoctrineBundle\Controller\ProfilerController</argument>
        </argument>
      </call>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id=".debug.value_resolver.security.user_value_resolver"/>
        <argument type="service" id=".debug.value_resolver.security.security_token_value_resolver"/>
        <argument type="service" id=".debug.value_resolver.doctrine.orm.entity_value_resolver"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.backed_enum_resolver"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.uid"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.datetime"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.request_attribute"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.request"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.session"/>
        <argument type="service" id=".debug.value_resolver.api_platform.argument_resolver.payload"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.service"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.default"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.variadic"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.not_tagged_controller"/>
      </argument>
      <argument type="service" id=".service_locator.vsAfDr."/>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager">
      <argument type="iterator">
        <argument type="service" id=".debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id=".debug.security.voter.security.access.simple_role_voter"/>
        <argument type="service" id=".debug.security.voter.security.access.expression_voter"/>
        <argument type="service" id=".debug.security.voter.security.access.closure_voter"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\Strategy\AffirmativeStrategy">
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="debug.security.firewall.authenticator.api.inner" class="Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener">
      <argument type="service" id="security.authenticator.manager.api"/>
    </service>
    <service id="api_platform.serializer.context_builder.filter.inner" class="ApiPlatform\Serializer\SerializerContextBuilder">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument>true</argument>
    </service>
    <service id="api_platform.swagger_ui.provider.inner" class="ApiPlatform\State\Provider\ReadProvider">
      <argument type="service" id="api_platform.state_provider.locator"/>
      <argument type="service" id="api_platform.openapi.serializer_context_builder"/>
    </service>
    <service id="api_platform.hydra.json_schema.schema_factory.inner" class="ApiPlatform\JsonSchema\SchemaFactory">
      <argument type="service" id="api_platform.metadata.resource.metadata_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.hydra.name_converter.hydra_prefix" on-invalid="ignore"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument>%api_platform.jsonschema_formats%</argument>
      <argument type="service" id="api_platform.json_schema.definition_name_factory" on-invalid="ignore"/>
    </service>
    <service id="api_platform.hydra.normalizer.partial_collection_view.inner" class="ApiPlatform\Hydra\Serializer\CollectionNormalizer">
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.symfony.iri_converter"/>
      <argument>%api_platform.serializer.default_context%</argument>
    </service>
    <service id="api_platform.state_provider.access_checker.post_deserialize.inner" class="ApiPlatform\State\Provider\DeserializeProvider">
      <argument type="service" id="api_platform.state_provider.security_parameter"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.openapi.serializer_context_builder"/>
      <argument>null</argument>
    </service>
    <service id="api_platform.state_provider.security_parameter.inner" class="ApiPlatform\Symfony\Security\State\AccessCheckerProvider">
      <tag name="container.decorator" id="api_platform.state_provider.read" inner="api_platform.swagger_ui.provider.inner"/>
      <argument type="service" id="api_platform.swagger_ui.provider"/>
      <argument type="service" id="api_platform.security.resource_access_checker"/>
    </service>
    <service id="api_platform.state_provider.access_checker.post_validate.inner" class="ApiPlatform\Symfony\Validator\State\ValidateProvider">
      <argument type="service" id="api_platform.state_provider.access_checker.post_deserialize"/>
      <argument type="service" id="api_platform.validator"/>
    </service>
    <service id="debug.security.event_dispatcher.api.inner" class="Symfony\Component\EventDispatcher\EventDispatcher"/>
    <service id=".doctrine.orm.default_metadata_driver.inner" class="Doctrine\Persistence\Mapping\Driver\MappingDriverChain">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_attribute_metadata_driver"/>
        <argument>App\Entity</argument>
      </call>
    </service>
    <service id="api_platform.serializer.mapping.class_metadata_factory.inner" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory">
      <argument type="service" id="serializer.mapping.chain_loader"/>
    </service>
    <service id="api_platform.openapi.normalizer.api_gateway.inner" class="ApiPlatform\OpenApi\Serializer\OpenApiNormalizer">
      <argument type="service" id=".1_Serializer~gfBDrk1"/>
    </service>
    <service id="api_platform.openapi.normalizer.legacy.inner" class="ApiPlatform\OpenApi\Serializer\ApiGatewayNormalizer">
      <tag name="container.decorator" id="api_platform.openapi.normalizer" inner="api_platform.openapi.normalizer.api_gateway.inner"/>
      <argument type="service" id="api_platform.openapi.normalizer.api_gateway.inner"/>
    </service>
    <service id=".errored..service_locator.zHyJIs5.Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.zHyJIs5&quot;: it needs an instance of &quot;Symfony\Component\Config\Loader\LoaderInterface&quot; but this type has been excluded from autowiring."/>
    </service>
    <service id=".App\Command\CreateClientCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>app:create-client</argument>
      <argument type="collection"/>
      <argument>Create a new client (law firm)</argument>
      <argument>false</argument>
      <argument type="service_closure" id="App\Command\CreateClientCommand"/>
    </service>
    <service id=".App\Command\CreatePackageCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>app:create-package</argument>
      <argument type="collection"/>
      <argument>Create a new pricing package</argument>
      <argument>false</argument>
      <argument type="service_closure" id="App\Command\CreatePackageCommand"/>
    </service>
    <service id=".App\Command\CreateSystemAccountCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>app:create-system-account</argument>
      <argument type="collection"/>
      <argument>Create a new system account for backend operations</argument>
      <argument>false</argument>
      <argument type="service_closure" id="App\Command\CreateSystemAccountCommand"/>
    </service>
    <service id=".App\Command\CreateUserCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>app:create-user</argument>
      <argument type="collection"/>
      <argument>Create a new user with role-based access control</argument>
      <argument>false</argument>
      <argument type="service_closure" id="App\Command\CreateUserCommand"/>
    </service>
    <service id=".console.command.about.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>about</argument>
      <argument type="collection"/>
      <argument>Display information about the current project</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.about"/>
    </service>
    <service id=".console.command.assets_install.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>assets:install</argument>
      <argument type="collection"/>
      <argument>Install bundle's web assets under a public directory</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.assets_install"/>
    </service>
    <service id=".console.command.cache_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:clear</argument>
      <argument type="collection"/>
      <argument>Clear the cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_clear"/>
    </service>
    <service id=".console.command.cache_pool_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:clear</argument>
      <argument type="collection"/>
      <argument>Clear cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_clear"/>
    </service>
    <service id=".console.command.cache_pool_prune.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:prune</argument>
      <argument type="collection"/>
      <argument>Prune cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_prune"/>
    </service>
    <service id=".console.command.cache_pool_invalidate_tags.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:invalidate-tags</argument>
      <argument type="collection"/>
      <argument>Invalidate cache tags for all or a specific pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_invalidate_tags"/>
    </service>
    <service id=".console.command.cache_pool_delete.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:delete</argument>
      <argument type="collection"/>
      <argument>Delete an item from a cache pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_delete"/>
    </service>
    <service id=".console.command.cache_pool_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:list</argument>
      <argument type="collection"/>
      <argument>List available cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_list"/>
    </service>
    <service id=".console.command.cache_warmup.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:warmup</argument>
      <argument type="collection"/>
      <argument>Warm up an empty cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_warmup"/>
    </service>
    <service id=".console.command.config_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:config</argument>
      <argument type="collection"/>
      <argument>Dump the current configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_debug"/>
    </service>
    <service id=".console.command.config_dump_reference.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>config:dump-reference</argument>
      <argument type="collection"/>
      <argument>Dump the default configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_dump_reference"/>
    </service>
    <service id=".console.command.container_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:container</argument>
      <argument type="collection"/>
      <argument>Display current services for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_debug"/>
    </service>
    <service id=".console.command.container_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:container</argument>
      <argument type="collection"/>
      <argument>Ensure that arguments injected into services match type declarations</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_lint"/>
    </service>
    <service id=".console.command.debug_autowiring.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:autowiring</argument>
      <argument type="collection"/>
      <argument>List classes/interfaces you can use for autowiring</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.debug_autowiring"/>
    </service>
    <service id=".console.command.dotenv_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:dotenv</argument>
      <argument type="collection"/>
      <argument>List all dotenv files with variables and values</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.dotenv_debug"/>
    </service>
    <service id=".console.command.event_dispatcher_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:event-dispatcher</argument>
      <argument type="collection"/>
      <argument>Display configured listeners for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.event_dispatcher_debug"/>
    </service>
    <service id=".console.command.router_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:router</argument>
      <argument type="collection"/>
      <argument>Display current routes for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_debug"/>
    </service>
    <service id=".console.command.router_match.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>router:match</argument>
      <argument type="collection"/>
      <argument>Help debug routes by simulating a path info match</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_match"/>
    </service>
    <service id=".console.command.serializer_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:serializer</argument>
      <argument type="collection"/>
      <argument>Display serialization information for classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.serializer_debug"/>
    </service>
    <service id=".console.command.validator_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:validator</argument>
      <argument type="collection"/>
      <argument>Display validation constraints for classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.validator_debug"/>
    </service>
    <service id=".console.command.yaml_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:yaml</argument>
      <argument type="collection"/>
      <argument>Lint a YAML file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.yaml_lint"/>
    </service>
    <service id=".console.command.secrets_set.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:set</argument>
      <argument type="collection"/>
      <argument>Set a secret in the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_set"/>
    </service>
    <service id=".console.command.secrets_remove.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:remove</argument>
      <argument type="collection"/>
      <argument>Remove a secret from the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_remove"/>
    </service>
    <service id=".console.command.secrets_generate_key.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:generate-keys</argument>
      <argument type="collection"/>
      <argument>Generate new encryption keys</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_generate_key"/>
    </service>
    <service id=".console.command.secrets_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:list</argument>
      <argument type="collection"/>
      <argument>List all secrets</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_list"/>
    </service>
    <service id=".console.command.secrets_reveal.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:reveal</argument>
      <argument type="collection"/>
      <argument>Reveal the value of a secret</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_reveal"/>
    </service>
    <service id=".console.command.secrets_decrypt_to_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:decrypt-to-local</argument>
      <argument type="collection"/>
      <argument>Decrypt all secrets and stores them in the local vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_decrypt_to_local"/>
    </service>
    <service id=".console.command.secrets_encrypt_from_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:encrypt-from-local</argument>
      <argument type="collection"/>
      <argument>Encrypt all local secrets to the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_encrypt_from_local"/>
    </service>
    <service id=".console.command.error_dumper.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>error:dump</argument>
      <argument type="collection"/>
      <argument>Dump error pages to plain HTML files that can be directly served by a web server</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.error_dumper"/>
    </service>
    <service id=".twig.command.debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:twig</argument>
      <argument type="collection"/>
      <argument>Show a list of twig functions, filters, globals and tests</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.debug"/>
    </service>
    <service id=".twig.command.lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:twig</argument>
      <argument type="collection"/>
      <argument>Lint a Twig template and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.lint"/>
    </service>
    <service id=".security.command.debug_firewall.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:firewall</argument>
      <argument type="collection"/>
      <argument>Display information about your security firewall(s)</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.debug_firewall"/>
    </service>
    <service id=".security.command.user_password_hash.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>security:hash-password</argument>
      <argument type="collection"/>
      <argument>Hash a user password</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.user_password_hash"/>
    </service>
    <service id=".doctrine_migrations.diff_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:diff</argument>
      <argument type="collection"/>
      <argument>Generate a migration by comparing your current database to your mapping information.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.diff_command"/>
    </service>
    <service id=".doctrine_migrations.sync_metadata_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:sync-metadata-storage</argument>
      <argument type="collection"/>
      <argument>Ensures that the metadata storage is at the latest version.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.sync_metadata_command"/>
    </service>
    <service id=".doctrine_migrations.versions_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:list</argument>
      <argument type="collection"/>
      <argument>Display a list of all available migrations and their status.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.versions_command"/>
    </service>
    <service id=".doctrine_migrations.current_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:current</argument>
      <argument type="collection"/>
      <argument>Outputs the current version</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.current_command"/>
    </service>
    <service id=".doctrine_migrations.dump_schema_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:dump-schema</argument>
      <argument type="collection"/>
      <argument>Dump the schema for your database to a migration.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.dump_schema_command"/>
    </service>
    <service id=".doctrine_migrations.execute_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:execute</argument>
      <argument type="collection"/>
      <argument>Execute one or more migration versions up or down manually.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.execute_command"/>
    </service>
    <service id=".doctrine_migrations.generate_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:generate</argument>
      <argument type="collection"/>
      <argument>Generate a blank migration class.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.generate_command"/>
    </service>
    <service id=".doctrine_migrations.latest_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:latest</argument>
      <argument type="collection"/>
      <argument>Outputs the latest version</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.latest_command"/>
    </service>
    <service id=".doctrine_migrations.migrate_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:migrate</argument>
      <argument type="collection"/>
      <argument>Execute a migration to a specified version or the latest available version.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.migrate_command"/>
    </service>
    <service id=".doctrine_migrations.rollup_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:rollup</argument>
      <argument type="collection"/>
      <argument>Rollup migrations by deleting all tracked versions and insert the one version that exists.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.rollup_command"/>
    </service>
    <service id=".doctrine_migrations.status_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:status</argument>
      <argument type="collection"/>
      <argument>View the status of a set of migrations.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.status_command"/>
    </service>
    <service id=".doctrine_migrations.up_to_date_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:up-to-date</argument>
      <argument type="collection"/>
      <argument>Tells you if your schema is up-to-date.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.up_to_date_command"/>
    </service>
    <service id=".doctrine_migrations.version_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>doctrine:migrations:version</argument>
      <argument type="collection"/>
      <argument>Manually add and delete migration versions from the version table.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="doctrine_migrations.version_command"/>
    </service>
    <service id=".lexik_jwt_authentication.check_config_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lexik:jwt:check-config</argument>
      <argument type="collection"/>
      <argument>Checks that the bundle is properly configured.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="lexik_jwt_authentication.check_config_command"/>
    </service>
    <service id=".lexik_jwt_authentication.migrate_config_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lexik:jwt:migrate-config</argument>
      <argument type="collection"/>
      <argument>Migrate LexikJWTAuthenticationBundle configuration to the Web-Token one.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="lexik_jwt_authentication.migrate_config_command"/>
    </service>
    <service id=".lexik_jwt_authentication.enable_encryption_config_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lexik:jwt:enable-encryption</argument>
      <argument type="collection"/>
      <argument>Enable Web-Token encryption support.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="lexik_jwt_authentication.enable_encryption_config_command"/>
    </service>
    <service id=".lexik_jwt_authentication.generate_token_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lexik:jwt:generate-token</argument>
      <argument type="collection"/>
      <argument>Generates a JWT token for a given user.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="lexik_jwt_authentication.generate_token_command"/>
    </service>
    <service id=".lexik_jwt_authentication.generate_keypair_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lexik:jwt:generate-keypair</argument>
      <argument type="collection"/>
      <argument>Generate public/private keys for use in your application.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="lexik_jwt_authentication.generate_keypair_command"/>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.n6jm3dO"/>
      <argument type="collection">
        <argument key="app:create-client">App\Command\CreateClientCommand</argument>
        <argument key="app:create-package">App\Command\CreatePackageCommand</argument>
        <argument key="app:create-system-account">App\Command\CreateSystemAccountCommand</argument>
        <argument key="app:create-user">App\Command\CreateUserCommand</argument>
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:invalidate-tags">console.command.cache_pool_invalidate_tags</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:dotenv">console.command.dotenv_debug</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:serializer">console.command.serializer_debug</argument>
        <argument key="debug:validator">console.command.validator_debug</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:reveal">console.command.secrets_reveal</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="error:dump">console.command.error_dumper</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="debug:firewall">security.command.debug_firewall</argument>
        <argument key="security:hash-password">security.command.user_password_hash</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="dbal:run-sql">Doctrine\DBAL\Tools\Console\Command\RunSqlCommand</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:migrations:diff">doctrine_migrations.diff_command</argument>
        <argument key="doctrine:migrations:sync-metadata-storage">doctrine_migrations.sync_metadata_command</argument>
        <argument key="doctrine:migrations:list">doctrine_migrations.versions_command</argument>
        <argument key="doctrine:migrations:current">doctrine_migrations.current_command</argument>
        <argument key="doctrine:migrations:dump-schema">doctrine_migrations.dump_schema_command</argument>
        <argument key="doctrine:migrations:execute">doctrine_migrations.execute_command</argument>
        <argument key="doctrine:migrations:generate">doctrine_migrations.generate_command</argument>
        <argument key="doctrine:migrations:latest">doctrine_migrations.latest_command</argument>
        <argument key="doctrine:migrations:migrate">doctrine_migrations.migrate_command</argument>
        <argument key="doctrine:migrations:rollup">doctrine_migrations.rollup_command</argument>
        <argument key="doctrine:migrations:status">doctrine_migrations.status_command</argument>
        <argument key="doctrine:migrations:up-to-date">doctrine_migrations.up_to_date_command</argument>
        <argument key="doctrine:migrations:version">doctrine_migrations.version_command</argument>
        <argument key="api:json-schema:generate">api_platform.json_schema.json_schema_generate_command</argument>
        <argument key="api:openapi:export">api_platform.openapi.command</argument>
        <argument key="debug:api-resource">debug.api_platform.debug_resource.command</argument>
        <argument key="lexik:jwt:check-config">lexik_jwt_authentication.check_config_command</argument>
        <argument key="lexik:jwt:migrate-config">lexik_jwt_authentication.migrate_config_command</argument>
        <argument key="lexik:jwt:enable-encryption">lexik_jwt_authentication.enable_encryption_config_command</argument>
        <argument key="lexik:jwt:generate-token">lexik_jwt_authentication.generate_token_command</argument>
        <argument key="lexik:jwt:generate-keypair">lexik_jwt_authentication.generate_keypair_command</argument>
      </argument>
    </service>
    <service id=".service_locator.n6jm3dO" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Command\CreateClientCommand" type="service_closure" id=".App\Command\CreateClientCommand.lazy"/>
        <argument key="App\Command\CreatePackageCommand" type="service_closure" id=".App\Command\CreatePackageCommand.lazy"/>
        <argument key="App\Command\CreateSystemAccountCommand" type="service_closure" id=".App\Command\CreateSystemAccountCommand.lazy"/>
        <argument key="App\Command\CreateUserCommand" type="service_closure" id=".App\Command\CreateUserCommand.lazy"/>
        <argument key="console.command.about" type="service_closure" id=".console.command.about.lazy"/>
        <argument key="console.command.assets_install" type="service_closure" id=".console.command.assets_install.lazy"/>
        <argument key="console.command.cache_clear" type="service_closure" id=".console.command.cache_clear.lazy"/>
        <argument key="console.command.cache_pool_clear" type="service_closure" id=".console.command.cache_pool_clear.lazy"/>
        <argument key="console.command.cache_pool_prune" type="service_closure" id=".console.command.cache_pool_prune.lazy"/>
        <argument key="console.command.cache_pool_invalidate_tags" type="service_closure" id=".console.command.cache_pool_invalidate_tags.lazy"/>
        <argument key="console.command.cache_pool_delete" type="service_closure" id=".console.command.cache_pool_delete.lazy"/>
        <argument key="console.command.cache_pool_list" type="service_closure" id=".console.command.cache_pool_list.lazy"/>
        <argument key="console.command.cache_warmup" type="service_closure" id=".console.command.cache_warmup.lazy"/>
        <argument key="console.command.config_debug" type="service_closure" id=".console.command.config_debug.lazy"/>
        <argument key="console.command.config_dump_reference" type="service_closure" id=".console.command.config_dump_reference.lazy"/>
        <argument key="console.command.container_debug" type="service_closure" id=".console.command.container_debug.lazy"/>
        <argument key="console.command.container_lint" type="service_closure" id=".console.command.container_lint.lazy"/>
        <argument key="console.command.debug_autowiring" type="service_closure" id=".console.command.debug_autowiring.lazy"/>
        <argument key="console.command.dotenv_debug" type="service_closure" id=".console.command.dotenv_debug.lazy"/>
        <argument key="console.command.event_dispatcher_debug" type="service_closure" id=".console.command.event_dispatcher_debug.lazy"/>
        <argument key="console.command.router_debug" type="service_closure" id=".console.command.router_debug.lazy"/>
        <argument key="console.command.router_match" type="service_closure" id=".console.command.router_match.lazy"/>
        <argument key="console.command.serializer_debug" type="service_closure" id=".console.command.serializer_debug.lazy"/>
        <argument key="console.command.validator_debug" type="service_closure" id=".console.command.validator_debug.lazy"/>
        <argument key="console.command.yaml_lint" type="service_closure" id=".console.command.yaml_lint.lazy"/>
        <argument key="console.command.secrets_set" type="service_closure" id=".console.command.secrets_set.lazy"/>
        <argument key="console.command.secrets_remove" type="service_closure" id=".console.command.secrets_remove.lazy"/>
        <argument key="console.command.secrets_generate_key" type="service_closure" id=".console.command.secrets_generate_key.lazy"/>
        <argument key="console.command.secrets_list" type="service_closure" id=".console.command.secrets_list.lazy"/>
        <argument key="console.command.secrets_reveal" type="service_closure" id=".console.command.secrets_reveal.lazy"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service_closure" id=".console.command.secrets_decrypt_to_local.lazy"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service_closure" id=".console.command.secrets_encrypt_from_local.lazy"/>
        <argument key="console.command.error_dumper" type="service_closure" id=".console.command.error_dumper.lazy"/>
        <argument key="twig.command.debug" type="service_closure" id=".twig.command.debug.lazy"/>
        <argument key="twig.command.lint" type="service_closure" id=".twig.command.lint.lazy"/>
        <argument key="security.command.debug_firewall" type="service_closure" id=".security.command.debug_firewall.lazy"/>
        <argument key="security.command.user_password_hash" type="service_closure" id=".security.command.user_password_hash.lazy"/>
        <argument key="doctrine.database_create_command" type="service_closure" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service_closure" id="doctrine.database_drop_command"/>
        <argument key="doctrine.query_sql_command" type="service_closure" id="doctrine.query_sql_command"/>
        <argument key="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" type="service_closure" id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service_closure" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service_closure" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service_closure" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service_closure" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.schema_create_command" type="service_closure" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service_closure" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service_closure" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.mapping_info_command" type="service_closure" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.clear_query_region_command" type="service_closure" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.query_dql_command" type="service_closure" id="doctrine.query_dql_command"/>
        <argument key="doctrine.schema_update_command" type="service_closure" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service_closure" id="doctrine.schema_validate_command"/>
        <argument key="doctrine_migrations.diff_command" type="service_closure" id=".doctrine_migrations.diff_command.lazy"/>
        <argument key="doctrine_migrations.sync_metadata_command" type="service_closure" id=".doctrine_migrations.sync_metadata_command.lazy"/>
        <argument key="doctrine_migrations.versions_command" type="service_closure" id=".doctrine_migrations.versions_command.lazy"/>
        <argument key="doctrine_migrations.current_command" type="service_closure" id=".doctrine_migrations.current_command.lazy"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service_closure" id=".doctrine_migrations.dump_schema_command.lazy"/>
        <argument key="doctrine_migrations.execute_command" type="service_closure" id=".doctrine_migrations.execute_command.lazy"/>
        <argument key="doctrine_migrations.generate_command" type="service_closure" id=".doctrine_migrations.generate_command.lazy"/>
        <argument key="doctrine_migrations.latest_command" type="service_closure" id=".doctrine_migrations.latest_command.lazy"/>
        <argument key="doctrine_migrations.migrate_command" type="service_closure" id=".doctrine_migrations.migrate_command.lazy"/>
        <argument key="doctrine_migrations.rollup_command" type="service_closure" id=".doctrine_migrations.rollup_command.lazy"/>
        <argument key="doctrine_migrations.status_command" type="service_closure" id=".doctrine_migrations.status_command.lazy"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service_closure" id=".doctrine_migrations.up_to_date_command.lazy"/>
        <argument key="doctrine_migrations.version_command" type="service_closure" id=".doctrine_migrations.version_command.lazy"/>
        <argument key="api_platform.json_schema.json_schema_generate_command" type="service_closure" id="api_platform.json_schema.json_schema_generate_command"/>
        <argument key="api_platform.openapi.command" type="service_closure" id="api_platform.openapi.command"/>
        <argument key="debug.api_platform.debug_resource.command" type="service_closure" id="debug.api_platform.debug_resource.command"/>
        <argument key="lexik_jwt_authentication.check_config_command" type="service_closure" id=".lexik_jwt_authentication.check_config_command.lazy"/>
        <argument key="lexik_jwt_authentication.migrate_config_command" type="service_closure" id=".lexik_jwt_authentication.migrate_config_command.lazy"/>
        <argument key="lexik_jwt_authentication.enable_encryption_config_command" type="service_closure" id=".lexik_jwt_authentication.enable_encryption_config_command.lazy"/>
        <argument key="lexik_jwt_authentication.generate_token_command" type="service_closure" id=".lexik_jwt_authentication.generate_token_command.lazy"/>
        <argument key="lexik_jwt_authentication.generate_keypair_command" type="service_closure" id=".lexik_jwt_authentication.generate_keypair_command.lazy"/>
      </argument>
    </service>
    <service id=".service_locator.QoTGqUC" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service_closure" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service_closure" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Bridge\Twig\Extension\SerializerRuntime" type="service_closure" id="twig.runtime.serializer"/>
      </argument>
    </service>
    <service id="App\Kernel" alias="kernel" public="true"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Psr\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack"/>
    <service id="Symfony\Component\HttpKernel\HttpCache\StoreInterface" alias="http_cache.store"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator"/>
    <service id="Symfony\Component\HttpFoundation\UriSigner" alias="uri_signer"/>
    <service id="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetterInterface" alias="services_resetter"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container"/>
    <service id="Symfony\Component\String\Slugger\SluggerInterface" alias="slugger"/>
    <service id="Symfony\Component\Clock\ClockInterface" alias="clock"/>
    <service id="Psr\Clock\ClockInterface" alias="clock"/>
    <service id="Symfony\Component\HttpKernel\Fragment\FragmentUriGeneratorInterface" alias="fragment.uri_generator"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.serializer"/>
    <service id=".Psr\Container\ContainerInterface $parameter_bag" alias="parameter_bag"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.adapter.valkey" alias="cache.adapter.redis"/>
    <service id="cache.adapter.valkey_tag_aware" alias="cache.adapter.redis_tag_aware"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\NamespacedPoolInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages"/>
    <service id="Symfony\Contracts\HttpClient\HttpClientInterface" alias="http_client.uri_template"/>
    <service id="Symfony\Component\ErrorHandler\ErrorRenderer\FileLinkFormatter" alias="debug.file_link_formatter"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="serializer"/>
    <service id="serializer.property_accessor" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver"/>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="api_platform.serializer.mapping.class_metadata_factory"/>
    <service id="error_renderer.serializer" alias="error_handler.error_renderer.serializer"/>
    <service id="Symfony\Component\TypeInfo\TypeResolver\TypeResolverInterface" alias="type_info.resolver"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="Symfony\Component\WebLink\HttpHeaderSerializer" alias="web_link.http_header_serializer"/>
    <service id="Symfony\Component\Uid\Factory\UlidFactory" alias="ulid.factory"/>
    <service id="Symfony\Component\Uid\Factory\UuidFactory" alias="uuid.factory"/>
    <service id="Symfony\Component\Uid\Factory\NameBasedUuidFactory" alias="name_based_uuid.factory"/>
    <service id="Symfony\Component\Uid\Factory\RandomBasedUuidFactory" alias="random_based_uuid.factory"/>
    <service id="Symfony\Component\Uid\Factory\TimeBasedUuidFactory" alias="time_based_uuid.factory"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.MfCypIA"/>
    <service id="cache.default_valkey_provider" alias=".cache_connection.H8vabc8"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.8kvDmRs"/>
    <service id="cache.default_doctrine_dbal_provider" alias="doctrine.dbal.default_connection"/>
    <service id="SessionHandlerInterface" alias="session.handler.native"/>
    <service id="session.storage.factory" alias="session.storage.factory.mock_file"/>
    <service id="session.handler" alias="session.handler.native"/>
    <service id="session_listener" alias="test.session.listener"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="validator"/>
    <service id="validator.mapping.class_metadata_factory" alias="validator"/>
    <service id="Twig\Environment" alias="twig"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker"/>
    <service id="Symfony\Component\Security\Core\Authorization\UserAuthorizationCheckerInterface" alias="security.authorization_checker"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage"/>
    <service id="Symfony\Bundle\SecurityBundle\Security" alias="security.helper"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall"/>
    <service id="Symfony\Component\Security\Http\FirewallMapInterface" alias="security.firewall.map"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils"/>
    <service id="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" alias="security.password_hasher_factory"/>
    <service id="security.password_hasher" alias="security.user_password_hasher"/>
    <service id="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" alias="security.user_password_hasher"/>
    <service id="Symfony\Component\Security\Http\Authentication\UserAuthenticatorInterface" alias="security.user_authenticator"/>
    <service id="security.firewall" alias="debug.security.firewall"/>
    <service id="security.user.provider.concrete.app_user_provider" alias="App\Repository\UserRepository"/>
    <service id="security.user_providers" alias="App\Repository\UserRepository"/>
    <service id="Symfony\Component\Security\Core\User\UserProviderInterface" alias="App\Repository\UserRepository"/>
    <service id="security.authentication.session_strategy.api" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.api" alias="security.user_checker"/>
    <service id="security.firewall.context_locator" alias=".service_locator.shxE9gp"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager"/>
    <service id=".Doctrine\DBAL\Connection $default.connection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\DBAL\Connection $defaultConnection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="cache.doctrine.orm.default.metadata"/>
    <service id="doctrine.orm.default_result_cache" alias="cache.doctrine.orm.default.result"/>
    <service id="doctrine.orm.default_query_cache" alias="cache.doctrine.orm.default.query"/>
    <service id=".Doctrine\ORM\EntityManagerInterface $default.entity_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="Doctrine\ORM\EntityManagerInterface $defaultEntityManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager"/>
    <service id="doctrine.migrations.metadata_storage" alias="doctrine.migrations.storage.table_storage"/>
    <service id="api_platform.state_provider" alias="api_platform.state_provider.locator"/>
    <service id="ApiPlatform\State\Pagination\Pagination" alias="api_platform.pagination"/>
    <service id="ApiPlatform\State\Pagination\PaginationOptions" alias="api_platform.pagination_options"/>
    <service id="ApiPlatform\State\CreateProvider" alias="api_platform.state_provider.create"/>
    <service id="ApiPlatform\State\ObjectProvider" alias="api_platform.state_provider.object"/>
    <service id="ApiPlatform\State\SerializerContextBuilderInterface" alias="api_platform.openapi.serializer_context_builder"/>
    <service id="ApiPlatform\Symfony\Action\NotFoundAction" alias="api_platform.action.not_found" public="true"/>
    <service id="ApiPlatform\Symfony\Action\NotExposedAction" alias="api_platform.action.not_exposed" public="true"/>
    <service id="api_platform.serializer" alias="serializer"/>
    <service id="api_platform.property_accessor" alias="property_accessor"/>
    <service id="api_platform.property_info" alias="property_info"/>
    <service id="ApiPlatform\Metadata\ResourceClassResolverInterface" alias="api_platform.resource_class_resolver"/>
    <service id="ApiPlatform\Metadata\UrlGeneratorInterface" alias="api_platform.router"/>
    <service id="ApiPlatform\Serializer\Filter\PropertyFilter" alias="api_platform.serializer.property_filter"/>
    <service id="ApiPlatform\Serializer\Filter\GroupFilter" alias="api_platform.serializer.group_filter"/>
    <service id="api_platform.identifiers_extractor" alias="api_platform.api.identifiers_extractor"/>
    <service id="ApiPlatform\Metadata\IdentifiersExtractorInterface" alias="api_platform.api.identifiers_extractor"/>
    <service id="api_platform.iri_converter" alias="api_platform.symfony.iri_converter"/>
    <service id="ApiPlatform\Metadata\IriConverterInterface" alias="api_platform.symfony.iri_converter"/>
    <service id="api_platform.state_provider.main" alias="api_platform.state_provider.content_negotiation"/>
    <service id="api_platform.state_processor.main" alias="api_platform.state_processor.write"/>
    <service id="api_platform.path_segment_name_generator" alias="api_platform.metadata.path_segment_name_generator.underscore"/>
    <service id="api_platform.inflector" alias="api_platform.metadata.inflector"/>
    <service id="api_platform.metadata.resource.name_collection_factory" alias="api_platform.metadata.resource.name_collection_factory.cached"/>
    <service id="ApiPlatform\Metadata\Resource\Factory\ResourceNameCollectionFactoryInterface" alias="api_platform.metadata.resource.name_collection_factory.cached"/>
    <service id="api_platform.metadata.property.name_collection_factory" alias="api_platform.metadata.property.name_collection_factory.cached"/>
    <service id="ApiPlatform\Metadata\Property\Factory\PropertyNameCollectionFactoryInterface" alias="api_platform.metadata.property.name_collection_factory.cached"/>
    <service id="api_platform.metadata.property.metadata_factory" alias="api_platform.metadata.property.metadata_factory.cached"/>
    <service id="ApiPlatform\Metadata\Property\Factory\PropertyMetadataFactoryInterface" alias="api_platform.metadata.property.metadata_factory.cached"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory" alias="api_platform.metadata.resource.metadata_collection_factory.cached"/>
    <service id="ApiPlatform\Metadata\Resource\Factory\ResourceMetadataCollectionFactoryInterface" alias="api_platform.metadata.resource.metadata_collection_factory.cached"/>
    <service id="ApiPlatform\Metadata\Operation\Factory\OperationMetadataFactoryInterface" alias="api_platform.metadata.operation.metadata_factory"/>
    <service id="ApiPlatform\JsonSchema\SchemaFactoryInterface" alias="api_platform.json_schema.backward_compatible_schema_factory"/>
    <service id="ApiPlatform\OpenApi\Serializer\OpenApiNormalizer" alias="api_platform.openapi.normalizer.legacy"/>
    <service id="ApiPlatform\OpenApi\Options" alias="api_platform.openapi.options"/>
    <service id="ApiPlatform\OpenApi\Factory\OpenApiFactoryInterface" alias="api_platform.openapi.factory"/>
    <service id="ApiPlatform\Doctrine\Common\State\RemoveProcessor" alias="api_platform.doctrine.orm.state.remove_processor"/>
    <service id="ApiPlatform\Doctrine\Common\State\PersistProcessor" alias="api_platform.doctrine.orm.state.persist_processor"/>
    <service id="ApiPlatform\Doctrine\Orm\Filter\OrderFilter" alias="api_platform.doctrine.orm.order_filter"/>
    <service id="ApiPlatform\Doctrine\Orm\Filter\RangeFilter" alias="api_platform.doctrine.orm.range_filter"/>
    <service id="ApiPlatform\Doctrine\Orm\Filter\DateFilter" alias="api_platform.doctrine.orm.date_filter"/>
    <service id="ApiPlatform\Doctrine\Orm\Filter\BackedEnumFilter" alias="api_platform.doctrine.orm.backed_enum_filter"/>
    <service id="ApiPlatform\Doctrine\Orm\Filter\BooleanFilter" alias="api_platform.doctrine.orm.boolean_filter"/>
    <service id="ApiPlatform\Doctrine\Orm\Filter\NumericFilter" alias="api_platform.doctrine.orm.numeric_filter"/>
    <service id="ApiPlatform\Doctrine\Orm\Filter\ExistsFilter" alias="api_platform.doctrine.orm.exists_filter"/>
    <service id="ApiPlatform\Doctrine\Orm\Extension\EagerLoadingExtension" alias="api_platform.doctrine.orm.query_extension.eager_loading"/>
    <service id="ApiPlatform\Doctrine\Orm\Extension\FilterExtension" alias="api_platform.doctrine.orm.query_extension.filter"/>
    <service id="ApiPlatform\Doctrine\Orm\Extension\FilterEagerLoadingExtension" alias="api_platform.doctrine.orm.query_extension.filter_eager_loading"/>
    <service id="ApiPlatform\Doctrine\Orm\Extension\PaginationExtension" alias="api_platform.doctrine.orm.query_extension.pagination"/>
    <service id="ApiPlatform\Doctrine\Orm\Extension\OrderExtension" alias="api_platform.doctrine.orm.query_extension.order"/>
    <service id="ApiPlatform\Doctrine\Orm\Extension\ParameterExtension" alias="api_platform.doctrine.orm.extension.parameter_extension"/>
    <service id="ApiPlatform\Doctrine\Orm\State\CollectionProvider" alias="api_platform.doctrine.orm.state.collection_provider"/>
    <service id="ApiPlatform\Doctrine\Orm\State\ItemProvider" alias="api_platform.doctrine.orm.state.item_provider"/>
    <service id="api_platform.state.item_provider" alias="api_platform.doctrine.orm.state.item_provider"/>
    <service id="ApiPlatform\Doctrine\Orm\Filter\SearchFilter" alias="api_platform.doctrine.orm.search_filter"/>
    <service id="ApiPlatform\Validator\ValidatorInterface" alias="api_platform.validator"/>
    <service id="api_platform.security.expression_language" alias="security.expression_language"/>
    <service id="ApiPlatform\Metadata\ResourceAccessCheckerInterface" alias="api_platform.security.resource_access_checker"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenManagerInterface" alias="lexik_jwt_authentication.jwt_manager"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\JWSProviderInterface" alias="lexik_jwt_authentication.jws_provider.lcobucci"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler" alias="lexik_jwt_authentication.handler.authentication_success"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler" alias="lexik_jwt_authentication.handler.authentication_failure"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\TokenExtractorInterface" alias="lexik_jwt_authentication.extractor.chain_extractor"/>
    <service id="lexik_jwt_authentication.encoder" alias="lexik_jwt_authentication.encoder.lcobucci" public="true"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Encoder\JWTEncoderInterface" alias="lexik_jwt_authentication.encoder.lcobucci"/>
    <service id="lexik_jwt_authentication.key_loader" alias="lexik_jwt_authentication.key_loader.raw" public="true"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.pRu6x_4" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.F6vdjrP"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id="doctrine.id_generator_locator" alias=".service_locator.BxSdgVt"/>
    <service id="api_platform.name_converter" alias="api_platform.hydra.name_converter.hydra_prefix"/>
    <service id="Psr\Log\LoggerInterface $requestLogger" alias="monolog.logger.request"/>
    <service id="Psr\Log\LoggerInterface $consoleLogger" alias="monolog.logger.console"/>
    <service id="Psr\Log\LoggerInterface $cacheLogger" alias="monolog.logger.cache"/>
    <service id=".Psr\Log\LoggerInterface $http_clientLogger" alias="monolog.logger.http_client"/>
    <service id="Psr\Log\LoggerInterface $httpClientLogger" alias="monolog.logger.http_client"/>
    <service id="Psr\Log\LoggerInterface $phpLogger" alias="monolog.logger.php"/>
    <service id="Psr\Log\LoggerInterface $eventLogger" alias="monolog.logger.event"/>
    <service id="Psr\Log\LoggerInterface $routerLogger" alias="monolog.logger.router"/>
    <service id="Psr\Log\LoggerInterface $securityLogger" alias="monolog.logger.security"/>
    <service id="Psr\Log\LoggerInterface $doctrineLogger" alias="monolog.logger.doctrine"/>
    <service id="Psr\Log\LoggerInterface $deprecationLogger" alias="monolog.logger.deprecation"/>
    <service id=".service_locator.9LJrHhf" alias="api_platform.serializer_locator"/>
    <service id=".service_locator.t1emxJo" alias="api_platform.filter_locator"/>
    <service id=".service_locator.xvaIO5O" alias=".service_locator.4xBqg6G"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.parameter.inner" alias="api_platform.metadata.resource.metadata_collection_factory.attributes"/>
    <service id="api_platform.validator.metadata.resource.metadata_collection_factory.parameter.inner" alias="api_platform.metadata.resource.metadata_collection_factory.parameter"/>
    <service id="api_platform.metadata.resource.name_collection_factory.concerns.inner" alias="api_platform.metadata.resource.name_collection_factory.xml"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.xml.inner" alias="api_platform.validator.metadata.resource.metadata_collection_factory.parameter"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.concerns.inner" alias="api_platform.metadata.resource.metadata_collection_factory.xml"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.yaml.inner" alias="api_platform.metadata.resource.metadata_collection_factory.concerns"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation.inner" alias="api_platform.metadata.resource.metadata_collection_factory.yaml"/>
    <service id="api_platform.state_provider.read.inner" alias="api_platform.state_provider.locator"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.backed_enum.inner" alias="api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.uri_template.inner" alias="api_platform.metadata.resource.metadata_collection_factory.backed_enum"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.main_controller.inner" alias="api_platform.metadata.resource.metadata_collection_factory.uri_template"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.link.inner" alias="api_platform.metadata.resource.metadata_collection_factory.main_controller"/>
    <service id="api_platform.state_processor.respond" alias="api_platform.http_cache.processor.add_headers"/>
    <service id="api_platform.state_provider.deserialize.inner" alias="api_platform.state_provider.security_parameter"/>
    <service id="api_platform.state_processor.serialize.inner" alias="api_platform.http_cache.processor.add_headers"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.operation_name.inner" alias="api_platform.metadata.resource.metadata_collection_factory.link"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.input_output.inner" alias="api_platform.metadata.resource.metadata_collection_factory.operation_name"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.formats.inner" alias="api_platform.metadata.resource.metadata_collection_factory.input_output"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.filters.inner" alias="api_platform.metadata.resource.metadata_collection_factory.formats"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.alternate_uri.inner" alias="api_platform.metadata.resource.metadata_collection_factory.filters"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.php_doc.inner" alias="api_platform.metadata.resource.metadata_collection_factory.alternate_uri"/>
    <service id="api_platform.state_provider.validate.inner" alias="api_platform.state_provider.access_checker.post_deserialize"/>
    <service id="api_platform.state_provider.parameter_validator.inner" alias="api_platform.state_provider.access_checker.post_validate"/>
    <service id="api_platform.state_provider.parameter.inner" alias="api_platform.state_provider.parameter_validator"/>
    <service id="api_platform.state_provider.content_negotiation.inner" alias="api_platform.state_provider.parameter"/>
    <service id="api_platform.state_processor.write.inner" alias="api_platform.state_processor.serialize"/>
    <service id="api_platform.metadata.property.metadata_factory.property_info.inner" alias="api_platform.metadata.property.metadata_factory.xml"/>
    <service id="api_platform.doctrine.orm.metadata.property.metadata_factory.inner" alias="api_platform.metadata.property.metadata_factory.property_info"/>
    <service id="api_platform.doctrine.orm.metadata.resource.metadata_collection_factory.inner" alias="api_platform.metadata.resource.metadata_collection_factory.php_doc"/>
    <service id="api_platform.metadata.resource.link_factory" alias="api_platform.doctrine.orm.metadata.resource.link_factory"/>
    <service id="api_platform.metadata.property.metadata_factory.serializer.inner" alias="api_platform.doctrine.orm.metadata.property.metadata_factory"/>
    <service id="api_platform.metadata.property.metadata_factory.default_property.inner" alias="api_platform.metadata.property.metadata_factory.serializer"/>
    <service id="api_platform.metadata.property.metadata_factory.identifier.inner" alias="api_platform.metadata.property.metadata_factory.default_property"/>
    <service id="api_platform.metadata.property.metadata_factory.attribute.inner" alias="api_platform.metadata.property.metadata_factory.identifier"/>
    <service id="api_platform.metadata.property.metadata_factory.yaml.inner" alias="api_platform.metadata.property.metadata_factory.attribute"/>
    <service id="api_platform.metadata.property.metadata_factory.validator.inner" alias="api_platform.metadata.property.metadata_factory.yaml"/>
    <service id="api_platform.json_schema.metadata.property.metadata_factory.schema.inner" alias="api_platform.metadata.property.metadata_factory.validator"/>
    <service id="http_client" alias="http_client.uri_template"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver"/>
    <service id="argument_resolver" alias="debug.argument_resolver"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager"/>
    <service id="security.firewall.authenticator.api" alias="debug.security.firewall.authenticator.api"/>
    <service id="api_platform.serializer.context_builder" alias="api_platform.openapi.serializer_context_builder"/>
    <service id="api_platform.state_processor.add_link_header.inner" alias="api_platform.hydra.processor.link"/>
    <service id="api_platform.metadata.resource.name_collection_factory.attributes.inner" alias="api_platform.metadata.resource.name_collection_factory.concerns"/>
    <service id="api_platform.metadata.resource.name_collection_factory.class_name.inner" alias="api_platform.metadata.resource.name_collection_factory.attributes"/>
    <service id="api_platform.metadata.property.name_collection_factory.xml.inner" alias="api_platform.metadata.property.name_collection_factory.property_info"/>
    <service id="api_platform.metadata.property.name_collection_factory.concerns.inner" alias="api_platform.metadata.property.name_collection_factory.xml"/>
    <service id="api_platform.metadata.resource.name_collection_factory.yaml.inner" alias="api_platform.metadata.resource.name_collection_factory.class_name"/>
    <service id="api_platform.metadata.property.name_collection_factory.yaml.inner" alias="api_platform.metadata.property.name_collection_factory.concerns"/>
    <service id="api_platform.openapi.serializer_context_builder.inner" alias="api_platform.serializer.context_builder.filter"/>
    <service id="api_platform.state_provider.read" alias="api_platform.state_provider.security_parameter"/>
    <service id="api_platform.json_schema.schema_factory" alias="api_platform.json_schema.backward_compatible_schema_factory"/>
    <service id="api_platform.hydra.normalizer.collection" alias="api_platform.hydra.normalizer.collection_filters"/>
    <service id="api_platform.hydra.normalizer.collection_filters.inner" alias="api_platform.hydra.normalizer.partial_collection_view"/>
    <service id="api_platform.hydra.name_converter.hydra_prefix.inner" alias="serializer.name_converter.metadata_aware"/>
    <service id="api_platform.http_cache.processor.add_headers.inner" alias="api_platform.state_processor.add_link_header"/>
    <service id="api_platform.state_provider.access_checker.inner" alias="api_platform.swagger_ui.provider"/>
    <service id="api_platform.state_provider.deserialize" alias="api_platform.state_provider.access_checker.post_deserialize"/>
    <service id="api_platform.state_provider.access_checker" alias="api_platform.state_provider.security_parameter"/>
    <service id="api_platform.state_provider.validate" alias="api_platform.state_provider.access_checker.post_validate"/>
    <service id="security.event_dispatcher.api" alias="debug.security.event_dispatcher.api"/>
    <service id="doctrine.orm.default_metadata_driver" alias=".doctrine.orm.default_metadata_driver"/>
    <service id="serializer.mapping.class_metadata_factory" alias="api_platform.serializer.mapping.class_metadata_factory"/>
    <service id="api_platform.openapi.normalizer" alias="api_platform.openapi.normalizer.legacy"/>
    <service id="api_platform.json_schema.backward_compatible_schema_factory.inner" alias="api_platform.hydra.json_schema.schema_factory"/>
    <service id="api_platform.openapi.normalizer.api_gateway" alias="api_platform.openapi.normalizer.legacy"/>
    <service id="api_platform.metadata.resource.name_collection_factory.cached.inner" alias="api_platform.metadata.resource.name_collection_factory.yaml"/>
    <service id="api_platform.metadata.property.name_collection_factory.cached.inner" alias="api_platform.metadata.property.name_collection_factory.yaml"/>
    <service id="api_platform.metadata.property.metadata_factory.cached.inner" alias="api_platform.json_schema.metadata.property.metadata_factory.schema"/>
    <service id="api_platform.metadata.resource.metadata_collection_factory.cached.inner" alias="api_platform.doctrine.orm.metadata.resource.metadata_collection_factory"/>
    <service id=".service_locator.n_ENPtW" alias=".service_locator.zHyJIs5"/>
    <service id=".service_locator.BkMMBek" alias=".service_locator.ZyP9f7K"/>
  </services>
</container>
