<?php //App_Entity_MediaAsset

return [PHP_INT_MAX, static fn () => \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'App\\Entity\\MediaAsset',
                'id',
                'ownerClient',
                'filename',
                'originalFilename',
                'mimeType',
                'fileSize',
                'storageKey',
                'storageProvider',
                'title',
                'description',
                'altText',
                'type',
                'dimensions',
                'metadata',
                'processingStatus',
                'status',
                'uploadedAt',
                'createdAt',
                'updatedAt',
                'storagePath',
                'fileSizeFormatted',
                'width',
                'height',
                'image',
                'video',
                'document',
                'audio',
                'streamUrl',
                'thumbnailUrl',
                'metaValue',
                'clientId',
                'tenantId',
                'createdAtValue',
                'updatedAtValue',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'ownerClient' => $o[2],
                    'filename' => $o[3],
                    'originalFilename' => $o[4],
                    'mimeType' => $o[5],
                    'fileSize' => $o[6],
                    'storageKey' => $o[7],
                    'storageProvider' => $o[8],
                    'title' => $o[9],
                    'description' => $o[10],
                    'altText' => $o[11],
                    'type' => $o[12],
                    'dimensions' => $o[13],
                    'metadata' => $o[14],
                    'processingStatus' => $o[15],
                    'status' => $o[16],
                    'uploadedAt' => $o[17],
                    'createdAt' => $o[18],
                    'updatedAt' => $o[19],
                    'storagePath' => $o[20],
                    'fileSizeFormatted' => $o[21],
                    'width' => $o[22],
                    'height' => $o[23],
                    'image' => $o[24],
                    'video' => $o[25],
                    'document' => $o[26],
                    'audio' => $o[27],
                    'streamUrl' => $o[28],
                    'thumbnailUrl' => $o[29],
                    'metaValue' => $o[30],
                    'clientId' => $o[31],
                    'tenantId' => $o[32],
                    'createdAtValue' => $o[33],
                    'updatedAtValue' => $o[34],
                ],
            ],
            'groups' => [
                18 => [
                    'lead:read',
                    'lead:admin:read',
                    'campaign:read',
                    'campaign:admin:read',
                    'case_study:read',
                    'case_study:admin:read',
                ],
                [
                    'lead:read',
                    'lead:admin:read',
                    'campaign:read',
                    'campaign:admin:read',
                    'case_study:read',
                    'case_study:admin:read',
                ],
            ],
        ],
    ],
    $o[0],
    []
)];
