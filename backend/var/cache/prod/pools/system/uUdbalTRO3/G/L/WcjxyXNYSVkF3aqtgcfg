<?php //App_Entity_AuditIntake

return [PHP_INT_MAX, static fn () => \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'App\\Entity\\AuditIntake',
                'id',
                'client',
                'requestedBy',
                'contactName',
                'contactEmail',
                'contactPhone',
                'websiteUrl',
                'subdomains',
                'stagingUrl',
                'cms',
                'cmsVersion',
                'hostingProvider',
                'techStack',
                'hasGoogleAnalytics',
                'hasSearchConsole',
                'hasGoogleBusinessProfile',
                'hasTagManager',
                'gaPropertyId',
                'gscProperty',
                'gbpLocationIds',
                'gtmContainerId',
                'markets',
                'primaryServices',
                'targetAudience',
                'paidChannels',
                'notes',
                'status',
                'robotsTxtUrl',
                'sitemapXmlUrl',
                'goals',
                'competitors',
                'keywords',
                'createdAt',
                'updatedAt',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'client' => $o[2],
                    'requestedBy' => $o[3],
                    'contactName' => $o[4],
                    'contactEmail' => $o[5],
                    'contactPhone' => $o[6],
                    'websiteUrl' => $o[7],
                    'subdomains' => $o[8],
                    'stagingUrl' => $o[9],
                    'cms' => $o[10],
                    'cmsVersion' => $o[11],
                    'hostingProvider' => $o[12],
                    'techStack' => $o[13],
                    'hasGoogleAnalytics' => $o[14],
                    'hasSearchConsole' => $o[15],
                    'hasGoogleBusinessProfile' => $o[16],
                    'hasTagManager' => $o[17],
                    'gaPropertyId' => $o[18],
                    'gscProperty' => $o[19],
                    'gbpLocationIds' => $o[20],
                    'gtmContainerId' => $o[21],
                    'markets' => $o[22],
                    'primaryServices' => $o[23],
                    'targetAudience' => $o[24],
                    'paidChannels' => $o[25],
                    'notes' => $o[26],
                    'status' => $o[27],
                    'robotsTxtUrl' => $o[28],
                    'sitemapXmlUrl' => $o[29],
                    'goals' => $o[30],
                    'competitors' => $o[31],
                    'keywords' => $o[32],
                    'createdAt' => $o[33],
                    'updatedAt' => $o[34],
                ],
            ],
        ],
    ],
    $o[0],
    []
)];
