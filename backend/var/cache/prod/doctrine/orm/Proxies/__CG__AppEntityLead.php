<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Lead extends \App\Entity\Lead implements \Doctrine\ORM\Proxy\InternalProxy
{
    use \Symfony\Component\VarExporter\LazyGhostTrait {
        initializeLazyObject as private;
        setLazyObjectAsInitialized as public __setInitialized;
        isLazyObjectInitialized as private;
        createLazyGhost as private;
        resetLazyObject as private;
    }

    public function __load(): void
    {
        $this->initializeLazyObject();
    }
    

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'city' => [parent::class, 'city', null, 16],
        "\0".parent::class."\0".'client' => [parent::class, 'client', null, 16],
        "\0".parent::class."\0".'createdAt' => [parent::class, 'createdAt', null, 16],
        "\0".parent::class."\0".'email' => [parent::class, 'email', null, 16],
        "\0".parent::class."\0".'events' => [parent::class, 'events', null, 16],
        "\0".parent::class."\0".'firm' => [parent::class, 'firm', null, 16],
        "\0".parent::class."\0".'followUpDate' => [parent::class, 'followUpDate', null, 16],
        "\0".parent::class."\0".'fullName' => [parent::class, 'fullName', null, 16],
        "\0".parent::class."\0".'id' => [parent::class, 'id', null, 16],
        "\0".parent::class."\0".'interviewScheduled' => [parent::class, 'interviewScheduled', null, 16],
        "\0".parent::class."\0".'isTest' => [parent::class, 'isTest', null, 16],
        "\0".parent::class."\0".'message' => [parent::class, 'message', null, 16],
        "\0".parent::class."\0".'notes' => [parent::class, 'notes', null, 16],
        "\0".parent::class."\0".'phone' => [parent::class, 'phone', null, 16],
        "\0".parent::class."\0".'practiceAreas' => [parent::class, 'practiceAreas', null, 16],
        "\0".parent::class."\0".'source' => [parent::class, 'source', null, 16],
        "\0".parent::class."\0".'state' => [parent::class, 'state', null, 16],
        "\0".parent::class."\0".'status' => [parent::class, 'status', null, 16],
        "\0".parent::class."\0".'updatedAt' => [parent::class, 'updatedAt', null, 16],
        "\0".parent::class."\0".'utmJson' => [parent::class, 'utmJson', null, 16],
        "\0".parent::class."\0".'website' => [parent::class, 'website', null, 16],
        "\0".parent::class."\0".'zipCode' => [parent::class, 'zipCode', null, 16],
        'city' => [parent::class, 'city', null, 16],
        'client' => [parent::class, 'client', null, 16],
        'createdAt' => [parent::class, 'createdAt', null, 16],
        'email' => [parent::class, 'email', null, 16],
        'events' => [parent::class, 'events', null, 16],
        'firm' => [parent::class, 'firm', null, 16],
        'followUpDate' => [parent::class, 'followUpDate', null, 16],
        'fullName' => [parent::class, 'fullName', null, 16],
        'id' => [parent::class, 'id', null, 16],
        'interviewScheduled' => [parent::class, 'interviewScheduled', null, 16],
        'isTest' => [parent::class, 'isTest', null, 16],
        'message' => [parent::class, 'message', null, 16],
        'notes' => [parent::class, 'notes', null, 16],
        'phone' => [parent::class, 'phone', null, 16],
        'practiceAreas' => [parent::class, 'practiceAreas', null, 16],
        'source' => [parent::class, 'source', null, 16],
        'state' => [parent::class, 'state', null, 16],
        'status' => [parent::class, 'status', null, 16],
        'updatedAt' => [parent::class, 'updatedAt', null, 16],
        'utmJson' => [parent::class, 'utmJson', null, 16],
        'website' => [parent::class, 'website', null, 16],
        'zipCode' => [parent::class, 'zipCode', null, 16],
    ];

    public function __isInitialized(): bool
    {
        return isset($this->lazyObjectState) && $this->isLazyObjectInitialized();
    }

    public function __serialize(): array
    {
        $properties = (array) $this;
        unset($properties["\0" . self::class . "\0lazyObjectState"]);

        return $properties;
    }
}
