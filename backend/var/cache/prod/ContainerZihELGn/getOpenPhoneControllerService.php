<?php

namespace ContainerZihELGn;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getOpenPhoneControllerService extends App_KernelProdContainer
{
    /*
     * Gets the public 'App\Controller\Api\V1\OpenPhoneController' shared autowired service.
     *
     * @return \App\Controller\Api\V1\OpenPhoneController
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container));

        $container->services['App\\Controller\\Api\\V1\\OpenPhoneController'] = $instance = new \App\Controller\Api\V1\OpenPhoneController($a, ($container->privates['App\\Service\\OpenPhoneApiService'] ?? $container->load('getOpenPhoneApiServiceService')), ($container->privates['validator'] ?? self::getValidatorService($container)), new \App\Service\NotificationService($a), ($container->privates['monolog.logger'] ?? self::getMonolog_LoggerService($container)));

        $instance->setContainer(($container->privates['.service_locator.ZyP9f7K'] ?? $container->load('get_ServiceLocator_ZyP9f7KService'))->withContext('App\\Controller\\Api\\V1\\OpenPhoneController', $container));

        return $instance;
    }
}
