<?php

namespace Container4qBStD5;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDocumentControllerService extends App_KernelProdContainer
{
    /*
     * Gets the public 'App\Controller\Api\V1\DocumentController' shared autowired service.
     *
     * @return \App\Controller\Api\V1\DocumentController
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->privates['validator'] ?? self::getValidatorService($container));
        $b = ($container->privates['App\\Repository\\DocumentRepository'] ?? $container->load('getDocumentRepositoryService'));
        $c = ($container->privates['App\\Repository\\DocumentTemplateRepository'] ?? $container->load('getDocumentTemplateRepositoryService'));
        $d = ($container->privates['App\\Repository\\ClientRepository'] ?? $container->load('getClientRepositoryService'));

        $container->services['App\\Controller\\Api\\V1\\DocumentController'] = $instance = new \App\Controller\Api\V1\DocumentController(new \App\Service\DocumentService(($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container)), ($container->privates['security.helper'] ?? $container->load('getSecurity_HelperService')), $a, $b, $c, ($container->privates['App\\Repository\\DocumentSignatureRepository'] ?? $container->load('getDocumentSignatureRepositoryService')), ($container->privates['App\\Repository\\DocumentVersionRepository'] ?? $container->load('getDocumentVersionRepositoryService')), $d, ($container->privates['App\\Repository\\MediaAssetRepository'] ?? $container->load('getMediaAssetRepositoryService'))), $b, $c, $d, $a, ($container->privates['serializer'] ?? self::getSerializerService($container)));

        $instance->setContainer(($container->privates['.service_locator.ZyP9f7K'] ?? $container->load('get_ServiceLocator_ZyP9f7KService'))->withContext('App\\Controller\\Api\\V1\\DocumentController', $container));

        return $instance;
    }
}
