<?php

namespace ContainerCg9ZlSb;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLeadsControllerService extends App_KernelProdContainer
{
    /*
     * Gets the public 'App\Controller\Api\V1\LeadsController' shared autowired service.
     *
     * @return \App\Controller\Api\V1\LeadsController
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->privates['App\\Repository\\LeadRepository'] ?? $container->load('getLeadRepositoryService'));
        $b = ($container->privates['App\\Repository\\ClientRepository'] ?? $container->load('getClientRepositoryService'));
        $c = ($container->privates['App\\Repository\\LeadSourceRepository'] ?? $container->load('getLeadSourceRepositoryService'));
        $d = ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container));

        $container->services['App\\Controller\\Api\\V1\\LeadsController'] = $instance = new \App\Controller\Api\V1\LeadsController($a, $b, $c, ($container->privates['App\\Repository\\LeadEventRepository'] ?? $container->load('getLeadEventRepositoryService')), new \App\Service\LeadgenIntegrationService($a, $c, $b, $d), $d, ($container->privates['validator'] ?? self::getValidatorService($container)));

        $instance->setContainer(($container->privates['.service_locator.ZyP9f7K'] ?? $container->load('get_ServiceLocator_ZyP9f7KService'))->withContext('App\\Controller\\Api\\V1\\LeadsController', $container));

        return $instance;
    }
}
