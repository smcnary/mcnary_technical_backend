<?php

namespace ContainerXYgVwW3;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAuthControllerService extends App_KernelProdContainer
{
    /*
     * Gets the public 'App\Controller\Api\V1\AuthController' shared autowired service.
     *
     * @return \App\Controller\Api\V1\AuthController
     */
    public static function do($container, $lazyLoad = true)
    {
        $container->services['App\\Controller\\Api\\V1\\AuthController'] = $instance = new \App\Controller\Api\V1\AuthController(($container->privates['App\\Repository\\UserRepository'] ?? $container->load('getUserRepositoryService')), ($container->privates['security.user_password_hasher'] ?? $container->load('getSecurity_UserPasswordHasherService')), ($container->services['lexik_jwt_authentication.jwt_manager'] ?? $container->load('getLexikJwtAuthentication_JwtManagerService')), ($container->privates['validator'] ?? self::getValidatorService($container)), ($container->privates['http_client.uri_template'] ?? $container->load('getHttpClient_UriTemplateService')), ($container->services['doctrine.orm.default_entity_manager'] ?? self::getDoctrine_Orm_DefaultEntityManagerService($container)), ($container->privates['App\\Repository\\OAuthConnectionRepository'] ?? $container->load('getOAuthConnectionRepositoryService')), ($container->privates['App\\Repository\\OAuthTokenRepository'] ?? $container->load('getOAuthTokenRepositoryService')), ($container->privates['App\\Repository\\ClientRepository'] ?? $container->load('getClientRepositoryService')), ($container->privates['monolog.logger'] ?? self::getMonolog_LoggerService($container)));

        $instance->setContainer(($container->privates['.service_locator.ZyP9f7K'] ?? $container->load('get_ServiceLocator_ZyP9f7KService'))->withContext('App\\Controller\\Api\\V1\\AuthController', $container));

        return $instance;
    }
}
